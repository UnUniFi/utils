/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
import * as $protobuf from "protobufjs/minimal";

// Common aliases
const $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
const $root = $protobuf.roots["ununifi-client"] || ($protobuf.roots["ununifi-client"] = {});

export const ununifi = $root.ununifi = (() => {

    /**
     * Namespace ununifi.
     * @exports ununifi
     * @namespace
     */
    const ununifi = {};

    ununifi.auction = (function() {

        /**
         * Namespace auction.
         * @memberof ununifi
         * @namespace
         */
        const auction = {};

        auction.Query = (function() {

            /**
             * Constructs a new Query service.
             * @memberof ununifi.auction
             * @classdesc Represents a Query
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Query(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;

            /**
             * Callback as used by {@link ununifi.auction.Query#params}.
             * @memberof ununifi.auction.Query
             * @typedef ParamsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.auction.QueryParamsResponse} [response] QueryParamsResponse
             */

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.auction.Query
             * @instance
             * @param {ununifi.auction.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @param {ununifi.auction.Query.ParamsCallback} callback Node-style callback called with the error, if any, and QueryParamsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.params = function params(request, callback) {
                return this.rpcCall(params, $root.ununifi.auction.QueryParamsRequest, $root.ununifi.auction.QueryParamsResponse, request, callback);
            }, "name", { value: "Params" });

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.auction.Query
             * @instance
             * @param {ununifi.auction.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @returns {Promise<ununifi.auction.QueryParamsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.auction.Query#auction}.
             * @memberof ununifi.auction.Query
             * @typedef AuctionCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.auction.QueryGetAuctionResponse} [response] QueryGetAuctionResponse
             */

            /**
             * Calls Auction.
             * @function auction
             * @memberof ununifi.auction.Query
             * @instance
             * @param {ununifi.auction.IQueryGetAuctionRequest} request QueryGetAuctionRequest message or plain object
             * @param {ununifi.auction.Query.AuctionCallback} callback Node-style callback called with the error, if any, and QueryGetAuctionResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.auction = function auction(request, callback) {
                return this.rpcCall(auction, $root.ununifi.auction.QueryGetAuctionRequest, $root.ununifi.auction.QueryGetAuctionResponse, request, callback);
            }, "name", { value: "Auction" });

            /**
             * Calls Auction.
             * @function auction
             * @memberof ununifi.auction.Query
             * @instance
             * @param {ununifi.auction.IQueryGetAuctionRequest} request QueryGetAuctionRequest message or plain object
             * @returns {Promise<ununifi.auction.QueryGetAuctionResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.auction.Query#auctionAll}.
             * @memberof ununifi.auction.Query
             * @typedef AuctionAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.auction.QueryAllAuctionResponse} [response] QueryAllAuctionResponse
             */

            /**
             * Calls AuctionAll.
             * @function auctionAll
             * @memberof ununifi.auction.Query
             * @instance
             * @param {ununifi.auction.IQueryAllAuctionRequest} request QueryAllAuctionRequest message or plain object
             * @param {ununifi.auction.Query.AuctionAllCallback} callback Node-style callback called with the error, if any, and QueryAllAuctionResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.auctionAll = function auctionAll(request, callback) {
                return this.rpcCall(auctionAll, $root.ununifi.auction.QueryAllAuctionRequest, $root.ununifi.auction.QueryAllAuctionResponse, request, callback);
            }, "name", { value: "AuctionAll" });

            /**
             * Calls AuctionAll.
             * @function auctionAll
             * @memberof ununifi.auction.Query
             * @instance
             * @param {ununifi.auction.IQueryAllAuctionRequest} request QueryAllAuctionRequest message or plain object
             * @returns {Promise<ununifi.auction.QueryAllAuctionResponse>} Promise
             * @variation 2
             */

            return Query;
        })();

        auction.QueryParamsRequest = (function() {

            /**
             * Properties of a QueryParamsRequest.
             * @memberof ununifi.auction
             * @interface IQueryParamsRequest
             */

            /**
             * Constructs a new QueryParamsRequest.
             * @memberof ununifi.auction
             * @classdesc Represents a QueryParamsRequest.
             * @implements IQueryParamsRequest
             * @constructor
             * @param {ununifi.auction.IQueryParamsRequest=} [properties] Properties to set
             */
            function QueryParamsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ununifi.auction.QueryParamsRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {ununifi.auction.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ununifi.auction.QueryParamsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {ununifi.auction.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.QueryParamsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsRequest message.
             * @function verify
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.QueryParamsRequest} QueryParamsRequest
             */
            QueryParamsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.QueryParamsRequest)
                    return object;
                return new $root.ununifi.auction.QueryParamsRequest();
            };

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.QueryParamsRequest
             * @static
             * @param {ununifi.auction.QueryParamsRequest} message QueryParamsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @function toJSON
             * @memberof ununifi.auction.QueryParamsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsRequest;
        })();

        auction.QueryParamsResponse = (function() {

            /**
             * Properties of a QueryParamsResponse.
             * @memberof ununifi.auction
             * @interface IQueryParamsResponse
             * @property {ununifi.auction.IParams|null} [params] QueryParamsResponse params
             */

            /**
             * Constructs a new QueryParamsResponse.
             * @memberof ununifi.auction
             * @classdesc Represents a QueryParamsResponse.
             * @implements IQueryParamsResponse
             * @constructor
             * @param {ununifi.auction.IQueryParamsResponse=} [properties] Properties to set
             */
            function QueryParamsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryParamsResponse params.
             * @member {ununifi.auction.IParams|null|undefined} params
             * @memberof ununifi.auction.QueryParamsResponse
             * @instance
             */
            QueryParamsResponse.prototype.params = null;

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ununifi.auction.QueryParamsResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {ununifi.auction.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.auction.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ununifi.auction.QueryParamsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {ununifi.auction.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.QueryParamsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.auction.Params.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsResponse message.
             * @function verify
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.auction.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                return null;
            };

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.QueryParamsResponse} QueryParamsResponse
             */
            QueryParamsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.QueryParamsResponse)
                    return object;
                let message = new $root.ununifi.auction.QueryParamsResponse();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.auction.QueryParamsResponse.params: object expected");
                    message.params = $root.ununifi.auction.Params.fromObject(object.params);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.QueryParamsResponse
             * @static
             * @param {ununifi.auction.QueryParamsResponse} message QueryParamsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.params = null;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.auction.Params.toObject(message.params, options);
                return object;
            };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @function toJSON
             * @memberof ununifi.auction.QueryParamsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsResponse;
        })();

        auction.QueryGetAuctionRequest = (function() {

            /**
             * Properties of a QueryGetAuctionRequest.
             * @memberof ununifi.auction
             * @interface IQueryGetAuctionRequest
             * @property {Long|null} [id] QueryGetAuctionRequest id
             */

            /**
             * Constructs a new QueryGetAuctionRequest.
             * @memberof ununifi.auction
             * @classdesc Represents a QueryGetAuctionRequest.
             * @implements IQueryGetAuctionRequest
             * @constructor
             * @param {ununifi.auction.IQueryGetAuctionRequest=} [properties] Properties to set
             */
            function QueryGetAuctionRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetAuctionRequest id.
             * @member {Long} id
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @instance
             */
            QueryGetAuctionRequest.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * Encodes the specified QueryGetAuctionRequest message. Does not implicitly {@link ununifi.auction.QueryGetAuctionRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {ununifi.auction.IQueryGetAuctionRequest} message QueryGetAuctionRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetAuctionRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.id);
                return writer;
            };

            /**
             * Encodes the specified QueryGetAuctionRequest message, length delimited. Does not implicitly {@link ununifi.auction.QueryGetAuctionRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {ununifi.auction.IQueryGetAuctionRequest} message QueryGetAuctionRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetAuctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetAuctionRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.QueryGetAuctionRequest} QueryGetAuctionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetAuctionRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.QueryGetAuctionRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.id = reader.uint64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetAuctionRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.QueryGetAuctionRequest} QueryGetAuctionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetAuctionRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetAuctionRequest message.
             * @function verify
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetAuctionRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.id != null && message.hasOwnProperty("id"))
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                return null;
            };

            /**
             * Creates a QueryGetAuctionRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.QueryGetAuctionRequest} QueryGetAuctionRequest
             */
            QueryGetAuctionRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.QueryGetAuctionRequest)
                    return object;
                let message = new $root.ununifi.auction.QueryGetAuctionRequest();
                if (object.id != null)
                    if ($util.Long)
                        (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                    else if (typeof object.id === "string")
                        message.id = parseInt(object.id, 10);
                    else if (typeof object.id === "number")
                        message.id = object.id;
                    else if (typeof object.id === "object")
                        message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
                return message;
            };

            /**
             * Creates a plain object from a QueryGetAuctionRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @static
             * @param {ununifi.auction.QueryGetAuctionRequest} message QueryGetAuctionRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetAuctionRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.id = options.longs === String ? "0" : 0;
                if (message.id != null && message.hasOwnProperty("id"))
                    if (typeof message.id === "number")
                        object.id = options.longs === String ? String(message.id) : message.id;
                    else
                        object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
                return object;
            };

            /**
             * Converts this QueryGetAuctionRequest to JSON.
             * @function toJSON
             * @memberof ununifi.auction.QueryGetAuctionRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetAuctionRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetAuctionRequest;
        })();

        auction.QueryGetAuctionResponse = (function() {

            /**
             * Properties of a QueryGetAuctionResponse.
             * @memberof ununifi.auction
             * @interface IQueryGetAuctionResponse
             * @property {google.protobuf.IAny|null} [auction] QueryGetAuctionResponse auction
             */

            /**
             * Constructs a new QueryGetAuctionResponse.
             * @memberof ununifi.auction
             * @classdesc Represents a QueryGetAuctionResponse.
             * @implements IQueryGetAuctionResponse
             * @constructor
             * @param {ununifi.auction.IQueryGetAuctionResponse=} [properties] Properties to set
             */
            function QueryGetAuctionResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetAuctionResponse auction.
             * @member {google.protobuf.IAny|null|undefined} auction
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @instance
             */
            QueryGetAuctionResponse.prototype.auction = null;

            /**
             * Encodes the specified QueryGetAuctionResponse message. Does not implicitly {@link ununifi.auction.QueryGetAuctionResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {ununifi.auction.IQueryGetAuctionResponse} message QueryGetAuctionResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetAuctionResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.auction != null && Object.hasOwnProperty.call(message, "auction"))
                    $root.google.protobuf.Any.encode(message.auction, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryGetAuctionResponse message, length delimited. Does not implicitly {@link ununifi.auction.QueryGetAuctionResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {ununifi.auction.IQueryGetAuctionResponse} message QueryGetAuctionResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetAuctionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetAuctionResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.QueryGetAuctionResponse} QueryGetAuctionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetAuctionResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.QueryGetAuctionResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.auction = $root.google.protobuf.Any.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetAuctionResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.QueryGetAuctionResponse} QueryGetAuctionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetAuctionResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetAuctionResponse message.
             * @function verify
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetAuctionResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.auction != null && message.hasOwnProperty("auction")) {
                    let error = $root.google.protobuf.Any.verify(message.auction);
                    if (error)
                        return "auction." + error;
                }
                return null;
            };

            /**
             * Creates a QueryGetAuctionResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.QueryGetAuctionResponse} QueryGetAuctionResponse
             */
            QueryGetAuctionResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.QueryGetAuctionResponse)
                    return object;
                let message = new $root.ununifi.auction.QueryGetAuctionResponse();
                if (object.auction != null) {
                    if (typeof object.auction !== "object")
                        throw TypeError(".ununifi.auction.QueryGetAuctionResponse.auction: object expected");
                    message.auction = $root.google.protobuf.Any.fromObject(object.auction);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryGetAuctionResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @static
             * @param {ununifi.auction.QueryGetAuctionResponse} message QueryGetAuctionResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetAuctionResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.auction = null;
                if (message.auction != null && message.hasOwnProperty("auction"))
                    object.auction = $root.google.protobuf.Any.toObject(message.auction, options);
                return object;
            };

            /**
             * Converts this QueryGetAuctionResponse to JSON.
             * @function toJSON
             * @memberof ununifi.auction.QueryGetAuctionResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetAuctionResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetAuctionResponse;
        })();

        auction.QueryAllAuctionRequest = (function() {

            /**
             * Properties of a QueryAllAuctionRequest.
             * @memberof ununifi.auction
             * @interface IQueryAllAuctionRequest
             * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllAuctionRequest pagination
             */

            /**
             * Constructs a new QueryAllAuctionRequest.
             * @memberof ununifi.auction
             * @classdesc Represents a QueryAllAuctionRequest.
             * @implements IQueryAllAuctionRequest
             * @constructor
             * @param {ununifi.auction.IQueryAllAuctionRequest=} [properties] Properties to set
             */
            function QueryAllAuctionRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllAuctionRequest pagination.
             * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @instance
             */
            QueryAllAuctionRequest.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllAuctionRequest message. Does not implicitly {@link ununifi.auction.QueryAllAuctionRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {ununifi.auction.IQueryAllAuctionRequest} message QueryAllAuctionRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAuctionRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllAuctionRequest message, length delimited. Does not implicitly {@link ununifi.auction.QueryAllAuctionRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {ununifi.auction.IQueryAllAuctionRequest} message QueryAllAuctionRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAuctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllAuctionRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.QueryAllAuctionRequest} QueryAllAuctionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAuctionRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.QueryAllAuctionRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllAuctionRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.QueryAllAuctionRequest} QueryAllAuctionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAuctionRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllAuctionRequest message.
             * @function verify
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllAuctionRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllAuctionRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.QueryAllAuctionRequest} QueryAllAuctionRequest
             */
            QueryAllAuctionRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.QueryAllAuctionRequest)
                    return object;
                let message = new $root.ununifi.auction.QueryAllAuctionRequest();
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.auction.QueryAllAuctionRequest.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllAuctionRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @static
             * @param {ununifi.auction.QueryAllAuctionRequest} message QueryAllAuctionRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllAuctionRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.pagination = null;
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllAuctionRequest to JSON.
             * @function toJSON
             * @memberof ununifi.auction.QueryAllAuctionRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllAuctionRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllAuctionRequest;
        })();

        auction.QueryAllAuctionResponse = (function() {

            /**
             * Properties of a QueryAllAuctionResponse.
             * @memberof ununifi.auction
             * @interface IQueryAllAuctionResponse
             * @property {Array.<google.protobuf.IAny>|null} [auctions] QueryAllAuctionResponse auctions
             * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllAuctionResponse pagination
             */

            /**
             * Constructs a new QueryAllAuctionResponse.
             * @memberof ununifi.auction
             * @classdesc Represents a QueryAllAuctionResponse.
             * @implements IQueryAllAuctionResponse
             * @constructor
             * @param {ununifi.auction.IQueryAllAuctionResponse=} [properties] Properties to set
             */
            function QueryAllAuctionResponse(properties) {
                this.auctions = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllAuctionResponse auctions.
             * @member {Array.<google.protobuf.IAny>} auctions
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @instance
             */
            QueryAllAuctionResponse.prototype.auctions = $util.emptyArray;

            /**
             * QueryAllAuctionResponse pagination.
             * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @instance
             */
            QueryAllAuctionResponse.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllAuctionResponse message. Does not implicitly {@link ununifi.auction.QueryAllAuctionResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {ununifi.auction.IQueryAllAuctionResponse} message QueryAllAuctionResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAuctionResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.auctions != null && message.auctions.length)
                    for (let i = 0; i < message.auctions.length; ++i)
                        $root.google.protobuf.Any.encode(message.auctions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllAuctionResponse message, length delimited. Does not implicitly {@link ununifi.auction.QueryAllAuctionResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {ununifi.auction.IQueryAllAuctionResponse} message QueryAllAuctionResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAuctionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllAuctionResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.QueryAllAuctionResponse} QueryAllAuctionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAuctionResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.QueryAllAuctionResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.auctions && message.auctions.length))
                            message.auctions = [];
                        message.auctions.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllAuctionResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.QueryAllAuctionResponse} QueryAllAuctionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAuctionResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllAuctionResponse message.
             * @function verify
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllAuctionResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.auctions != null && message.hasOwnProperty("auctions")) {
                    if (!Array.isArray(message.auctions))
                        return "auctions: array expected";
                    for (let i = 0; i < message.auctions.length; ++i) {
                        let error = $root.google.protobuf.Any.verify(message.auctions[i]);
                        if (error)
                            return "auctions." + error;
                    }
                }
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllAuctionResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.QueryAllAuctionResponse} QueryAllAuctionResponse
             */
            QueryAllAuctionResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.QueryAllAuctionResponse)
                    return object;
                let message = new $root.ununifi.auction.QueryAllAuctionResponse();
                if (object.auctions) {
                    if (!Array.isArray(object.auctions))
                        throw TypeError(".ununifi.auction.QueryAllAuctionResponse.auctions: array expected");
                    message.auctions = [];
                    for (let i = 0; i < object.auctions.length; ++i) {
                        if (typeof object.auctions[i] !== "object")
                            throw TypeError(".ununifi.auction.QueryAllAuctionResponse.auctions: object expected");
                        message.auctions[i] = $root.google.protobuf.Any.fromObject(object.auctions[i]);
                    }
                }
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.auction.QueryAllAuctionResponse.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllAuctionResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @static
             * @param {ununifi.auction.QueryAllAuctionResponse} message QueryAllAuctionResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllAuctionResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.auctions = [];
                if (options.defaults)
                    object.pagination = null;
                if (message.auctions && message.auctions.length) {
                    object.auctions = [];
                    for (let j = 0; j < message.auctions.length; ++j)
                        object.auctions[j] = $root.google.protobuf.Any.toObject(message.auctions[j], options);
                }
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllAuctionResponse to JSON.
             * @function toJSON
             * @memberof ununifi.auction.QueryAllAuctionResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllAuctionResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllAuctionResponse;
        })();

        auction.BaseAuction = (function() {

            /**
             * Properties of a BaseAuction.
             * @memberof ununifi.auction
             * @interface IBaseAuction
             * @property {Long|null} [id] BaseAuction id
             * @property {string|null} [initiator] BaseAuction initiator
             * @property {cosmos.base.v1beta1.ICoin|null} [lot] BaseAuction lot
             * @property {string|null} [bidder] BaseAuction bidder
             * @property {cosmos.base.v1beta1.ICoin|null} [bid] BaseAuction bid
             * @property {boolean|null} [has_received_bids] BaseAuction has_received_bids
             * @property {google.protobuf.ITimestamp|null} [end_time] BaseAuction end_time
             * @property {google.protobuf.ITimestamp|null} [max_end_time] BaseAuction max_end_time
             */

            /**
             * Constructs a new BaseAuction.
             * @memberof ununifi.auction
             * @classdesc Represents a BaseAuction.
             * @implements IBaseAuction
             * @constructor
             * @param {ununifi.auction.IBaseAuction=} [properties] Properties to set
             */
            function BaseAuction(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BaseAuction id.
             * @member {Long} id
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * BaseAuction initiator.
             * @member {string} initiator
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.initiator = "";

            /**
             * BaseAuction lot.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} lot
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.lot = null;

            /**
             * BaseAuction bidder.
             * @member {string} bidder
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.bidder = "";

            /**
             * BaseAuction bid.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} bid
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.bid = null;

            /**
             * BaseAuction has_received_bids.
             * @member {boolean} has_received_bids
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.has_received_bids = false;

            /**
             * BaseAuction end_time.
             * @member {google.protobuf.ITimestamp|null|undefined} end_time
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.end_time = null;

            /**
             * BaseAuction max_end_time.
             * @member {google.protobuf.ITimestamp|null|undefined} max_end_time
             * @memberof ununifi.auction.BaseAuction
             * @instance
             */
            BaseAuction.prototype.max_end_time = null;

            /**
             * Encodes the specified BaseAuction message. Does not implicitly {@link ununifi.auction.BaseAuction.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {ununifi.auction.IBaseAuction} message BaseAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BaseAuction.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.id);
                if (message.initiator != null && Object.hasOwnProperty.call(message, "initiator"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.initiator);
                if (message.lot != null && Object.hasOwnProperty.call(message, "lot"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.lot, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.bidder != null && Object.hasOwnProperty.call(message, "bidder"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.bidder);
                if (message.bid != null && Object.hasOwnProperty.call(message, "bid"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.bid, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.has_received_bids != null && Object.hasOwnProperty.call(message, "has_received_bids"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.has_received_bids);
                if (message.end_time != null && Object.hasOwnProperty.call(message, "end_time"))
                    $root.google.protobuf.Timestamp.encode(message.end_time, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.max_end_time != null && Object.hasOwnProperty.call(message, "max_end_time"))
                    $root.google.protobuf.Timestamp.encode(message.max_end_time, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified BaseAuction message, length delimited. Does not implicitly {@link ununifi.auction.BaseAuction.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {ununifi.auction.IBaseAuction} message BaseAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BaseAuction.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BaseAuction message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.BaseAuction} BaseAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BaseAuction.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.BaseAuction();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.id = reader.uint64();
                        break;
                    case 2:
                        message.initiator = reader.string();
                        break;
                    case 3:
                        message.lot = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.bidder = reader.string();
                        break;
                    case 5:
                        message.bid = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 6:
                        message.has_received_bids = reader.bool();
                        break;
                    case 7:
                        message.end_time = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 8:
                        message.max_end_time = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a BaseAuction message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.BaseAuction} BaseAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BaseAuction.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BaseAuction message.
             * @function verify
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BaseAuction.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.id != null && message.hasOwnProperty("id"))
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                if (message.initiator != null && message.hasOwnProperty("initiator"))
                    if (!$util.isString(message.initiator))
                        return "initiator: string expected";
                if (message.lot != null && message.hasOwnProperty("lot")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.lot);
                    if (error)
                        return "lot." + error;
                }
                if (message.bidder != null && message.hasOwnProperty("bidder"))
                    if (!$util.isString(message.bidder))
                        return "bidder: string expected";
                if (message.bid != null && message.hasOwnProperty("bid")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.bid);
                    if (error)
                        return "bid." + error;
                }
                if (message.has_received_bids != null && message.hasOwnProperty("has_received_bids"))
                    if (typeof message.has_received_bids !== "boolean")
                        return "has_received_bids: boolean expected";
                if (message.end_time != null && message.hasOwnProperty("end_time")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.end_time);
                    if (error)
                        return "end_time." + error;
                }
                if (message.max_end_time != null && message.hasOwnProperty("max_end_time")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.max_end_time);
                    if (error)
                        return "max_end_time." + error;
                }
                return null;
            };

            /**
             * Creates a BaseAuction message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.BaseAuction} BaseAuction
             */
            BaseAuction.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.BaseAuction)
                    return object;
                let message = new $root.ununifi.auction.BaseAuction();
                if (object.id != null)
                    if ($util.Long)
                        (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                    else if (typeof object.id === "string")
                        message.id = parseInt(object.id, 10);
                    else if (typeof object.id === "number")
                        message.id = object.id;
                    else if (typeof object.id === "object")
                        message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
                if (object.initiator != null)
                    message.initiator = String(object.initiator);
                if (object.lot != null) {
                    if (typeof object.lot !== "object")
                        throw TypeError(".ununifi.auction.BaseAuction.lot: object expected");
                    message.lot = $root.cosmos.base.v1beta1.Coin.fromObject(object.lot);
                }
                if (object.bidder != null)
                    message.bidder = String(object.bidder);
                if (object.bid != null) {
                    if (typeof object.bid !== "object")
                        throw TypeError(".ununifi.auction.BaseAuction.bid: object expected");
                    message.bid = $root.cosmos.base.v1beta1.Coin.fromObject(object.bid);
                }
                if (object.has_received_bids != null)
                    message.has_received_bids = Boolean(object.has_received_bids);
                if (object.end_time != null) {
                    if (typeof object.end_time !== "object")
                        throw TypeError(".ununifi.auction.BaseAuction.end_time: object expected");
                    message.end_time = $root.google.protobuf.Timestamp.fromObject(object.end_time);
                }
                if (object.max_end_time != null) {
                    if (typeof object.max_end_time !== "object")
                        throw TypeError(".ununifi.auction.BaseAuction.max_end_time: object expected");
                    message.max_end_time = $root.google.protobuf.Timestamp.fromObject(object.max_end_time);
                }
                return message;
            };

            /**
             * Creates a plain object from a BaseAuction message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.BaseAuction
             * @static
             * @param {ununifi.auction.BaseAuction} message BaseAuction
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BaseAuction.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.id = options.longs === String ? "0" : 0;
                    object.initiator = "";
                    object.lot = null;
                    object.bidder = "";
                    object.bid = null;
                    object.has_received_bids = false;
                    object.end_time = null;
                    object.max_end_time = null;
                }
                if (message.id != null && message.hasOwnProperty("id"))
                    if (typeof message.id === "number")
                        object.id = options.longs === String ? String(message.id) : message.id;
                    else
                        object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
                if (message.initiator != null && message.hasOwnProperty("initiator"))
                    object.initiator = message.initiator;
                if (message.lot != null && message.hasOwnProperty("lot"))
                    object.lot = $root.cosmos.base.v1beta1.Coin.toObject(message.lot, options);
                if (message.bidder != null && message.hasOwnProperty("bidder"))
                    object.bidder = message.bidder;
                if (message.bid != null && message.hasOwnProperty("bid"))
                    object.bid = $root.cosmos.base.v1beta1.Coin.toObject(message.bid, options);
                if (message.has_received_bids != null && message.hasOwnProperty("has_received_bids"))
                    object.has_received_bids = message.has_received_bids;
                if (message.end_time != null && message.hasOwnProperty("end_time"))
                    object.end_time = $root.google.protobuf.Timestamp.toObject(message.end_time, options);
                if (message.max_end_time != null && message.hasOwnProperty("max_end_time"))
                    object.max_end_time = $root.google.protobuf.Timestamp.toObject(message.max_end_time, options);
                return object;
            };

            /**
             * Converts this BaseAuction to JSON.
             * @function toJSON
             * @memberof ununifi.auction.BaseAuction
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BaseAuction.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return BaseAuction;
        })();

        auction.SurplusAuction = (function() {

            /**
             * Properties of a SurplusAuction.
             * @memberof ununifi.auction
             * @interface ISurplusAuction
             * @property {ununifi.auction.IBaseAuction|null} [base_auction] SurplusAuction base_auction
             */

            /**
             * Constructs a new SurplusAuction.
             * @memberof ununifi.auction
             * @classdesc Represents a SurplusAuction.
             * @implements ISurplusAuction
             * @constructor
             * @param {ununifi.auction.ISurplusAuction=} [properties] Properties to set
             */
            function SurplusAuction(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SurplusAuction base_auction.
             * @member {ununifi.auction.IBaseAuction|null|undefined} base_auction
             * @memberof ununifi.auction.SurplusAuction
             * @instance
             */
            SurplusAuction.prototype.base_auction = null;

            /**
             * Encodes the specified SurplusAuction message. Does not implicitly {@link ununifi.auction.SurplusAuction.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {ununifi.auction.ISurplusAuction} message SurplusAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SurplusAuction.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.base_auction != null && Object.hasOwnProperty.call(message, "base_auction"))
                    $root.ununifi.auction.BaseAuction.encode(message.base_auction, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SurplusAuction message, length delimited. Does not implicitly {@link ununifi.auction.SurplusAuction.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {ununifi.auction.ISurplusAuction} message SurplusAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SurplusAuction.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SurplusAuction message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.SurplusAuction} SurplusAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SurplusAuction.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.SurplusAuction();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.base_auction = $root.ununifi.auction.BaseAuction.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SurplusAuction message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.SurplusAuction} SurplusAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SurplusAuction.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SurplusAuction message.
             * @function verify
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SurplusAuction.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.base_auction != null && message.hasOwnProperty("base_auction")) {
                    let error = $root.ununifi.auction.BaseAuction.verify(message.base_auction);
                    if (error)
                        return "base_auction." + error;
                }
                return null;
            };

            /**
             * Creates a SurplusAuction message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.SurplusAuction} SurplusAuction
             */
            SurplusAuction.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.SurplusAuction)
                    return object;
                let message = new $root.ununifi.auction.SurplusAuction();
                if (object.base_auction != null) {
                    if (typeof object.base_auction !== "object")
                        throw TypeError(".ununifi.auction.SurplusAuction.base_auction: object expected");
                    message.base_auction = $root.ununifi.auction.BaseAuction.fromObject(object.base_auction);
                }
                return message;
            };

            /**
             * Creates a plain object from a SurplusAuction message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.SurplusAuction
             * @static
             * @param {ununifi.auction.SurplusAuction} message SurplusAuction
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SurplusAuction.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.base_auction = null;
                if (message.base_auction != null && message.hasOwnProperty("base_auction"))
                    object.base_auction = $root.ununifi.auction.BaseAuction.toObject(message.base_auction, options);
                return object;
            };

            /**
             * Converts this SurplusAuction to JSON.
             * @function toJSON
             * @memberof ununifi.auction.SurplusAuction
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SurplusAuction.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return SurplusAuction;
        })();

        auction.DebtAuction = (function() {

            /**
             * Properties of a DebtAuction.
             * @memberof ununifi.auction
             * @interface IDebtAuction
             * @property {ununifi.auction.IBaseAuction|null} [base_auction] DebtAuction base_auction
             * @property {cosmos.base.v1beta1.ICoin|null} [corresponding_debt] DebtAuction corresponding_debt
             */

            /**
             * Constructs a new DebtAuction.
             * @memberof ununifi.auction
             * @classdesc Represents a DebtAuction.
             * @implements IDebtAuction
             * @constructor
             * @param {ununifi.auction.IDebtAuction=} [properties] Properties to set
             */
            function DebtAuction(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DebtAuction base_auction.
             * @member {ununifi.auction.IBaseAuction|null|undefined} base_auction
             * @memberof ununifi.auction.DebtAuction
             * @instance
             */
            DebtAuction.prototype.base_auction = null;

            /**
             * DebtAuction corresponding_debt.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} corresponding_debt
             * @memberof ununifi.auction.DebtAuction
             * @instance
             */
            DebtAuction.prototype.corresponding_debt = null;

            /**
             * Encodes the specified DebtAuction message. Does not implicitly {@link ununifi.auction.DebtAuction.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {ununifi.auction.IDebtAuction} message DebtAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DebtAuction.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.base_auction != null && Object.hasOwnProperty.call(message, "base_auction"))
                    $root.ununifi.auction.BaseAuction.encode(message.base_auction, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.corresponding_debt != null && Object.hasOwnProperty.call(message, "corresponding_debt"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.corresponding_debt, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified DebtAuction message, length delimited. Does not implicitly {@link ununifi.auction.DebtAuction.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {ununifi.auction.IDebtAuction} message DebtAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DebtAuction.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DebtAuction message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.DebtAuction} DebtAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DebtAuction.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.DebtAuction();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.base_auction = $root.ununifi.auction.BaseAuction.decode(reader, reader.uint32());
                        break;
                    case 2:
                        message.corresponding_debt = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DebtAuction message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.DebtAuction} DebtAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DebtAuction.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DebtAuction message.
             * @function verify
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DebtAuction.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.base_auction != null && message.hasOwnProperty("base_auction")) {
                    let error = $root.ununifi.auction.BaseAuction.verify(message.base_auction);
                    if (error)
                        return "base_auction." + error;
                }
                if (message.corresponding_debt != null && message.hasOwnProperty("corresponding_debt")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.corresponding_debt);
                    if (error)
                        return "corresponding_debt." + error;
                }
                return null;
            };

            /**
             * Creates a DebtAuction message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.DebtAuction} DebtAuction
             */
            DebtAuction.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.DebtAuction)
                    return object;
                let message = new $root.ununifi.auction.DebtAuction();
                if (object.base_auction != null) {
                    if (typeof object.base_auction !== "object")
                        throw TypeError(".ununifi.auction.DebtAuction.base_auction: object expected");
                    message.base_auction = $root.ununifi.auction.BaseAuction.fromObject(object.base_auction);
                }
                if (object.corresponding_debt != null) {
                    if (typeof object.corresponding_debt !== "object")
                        throw TypeError(".ununifi.auction.DebtAuction.corresponding_debt: object expected");
                    message.corresponding_debt = $root.cosmos.base.v1beta1.Coin.fromObject(object.corresponding_debt);
                }
                return message;
            };

            /**
             * Creates a plain object from a DebtAuction message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.DebtAuction
             * @static
             * @param {ununifi.auction.DebtAuction} message DebtAuction
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DebtAuction.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.base_auction = null;
                    object.corresponding_debt = null;
                }
                if (message.base_auction != null && message.hasOwnProperty("base_auction"))
                    object.base_auction = $root.ununifi.auction.BaseAuction.toObject(message.base_auction, options);
                if (message.corresponding_debt != null && message.hasOwnProperty("corresponding_debt"))
                    object.corresponding_debt = $root.cosmos.base.v1beta1.Coin.toObject(message.corresponding_debt, options);
                return object;
            };

            /**
             * Converts this DebtAuction to JSON.
             * @function toJSON
             * @memberof ununifi.auction.DebtAuction
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DebtAuction.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return DebtAuction;
        })();

        auction.CollateralAuction = (function() {

            /**
             * Properties of a CollateralAuction.
             * @memberof ununifi.auction
             * @interface ICollateralAuction
             * @property {ununifi.auction.IBaseAuction|null} [base_auction] CollateralAuction base_auction
             * @property {cosmos.base.v1beta1.ICoin|null} [corresponding_debt] CollateralAuction corresponding_debt
             * @property {cosmos.base.v1beta1.ICoin|null} [max_bid] CollateralAuction max_bid
             * @property {Array.<ununifi.auction.IWeightedAddress>|null} [lot_returns] CollateralAuction lot_returns
             */

            /**
             * Constructs a new CollateralAuction.
             * @memberof ununifi.auction
             * @classdesc Represents a CollateralAuction.
             * @implements ICollateralAuction
             * @constructor
             * @param {ununifi.auction.ICollateralAuction=} [properties] Properties to set
             */
            function CollateralAuction(properties) {
                this.lot_returns = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CollateralAuction base_auction.
             * @member {ununifi.auction.IBaseAuction|null|undefined} base_auction
             * @memberof ununifi.auction.CollateralAuction
             * @instance
             */
            CollateralAuction.prototype.base_auction = null;

            /**
             * CollateralAuction corresponding_debt.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} corresponding_debt
             * @memberof ununifi.auction.CollateralAuction
             * @instance
             */
            CollateralAuction.prototype.corresponding_debt = null;

            /**
             * CollateralAuction max_bid.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} max_bid
             * @memberof ununifi.auction.CollateralAuction
             * @instance
             */
            CollateralAuction.prototype.max_bid = null;

            /**
             * CollateralAuction lot_returns.
             * @member {Array.<ununifi.auction.IWeightedAddress>} lot_returns
             * @memberof ununifi.auction.CollateralAuction
             * @instance
             */
            CollateralAuction.prototype.lot_returns = $util.emptyArray;

            /**
             * Encodes the specified CollateralAuction message. Does not implicitly {@link ununifi.auction.CollateralAuction.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {ununifi.auction.ICollateralAuction} message CollateralAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CollateralAuction.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.base_auction != null && Object.hasOwnProperty.call(message, "base_auction"))
                    $root.ununifi.auction.BaseAuction.encode(message.base_auction, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.corresponding_debt != null && Object.hasOwnProperty.call(message, "corresponding_debt"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.corresponding_debt, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.max_bid != null && Object.hasOwnProperty.call(message, "max_bid"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.max_bid, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.lot_returns != null && message.lot_returns.length)
                    for (let i = 0; i < message.lot_returns.length; ++i)
                        $root.ununifi.auction.WeightedAddress.encode(message.lot_returns[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CollateralAuction message, length delimited. Does not implicitly {@link ununifi.auction.CollateralAuction.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {ununifi.auction.ICollateralAuction} message CollateralAuction message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CollateralAuction.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CollateralAuction message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.CollateralAuction} CollateralAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CollateralAuction.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.CollateralAuction();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.base_auction = $root.ununifi.auction.BaseAuction.decode(reader, reader.uint32());
                        break;
                    case 2:
                        message.corresponding_debt = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.max_bid = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 4:
                        if (!(message.lot_returns && message.lot_returns.length))
                            message.lot_returns = [];
                        message.lot_returns.push($root.ununifi.auction.WeightedAddress.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a CollateralAuction message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.CollateralAuction} CollateralAuction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CollateralAuction.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CollateralAuction message.
             * @function verify
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CollateralAuction.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.base_auction != null && message.hasOwnProperty("base_auction")) {
                    let error = $root.ununifi.auction.BaseAuction.verify(message.base_auction);
                    if (error)
                        return "base_auction." + error;
                }
                if (message.corresponding_debt != null && message.hasOwnProperty("corresponding_debt")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.corresponding_debt);
                    if (error)
                        return "corresponding_debt." + error;
                }
                if (message.max_bid != null && message.hasOwnProperty("max_bid")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.max_bid);
                    if (error)
                        return "max_bid." + error;
                }
                if (message.lot_returns != null && message.hasOwnProperty("lot_returns")) {
                    if (!Array.isArray(message.lot_returns))
                        return "lot_returns: array expected";
                    for (let i = 0; i < message.lot_returns.length; ++i) {
                        let error = $root.ununifi.auction.WeightedAddress.verify(message.lot_returns[i]);
                        if (error)
                            return "lot_returns." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a CollateralAuction message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.CollateralAuction} CollateralAuction
             */
            CollateralAuction.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.CollateralAuction)
                    return object;
                let message = new $root.ununifi.auction.CollateralAuction();
                if (object.base_auction != null) {
                    if (typeof object.base_auction !== "object")
                        throw TypeError(".ununifi.auction.CollateralAuction.base_auction: object expected");
                    message.base_auction = $root.ununifi.auction.BaseAuction.fromObject(object.base_auction);
                }
                if (object.corresponding_debt != null) {
                    if (typeof object.corresponding_debt !== "object")
                        throw TypeError(".ununifi.auction.CollateralAuction.corresponding_debt: object expected");
                    message.corresponding_debt = $root.cosmos.base.v1beta1.Coin.fromObject(object.corresponding_debt);
                }
                if (object.max_bid != null) {
                    if (typeof object.max_bid !== "object")
                        throw TypeError(".ununifi.auction.CollateralAuction.max_bid: object expected");
                    message.max_bid = $root.cosmos.base.v1beta1.Coin.fromObject(object.max_bid);
                }
                if (object.lot_returns) {
                    if (!Array.isArray(object.lot_returns))
                        throw TypeError(".ununifi.auction.CollateralAuction.lot_returns: array expected");
                    message.lot_returns = [];
                    for (let i = 0; i < object.lot_returns.length; ++i) {
                        if (typeof object.lot_returns[i] !== "object")
                            throw TypeError(".ununifi.auction.CollateralAuction.lot_returns: object expected");
                        message.lot_returns[i] = $root.ununifi.auction.WeightedAddress.fromObject(object.lot_returns[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a CollateralAuction message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.CollateralAuction
             * @static
             * @param {ununifi.auction.CollateralAuction} message CollateralAuction
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CollateralAuction.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.lot_returns = [];
                if (options.defaults) {
                    object.base_auction = null;
                    object.corresponding_debt = null;
                    object.max_bid = null;
                }
                if (message.base_auction != null && message.hasOwnProperty("base_auction"))
                    object.base_auction = $root.ununifi.auction.BaseAuction.toObject(message.base_auction, options);
                if (message.corresponding_debt != null && message.hasOwnProperty("corresponding_debt"))
                    object.corresponding_debt = $root.cosmos.base.v1beta1.Coin.toObject(message.corresponding_debt, options);
                if (message.max_bid != null && message.hasOwnProperty("max_bid"))
                    object.max_bid = $root.cosmos.base.v1beta1.Coin.toObject(message.max_bid, options);
                if (message.lot_returns && message.lot_returns.length) {
                    object.lot_returns = [];
                    for (let j = 0; j < message.lot_returns.length; ++j)
                        object.lot_returns[j] = $root.ununifi.auction.WeightedAddress.toObject(message.lot_returns[j], options);
                }
                return object;
            };

            /**
             * Converts this CollateralAuction to JSON.
             * @function toJSON
             * @memberof ununifi.auction.CollateralAuction
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CollateralAuction.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return CollateralAuction;
        })();

        auction.WeightedAddress = (function() {

            /**
             * Properties of a WeightedAddress.
             * @memberof ununifi.auction
             * @interface IWeightedAddress
             * @property {string|null} [address] WeightedAddress address
             * @property {string|null} [weight] WeightedAddress weight
             */

            /**
             * Constructs a new WeightedAddress.
             * @memberof ununifi.auction
             * @classdesc Represents a WeightedAddress.
             * @implements IWeightedAddress
             * @constructor
             * @param {ununifi.auction.IWeightedAddress=} [properties] Properties to set
             */
            function WeightedAddress(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * WeightedAddress address.
             * @member {string} address
             * @memberof ununifi.auction.WeightedAddress
             * @instance
             */
            WeightedAddress.prototype.address = "";

            /**
             * WeightedAddress weight.
             * @member {string} weight
             * @memberof ununifi.auction.WeightedAddress
             * @instance
             */
            WeightedAddress.prototype.weight = "";

            /**
             * Encodes the specified WeightedAddress message. Does not implicitly {@link ununifi.auction.WeightedAddress.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {ununifi.auction.IWeightedAddress} message WeightedAddress message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WeightedAddress.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                if (message.weight != null && Object.hasOwnProperty.call(message, "weight"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.weight);
                return writer;
            };

            /**
             * Encodes the specified WeightedAddress message, length delimited. Does not implicitly {@link ununifi.auction.WeightedAddress.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {ununifi.auction.IWeightedAddress} message WeightedAddress message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WeightedAddress.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a WeightedAddress message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.WeightedAddress} WeightedAddress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WeightedAddress.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.WeightedAddress();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.address = reader.string();
                        break;
                    case 2:
                        message.weight = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a WeightedAddress message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.WeightedAddress} WeightedAddress
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WeightedAddress.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a WeightedAddress message.
             * @function verify
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WeightedAddress.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.address != null && message.hasOwnProperty("address"))
                    if (!$util.isString(message.address))
                        return "address: string expected";
                if (message.weight != null && message.hasOwnProperty("weight"))
                    if (!$util.isString(message.weight))
                        return "weight: string expected";
                return null;
            };

            /**
             * Creates a WeightedAddress message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.WeightedAddress} WeightedAddress
             */
            WeightedAddress.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.WeightedAddress)
                    return object;
                let message = new $root.ununifi.auction.WeightedAddress();
                if (object.address != null)
                    message.address = String(object.address);
                if (object.weight != null)
                    message.weight = String(object.weight);
                return message;
            };

            /**
             * Creates a plain object from a WeightedAddress message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.WeightedAddress
             * @static
             * @param {ununifi.auction.WeightedAddress} message WeightedAddress
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WeightedAddress.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.address = "";
                    object.weight = "";
                }
                if (message.address != null && message.hasOwnProperty("address"))
                    object.address = message.address;
                if (message.weight != null && message.hasOwnProperty("weight"))
                    object.weight = message.weight;
                return object;
            };

            /**
             * Converts this WeightedAddress to JSON.
             * @function toJSON
             * @memberof ununifi.auction.WeightedAddress
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WeightedAddress.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return WeightedAddress;
        })();

        auction.Params = (function() {

            /**
             * Properties of a Params.
             * @memberof ununifi.auction
             * @interface IParams
             * @property {google.protobuf.IDuration|null} [max_auction_duration] Params max_auction_duration
             * @property {google.protobuf.IDuration|null} [bid_duration] Params bid_duration
             * @property {string|null} [increment_surplus] Params increment_surplus
             * @property {string|null} [increment_debt] Params increment_debt
             * @property {string|null} [increment_collateral] Params increment_collateral
             */

            /**
             * Constructs a new Params.
             * @memberof ununifi.auction
             * @classdesc Represents a Params.
             * @implements IParams
             * @constructor
             * @param {ununifi.auction.IParams=} [properties] Properties to set
             */
            function Params(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Params max_auction_duration.
             * @member {google.protobuf.IDuration|null|undefined} max_auction_duration
             * @memberof ununifi.auction.Params
             * @instance
             */
            Params.prototype.max_auction_duration = null;

            /**
             * Params bid_duration.
             * @member {google.protobuf.IDuration|null|undefined} bid_duration
             * @memberof ununifi.auction.Params
             * @instance
             */
            Params.prototype.bid_duration = null;

            /**
             * Params increment_surplus.
             * @member {string} increment_surplus
             * @memberof ununifi.auction.Params
             * @instance
             */
            Params.prototype.increment_surplus = "";

            /**
             * Params increment_debt.
             * @member {string} increment_debt
             * @memberof ununifi.auction.Params
             * @instance
             */
            Params.prototype.increment_debt = "";

            /**
             * Params increment_collateral.
             * @member {string} increment_collateral
             * @memberof ununifi.auction.Params
             * @instance
             */
            Params.prototype.increment_collateral = "";

            /**
             * Encodes the specified Params message. Does not implicitly {@link ununifi.auction.Params.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.Params
             * @static
             * @param {ununifi.auction.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.max_auction_duration != null && Object.hasOwnProperty.call(message, "max_auction_duration"))
                    $root.google.protobuf.Duration.encode(message.max_auction_duration, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.bid_duration != null && Object.hasOwnProperty.call(message, "bid_duration"))
                    $root.google.protobuf.Duration.encode(message.bid_duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.increment_surplus != null && Object.hasOwnProperty.call(message, "increment_surplus"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.increment_surplus);
                if (message.increment_debt != null && Object.hasOwnProperty.call(message, "increment_debt"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.increment_debt);
                if (message.increment_collateral != null && Object.hasOwnProperty.call(message, "increment_collateral"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.increment_collateral);
                return writer;
            };

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link ununifi.auction.Params.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.Params
             * @static
             * @param {ununifi.auction.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.Params();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.max_auction_duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                        break;
                    case 2:
                        message.bid_duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.increment_surplus = reader.string();
                        break;
                    case 4:
                        message.increment_debt = reader.string();
                        break;
                    case 5:
                        message.increment_collateral = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Params message.
             * @function verify
             * @memberof ununifi.auction.Params
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Params.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.max_auction_duration != null && message.hasOwnProperty("max_auction_duration")) {
                    let error = $root.google.protobuf.Duration.verify(message.max_auction_duration);
                    if (error)
                        return "max_auction_duration." + error;
                }
                if (message.bid_duration != null && message.hasOwnProperty("bid_duration")) {
                    let error = $root.google.protobuf.Duration.verify(message.bid_duration);
                    if (error)
                        return "bid_duration." + error;
                }
                if (message.increment_surplus != null && message.hasOwnProperty("increment_surplus"))
                    if (!$util.isString(message.increment_surplus))
                        return "increment_surplus: string expected";
                if (message.increment_debt != null && message.hasOwnProperty("increment_debt"))
                    if (!$util.isString(message.increment_debt))
                        return "increment_debt: string expected";
                if (message.increment_collateral != null && message.hasOwnProperty("increment_collateral"))
                    if (!$util.isString(message.increment_collateral))
                        return "increment_collateral: string expected";
                return null;
            };

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.Params
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.Params} Params
             */
            Params.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.Params)
                    return object;
                let message = new $root.ununifi.auction.Params();
                if (object.max_auction_duration != null) {
                    if (typeof object.max_auction_duration !== "object")
                        throw TypeError(".ununifi.auction.Params.max_auction_duration: object expected");
                    message.max_auction_duration = $root.google.protobuf.Duration.fromObject(object.max_auction_duration);
                }
                if (object.bid_duration != null) {
                    if (typeof object.bid_duration !== "object")
                        throw TypeError(".ununifi.auction.Params.bid_duration: object expected");
                    message.bid_duration = $root.google.protobuf.Duration.fromObject(object.bid_duration);
                }
                if (object.increment_surplus != null)
                    message.increment_surplus = String(object.increment_surplus);
                if (object.increment_debt != null)
                    message.increment_debt = String(object.increment_debt);
                if (object.increment_collateral != null)
                    message.increment_collateral = String(object.increment_collateral);
                return message;
            };

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.Params
             * @static
             * @param {ununifi.auction.Params} message Params
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Params.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.max_auction_duration = null;
                    object.bid_duration = null;
                    object.increment_surplus = "";
                    object.increment_debt = "";
                    object.increment_collateral = "";
                }
                if (message.max_auction_duration != null && message.hasOwnProperty("max_auction_duration"))
                    object.max_auction_duration = $root.google.protobuf.Duration.toObject(message.max_auction_duration, options);
                if (message.bid_duration != null && message.hasOwnProperty("bid_duration"))
                    object.bid_duration = $root.google.protobuf.Duration.toObject(message.bid_duration, options);
                if (message.increment_surplus != null && message.hasOwnProperty("increment_surplus"))
                    object.increment_surplus = message.increment_surplus;
                if (message.increment_debt != null && message.hasOwnProperty("increment_debt"))
                    object.increment_debt = message.increment_debt;
                if (message.increment_collateral != null && message.hasOwnProperty("increment_collateral"))
                    object.increment_collateral = message.increment_collateral;
                return object;
            };

            /**
             * Converts this Params to JSON.
             * @function toJSON
             * @memberof ununifi.auction.Params
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Params.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Params;
        })();

        auction.Msg = (function() {

            /**
             * Constructs a new Msg service.
             * @memberof ununifi.auction
             * @classdesc Represents a Msg
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Msg(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Msg.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Msg;

            /**
             * Callback as used by {@link ununifi.auction.Msg#placeBid}.
             * @memberof ununifi.auction.Msg
             * @typedef PlaceBidCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.auction.MsgPlaceBidResponse} [response] MsgPlaceBidResponse
             */

            /**
             * Calls PlaceBid.
             * @function placeBid
             * @memberof ununifi.auction.Msg
             * @instance
             * @param {ununifi.auction.IMsgPlaceBid} request MsgPlaceBid message or plain object
             * @param {ununifi.auction.Msg.PlaceBidCallback} callback Node-style callback called with the error, if any, and MsgPlaceBidResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.placeBid = function placeBid(request, callback) {
                return this.rpcCall(placeBid, $root.ununifi.auction.MsgPlaceBid, $root.ununifi.auction.MsgPlaceBidResponse, request, callback);
            }, "name", { value: "PlaceBid" });

            /**
             * Calls PlaceBid.
             * @function placeBid
             * @memberof ununifi.auction.Msg
             * @instance
             * @param {ununifi.auction.IMsgPlaceBid} request MsgPlaceBid message or plain object
             * @returns {Promise<ununifi.auction.MsgPlaceBidResponse>} Promise
             * @variation 2
             */

            return Msg;
        })();

        auction.MsgPlaceBid = (function() {

            /**
             * Properties of a MsgPlaceBid.
             * @memberof ununifi.auction
             * @interface IMsgPlaceBid
             * @property {Long|null} [auction_id] MsgPlaceBid auction_id
             * @property {string|null} [bidder] MsgPlaceBid bidder
             * @property {cosmos.base.v1beta1.ICoin|null} [amount] MsgPlaceBid amount
             */

            /**
             * Constructs a new MsgPlaceBid.
             * @memberof ununifi.auction
             * @classdesc Represents a MsgPlaceBid.
             * @implements IMsgPlaceBid
             * @constructor
             * @param {ununifi.auction.IMsgPlaceBid=} [properties] Properties to set
             */
            function MsgPlaceBid(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgPlaceBid auction_id.
             * @member {Long} auction_id
             * @memberof ununifi.auction.MsgPlaceBid
             * @instance
             */
            MsgPlaceBid.prototype.auction_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * MsgPlaceBid bidder.
             * @member {string} bidder
             * @memberof ununifi.auction.MsgPlaceBid
             * @instance
             */
            MsgPlaceBid.prototype.bidder = "";

            /**
             * MsgPlaceBid amount.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} amount
             * @memberof ununifi.auction.MsgPlaceBid
             * @instance
             */
            MsgPlaceBid.prototype.amount = null;

            /**
             * Encodes the specified MsgPlaceBid message. Does not implicitly {@link ununifi.auction.MsgPlaceBid.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {ununifi.auction.IMsgPlaceBid} message MsgPlaceBid message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPlaceBid.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.auction_id != null && Object.hasOwnProperty.call(message, "auction_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.auction_id);
                if (message.bidder != null && Object.hasOwnProperty.call(message, "bidder"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.bidder);
                if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.amount, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified MsgPlaceBid message, length delimited. Does not implicitly {@link ununifi.auction.MsgPlaceBid.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {ununifi.auction.IMsgPlaceBid} message MsgPlaceBid message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPlaceBid.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgPlaceBid message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.MsgPlaceBid} MsgPlaceBid
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPlaceBid.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.MsgPlaceBid();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.auction_id = reader.uint64();
                        break;
                    case 2:
                        message.bidder = reader.string();
                        break;
                    case 3:
                        message.amount = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgPlaceBid message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.MsgPlaceBid} MsgPlaceBid
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPlaceBid.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgPlaceBid message.
             * @function verify
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgPlaceBid.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.auction_id != null && message.hasOwnProperty("auction_id"))
                    if (!$util.isInteger(message.auction_id) && !(message.auction_id && $util.isInteger(message.auction_id.low) && $util.isInteger(message.auction_id.high)))
                        return "auction_id: integer|Long expected";
                if (message.bidder != null && message.hasOwnProperty("bidder"))
                    if (!$util.isString(message.bidder))
                        return "bidder: string expected";
                if (message.amount != null && message.hasOwnProperty("amount")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.amount);
                    if (error)
                        return "amount." + error;
                }
                return null;
            };

            /**
             * Creates a MsgPlaceBid message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.MsgPlaceBid} MsgPlaceBid
             */
            MsgPlaceBid.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.MsgPlaceBid)
                    return object;
                let message = new $root.ununifi.auction.MsgPlaceBid();
                if (object.auction_id != null)
                    if ($util.Long)
                        (message.auction_id = $util.Long.fromValue(object.auction_id)).unsigned = true;
                    else if (typeof object.auction_id === "string")
                        message.auction_id = parseInt(object.auction_id, 10);
                    else if (typeof object.auction_id === "number")
                        message.auction_id = object.auction_id;
                    else if (typeof object.auction_id === "object")
                        message.auction_id = new $util.LongBits(object.auction_id.low >>> 0, object.auction_id.high >>> 0).toNumber(true);
                if (object.bidder != null)
                    message.bidder = String(object.bidder);
                if (object.amount != null) {
                    if (typeof object.amount !== "object")
                        throw TypeError(".ununifi.auction.MsgPlaceBid.amount: object expected");
                    message.amount = $root.cosmos.base.v1beta1.Coin.fromObject(object.amount);
                }
                return message;
            };

            /**
             * Creates a plain object from a MsgPlaceBid message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.MsgPlaceBid
             * @static
             * @param {ununifi.auction.MsgPlaceBid} message MsgPlaceBid
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgPlaceBid.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.auction_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.auction_id = options.longs === String ? "0" : 0;
                    object.bidder = "";
                    object.amount = null;
                }
                if (message.auction_id != null && message.hasOwnProperty("auction_id"))
                    if (typeof message.auction_id === "number")
                        object.auction_id = options.longs === String ? String(message.auction_id) : message.auction_id;
                    else
                        object.auction_id = options.longs === String ? $util.Long.prototype.toString.call(message.auction_id) : options.longs === Number ? new $util.LongBits(message.auction_id.low >>> 0, message.auction_id.high >>> 0).toNumber(true) : message.auction_id;
                if (message.bidder != null && message.hasOwnProperty("bidder"))
                    object.bidder = message.bidder;
                if (message.amount != null && message.hasOwnProperty("amount"))
                    object.amount = $root.cosmos.base.v1beta1.Coin.toObject(message.amount, options);
                return object;
            };

            /**
             * Converts this MsgPlaceBid to JSON.
             * @function toJSON
             * @memberof ununifi.auction.MsgPlaceBid
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgPlaceBid.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgPlaceBid;
        })();

        auction.MsgPlaceBidResponse = (function() {

            /**
             * Properties of a MsgPlaceBidResponse.
             * @memberof ununifi.auction
             * @interface IMsgPlaceBidResponse
             */

            /**
             * Constructs a new MsgPlaceBidResponse.
             * @memberof ununifi.auction
             * @classdesc Represents a MsgPlaceBidResponse.
             * @implements IMsgPlaceBidResponse
             * @constructor
             * @param {ununifi.auction.IMsgPlaceBidResponse=} [properties] Properties to set
             */
            function MsgPlaceBidResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgPlaceBidResponse message. Does not implicitly {@link ununifi.auction.MsgPlaceBidResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {ununifi.auction.IMsgPlaceBidResponse} message MsgPlaceBidResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPlaceBidResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgPlaceBidResponse message, length delimited. Does not implicitly {@link ununifi.auction.MsgPlaceBidResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {ununifi.auction.IMsgPlaceBidResponse} message MsgPlaceBidResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPlaceBidResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgPlaceBidResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.MsgPlaceBidResponse} MsgPlaceBidResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPlaceBidResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.MsgPlaceBidResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgPlaceBidResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.MsgPlaceBidResponse} MsgPlaceBidResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPlaceBidResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgPlaceBidResponse message.
             * @function verify
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgPlaceBidResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgPlaceBidResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.MsgPlaceBidResponse} MsgPlaceBidResponse
             */
            MsgPlaceBidResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.MsgPlaceBidResponse)
                    return object;
                return new $root.ununifi.auction.MsgPlaceBidResponse();
            };

            /**
             * Creates a plain object from a MsgPlaceBidResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @static
             * @param {ununifi.auction.MsgPlaceBidResponse} message MsgPlaceBidResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgPlaceBidResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgPlaceBidResponse to JSON.
             * @function toJSON
             * @memberof ununifi.auction.MsgPlaceBidResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgPlaceBidResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgPlaceBidResponse;
        })();

        auction.GenesisState = (function() {

            /**
             * Properties of a GenesisState.
             * @memberof ununifi.auction
             * @interface IGenesisState
             * @property {Long|null} [next_auction_id] GenesisState next_auction_id
             * @property {ununifi.auction.IParams|null} [params] GenesisState params
             * @property {Array.<google.protobuf.IAny>|null} [auctions] GenesisState auctions
             */

            /**
             * Constructs a new GenesisState.
             * @memberof ununifi.auction
             * @classdesc Represents a GenesisState.
             * @implements IGenesisState
             * @constructor
             * @param {ununifi.auction.IGenesisState=} [properties] Properties to set
             */
            function GenesisState(properties) {
                this.auctions = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisState next_auction_id.
             * @member {Long} next_auction_id
             * @memberof ununifi.auction.GenesisState
             * @instance
             */
            GenesisState.prototype.next_auction_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * GenesisState params.
             * @member {ununifi.auction.IParams|null|undefined} params
             * @memberof ununifi.auction.GenesisState
             * @instance
             */
            GenesisState.prototype.params = null;

            /**
             * GenesisState auctions.
             * @member {Array.<google.protobuf.IAny>} auctions
             * @memberof ununifi.auction.GenesisState
             * @instance
             */
            GenesisState.prototype.auctions = $util.emptyArray;

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link ununifi.auction.GenesisState.verify|verify} messages.
             * @function encode
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {ununifi.auction.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.next_auction_id != null && Object.hasOwnProperty.call(message, "next_auction_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.next_auction_id);
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.auction.Params.encode(message.params, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.auctions != null && message.auctions.length)
                    for (let i = 0; i < message.auctions.length; ++i)
                        $root.google.protobuf.Any.encode(message.auctions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ununifi.auction.GenesisState.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {ununifi.auction.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.auction.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.auction.GenesisState();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.next_auction_id = reader.uint64();
                        break;
                    case 2:
                        message.params = $root.ununifi.auction.Params.decode(reader, reader.uint32());
                        break;
                    case 3:
                        if (!(message.auctions && message.auctions.length))
                            message.auctions = [];
                        message.auctions.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.auction.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisState message.
             * @function verify
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisState.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.next_auction_id != null && message.hasOwnProperty("next_auction_id"))
                    if (!$util.isInteger(message.next_auction_id) && !(message.next_auction_id && $util.isInteger(message.next_auction_id.low) && $util.isInteger(message.next_auction_id.high)))
                        return "next_auction_id: integer|Long expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.auction.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                if (message.auctions != null && message.hasOwnProperty("auctions")) {
                    if (!Array.isArray(message.auctions))
                        return "auctions: array expected";
                    for (let i = 0; i < message.auctions.length; ++i) {
                        let error = $root.google.protobuf.Any.verify(message.auctions[i]);
                        if (error)
                            return "auctions." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.auction.GenesisState} GenesisState
             */
            GenesisState.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.auction.GenesisState)
                    return object;
                let message = new $root.ununifi.auction.GenesisState();
                if (object.next_auction_id != null)
                    if ($util.Long)
                        (message.next_auction_id = $util.Long.fromValue(object.next_auction_id)).unsigned = true;
                    else if (typeof object.next_auction_id === "string")
                        message.next_auction_id = parseInt(object.next_auction_id, 10);
                    else if (typeof object.next_auction_id === "number")
                        message.next_auction_id = object.next_auction_id;
                    else if (typeof object.next_auction_id === "object")
                        message.next_auction_id = new $util.LongBits(object.next_auction_id.low >>> 0, object.next_auction_id.high >>> 0).toNumber(true);
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.auction.GenesisState.params: object expected");
                    message.params = $root.ununifi.auction.Params.fromObject(object.params);
                }
                if (object.auctions) {
                    if (!Array.isArray(object.auctions))
                        throw TypeError(".ununifi.auction.GenesisState.auctions: array expected");
                    message.auctions = [];
                    for (let i = 0; i < object.auctions.length; ++i) {
                        if (typeof object.auctions[i] !== "object")
                            throw TypeError(".ununifi.auction.GenesisState.auctions: object expected");
                        message.auctions[i] = $root.google.protobuf.Any.fromObject(object.auctions[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.auction.GenesisState
             * @static
             * @param {ununifi.auction.GenesisState} message GenesisState
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisState.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.auctions = [];
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.next_auction_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.next_auction_id = options.longs === String ? "0" : 0;
                    object.params = null;
                }
                if (message.next_auction_id != null && message.hasOwnProperty("next_auction_id"))
                    if (typeof message.next_auction_id === "number")
                        object.next_auction_id = options.longs === String ? String(message.next_auction_id) : message.next_auction_id;
                    else
                        object.next_auction_id = options.longs === String ? $util.Long.prototype.toString.call(message.next_auction_id) : options.longs === Number ? new $util.LongBits(message.next_auction_id.low >>> 0, message.next_auction_id.high >>> 0).toNumber(true) : message.next_auction_id;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.auction.Params.toObject(message.params, options);
                if (message.auctions && message.auctions.length) {
                    object.auctions = [];
                    for (let j = 0; j < message.auctions.length; ++j)
                        object.auctions[j] = $root.google.protobuf.Any.toObject(message.auctions[j], options);
                }
                return object;
            };

            /**
             * Converts this GenesisState to JSON.
             * @function toJSON
             * @memberof ununifi.auction.GenesisState
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisState.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisState;
        })();

        return auction;
    })();

    ununifi.cdp = (function() {

        /**
         * Namespace cdp.
         * @memberof ununifi
         * @namespace
         */
        const cdp = {};

        cdp.Query = (function() {

            /**
             * Constructs a new Query service.
             * @memberof ununifi.cdp
             * @classdesc Represents a Query
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Query(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;

            /**
             * Callback as used by {@link ununifi.cdp.Query#params}.
             * @memberof ununifi.cdp.Query
             * @typedef ParamsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.QueryParamsResponse} [response] QueryParamsResponse
             */

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @param {ununifi.cdp.Query.ParamsCallback} callback Node-style callback called with the error, if any, and QueryParamsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.params = function params(request, callback) {
                return this.rpcCall(params, $root.ununifi.cdp.QueryParamsRequest, $root.ununifi.cdp.QueryParamsResponse, request, callback);
            }, "name", { value: "Params" });

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @returns {Promise<ununifi.cdp.QueryParamsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Query#cdp}.
             * @memberof ununifi.cdp.Query
             * @typedef CdpCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.QueryGetCdpResponse} [response] QueryGetCdpResponse
             */

            /**
             * Calls Cdp.
             * @function cdp
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryGetCdpRequest} request QueryGetCdpRequest message or plain object
             * @param {ununifi.cdp.Query.CdpCallback} callback Node-style callback called with the error, if any, and QueryGetCdpResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.cdp = function cdp(request, callback) {
                return this.rpcCall(cdp, $root.ununifi.cdp.QueryGetCdpRequest, $root.ununifi.cdp.QueryGetCdpResponse, request, callback);
            }, "name", { value: "Cdp" });

            /**
             * Calls Cdp.
             * @function cdp
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryGetCdpRequest} request QueryGetCdpRequest message or plain object
             * @returns {Promise<ununifi.cdp.QueryGetCdpResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Query#cdpAll}.
             * @memberof ununifi.cdp.Query
             * @typedef CdpAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.QueryAllCdpResponse} [response] QueryAllCdpResponse
             */

            /**
             * Calls CdpAll.
             * @function cdpAll
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryAllCdpRequest} request QueryAllCdpRequest message or plain object
             * @param {ununifi.cdp.Query.CdpAllCallback} callback Node-style callback called with the error, if any, and QueryAllCdpResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.cdpAll = function cdpAll(request, callback) {
                return this.rpcCall(cdpAll, $root.ununifi.cdp.QueryAllCdpRequest, $root.ununifi.cdp.QueryAllCdpResponse, request, callback);
            }, "name", { value: "CdpAll" });

            /**
             * Calls CdpAll.
             * @function cdpAll
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryAllCdpRequest} request QueryAllCdpRequest message or plain object
             * @returns {Promise<ununifi.cdp.QueryAllCdpResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Query#accountAll}.
             * @memberof ununifi.cdp.Query
             * @typedef AccountAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.QueryAllAccountResponse} [response] QueryAllAccountResponse
             */

            /**
             * Calls AccountAll.
             * @function accountAll
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryAllAccountRequest} request QueryAllAccountRequest message or plain object
             * @param {ununifi.cdp.Query.AccountAllCallback} callback Node-style callback called with the error, if any, and QueryAllAccountResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.accountAll = function accountAll(request, callback) {
                return this.rpcCall(accountAll, $root.ununifi.cdp.QueryAllAccountRequest, $root.ununifi.cdp.QueryAllAccountResponse, request, callback);
            }, "name", { value: "AccountAll" });

            /**
             * Calls AccountAll.
             * @function accountAll
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryAllAccountRequest} request QueryAllAccountRequest message or plain object
             * @returns {Promise<ununifi.cdp.QueryAllAccountResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Query#depositAll}.
             * @memberof ununifi.cdp.Query
             * @typedef DepositAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.QueryAllDepositResponse} [response] QueryAllDepositResponse
             */

            /**
             * Calls DepositAll.
             * @function depositAll
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryAllDepositRequest} request QueryAllDepositRequest message or plain object
             * @param {ununifi.cdp.Query.DepositAllCallback} callback Node-style callback called with the error, if any, and QueryAllDepositResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.depositAll = function depositAll(request, callback) {
                return this.rpcCall(depositAll, $root.ununifi.cdp.QueryAllDepositRequest, $root.ununifi.cdp.QueryAllDepositResponse, request, callback);
            }, "name", { value: "DepositAll" });

            /**
             * Calls DepositAll.
             * @function depositAll
             * @memberof ununifi.cdp.Query
             * @instance
             * @param {ununifi.cdp.IQueryAllDepositRequest} request QueryAllDepositRequest message or plain object
             * @returns {Promise<ununifi.cdp.QueryAllDepositResponse>} Promise
             * @variation 2
             */

            return Query;
        })();

        cdp.QueryParamsRequest = (function() {

            /**
             * Properties of a QueryParamsRequest.
             * @memberof ununifi.cdp
             * @interface IQueryParamsRequest
             */

            /**
             * Constructs a new QueryParamsRequest.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryParamsRequest.
             * @implements IQueryParamsRequest
             * @constructor
             * @param {ununifi.cdp.IQueryParamsRequest=} [properties] Properties to set
             */
            function QueryParamsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ununifi.cdp.QueryParamsRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {ununifi.cdp.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ununifi.cdp.QueryParamsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {ununifi.cdp.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryParamsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsRequest message.
             * @function verify
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryParamsRequest} QueryParamsRequest
             */
            QueryParamsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryParamsRequest)
                    return object;
                return new $root.ununifi.cdp.QueryParamsRequest();
            };

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryParamsRequest
             * @static
             * @param {ununifi.cdp.QueryParamsRequest} message QueryParamsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryParamsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsRequest;
        })();

        cdp.QueryParamsResponse = (function() {

            /**
             * Properties of a QueryParamsResponse.
             * @memberof ununifi.cdp
             * @interface IQueryParamsResponse
             * @property {ununifi.cdp.IParams|null} [params] QueryParamsResponse params
             */

            /**
             * Constructs a new QueryParamsResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryParamsResponse.
             * @implements IQueryParamsResponse
             * @constructor
             * @param {ununifi.cdp.IQueryParamsResponse=} [properties] Properties to set
             */
            function QueryParamsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryParamsResponse params.
             * @member {ununifi.cdp.IParams|null|undefined} params
             * @memberof ununifi.cdp.QueryParamsResponse
             * @instance
             */
            QueryParamsResponse.prototype.params = null;

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ununifi.cdp.QueryParamsResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {ununifi.cdp.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.cdp.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ununifi.cdp.QueryParamsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {ununifi.cdp.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryParamsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.cdp.Params.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsResponse message.
             * @function verify
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.cdp.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                return null;
            };

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryParamsResponse} QueryParamsResponse
             */
            QueryParamsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryParamsResponse)
                    return object;
                let message = new $root.ununifi.cdp.QueryParamsResponse();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.cdp.QueryParamsResponse.params: object expected");
                    message.params = $root.ununifi.cdp.Params.fromObject(object.params);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryParamsResponse
             * @static
             * @param {ununifi.cdp.QueryParamsResponse} message QueryParamsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.params = null;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.cdp.Params.toObject(message.params, options);
                return object;
            };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryParamsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsResponse;
        })();

        cdp.QueryGetCdpRequest = (function() {

            /**
             * Properties of a QueryGetCdpRequest.
             * @memberof ununifi.cdp
             * @interface IQueryGetCdpRequest
             * @property {string|null} [owner] QueryGetCdpRequest owner
             * @property {string|null} [collateral_type] QueryGetCdpRequest collateral_type
             */

            /**
             * Constructs a new QueryGetCdpRequest.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryGetCdpRequest.
             * @implements IQueryGetCdpRequest
             * @constructor
             * @param {ununifi.cdp.IQueryGetCdpRequest=} [properties] Properties to set
             */
            function QueryGetCdpRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetCdpRequest owner.
             * @member {string} owner
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @instance
             */
            QueryGetCdpRequest.prototype.owner = "";

            /**
             * QueryGetCdpRequest collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @instance
             */
            QueryGetCdpRequest.prototype.collateral_type = "";

            /**
             * Encodes the specified QueryGetCdpRequest message. Does not implicitly {@link ununifi.cdp.QueryGetCdpRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {ununifi.cdp.IQueryGetCdpRequest} message QueryGetCdpRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetCdpRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.owner);
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.collateral_type);
                return writer;
            };

            /**
             * Encodes the specified QueryGetCdpRequest message, length delimited. Does not implicitly {@link ununifi.cdp.QueryGetCdpRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {ununifi.cdp.IQueryGetCdpRequest} message QueryGetCdpRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetCdpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetCdpRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryGetCdpRequest} QueryGetCdpRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetCdpRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryGetCdpRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.owner = reader.string();
                        break;
                    case 2:
                        message.collateral_type = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetCdpRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryGetCdpRequest} QueryGetCdpRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetCdpRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetCdpRequest message.
             * @function verify
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetCdpRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                return null;
            };

            /**
             * Creates a QueryGetCdpRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryGetCdpRequest} QueryGetCdpRequest
             */
            QueryGetCdpRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryGetCdpRequest)
                    return object;
                let message = new $root.ununifi.cdp.QueryGetCdpRequest();
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                return message;
            };

            /**
             * Creates a plain object from a QueryGetCdpRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @static
             * @param {ununifi.cdp.QueryGetCdpRequest} message QueryGetCdpRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetCdpRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.owner = "";
                    object.collateral_type = "";
                }
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                return object;
            };

            /**
             * Converts this QueryGetCdpRequest to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryGetCdpRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetCdpRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetCdpRequest;
        })();

        cdp.QueryGetCdpResponse = (function() {

            /**
             * Properties of a QueryGetCdpResponse.
             * @memberof ununifi.cdp
             * @interface IQueryGetCdpResponse
             * @property {ununifi.cdp.IAugmentedCdp|null} [cdp] QueryGetCdpResponse cdp
             */

            /**
             * Constructs a new QueryGetCdpResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryGetCdpResponse.
             * @implements IQueryGetCdpResponse
             * @constructor
             * @param {ununifi.cdp.IQueryGetCdpResponse=} [properties] Properties to set
             */
            function QueryGetCdpResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetCdpResponse cdp.
             * @member {ununifi.cdp.IAugmentedCdp|null|undefined} cdp
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @instance
             */
            QueryGetCdpResponse.prototype.cdp = null;

            /**
             * Encodes the specified QueryGetCdpResponse message. Does not implicitly {@link ununifi.cdp.QueryGetCdpResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {ununifi.cdp.IQueryGetCdpResponse} message QueryGetCdpResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetCdpResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.cdp != null && Object.hasOwnProperty.call(message, "cdp"))
                    $root.ununifi.cdp.AugmentedCdp.encode(message.cdp, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryGetCdpResponse message, length delimited. Does not implicitly {@link ununifi.cdp.QueryGetCdpResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {ununifi.cdp.IQueryGetCdpResponse} message QueryGetCdpResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetCdpResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetCdpResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryGetCdpResponse} QueryGetCdpResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetCdpResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryGetCdpResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.cdp = $root.ununifi.cdp.AugmentedCdp.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetCdpResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryGetCdpResponse} QueryGetCdpResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetCdpResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetCdpResponse message.
             * @function verify
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetCdpResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.cdp != null && message.hasOwnProperty("cdp")) {
                    let error = $root.ununifi.cdp.AugmentedCdp.verify(message.cdp);
                    if (error)
                        return "cdp." + error;
                }
                return null;
            };

            /**
             * Creates a QueryGetCdpResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryGetCdpResponse} QueryGetCdpResponse
             */
            QueryGetCdpResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryGetCdpResponse)
                    return object;
                let message = new $root.ununifi.cdp.QueryGetCdpResponse();
                if (object.cdp != null) {
                    if (typeof object.cdp !== "object")
                        throw TypeError(".ununifi.cdp.QueryGetCdpResponse.cdp: object expected");
                    message.cdp = $root.ununifi.cdp.AugmentedCdp.fromObject(object.cdp);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryGetCdpResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @static
             * @param {ununifi.cdp.QueryGetCdpResponse} message QueryGetCdpResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetCdpResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.cdp = null;
                if (message.cdp != null && message.hasOwnProperty("cdp"))
                    object.cdp = $root.ununifi.cdp.AugmentedCdp.toObject(message.cdp, options);
                return object;
            };

            /**
             * Converts this QueryGetCdpResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryGetCdpResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetCdpResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetCdpResponse;
        })();

        cdp.QueryAllCdpRequest = (function() {

            /**
             * Properties of a QueryAllCdpRequest.
             * @memberof ununifi.cdp
             * @interface IQueryAllCdpRequest
             * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllCdpRequest pagination
             */

            /**
             * Constructs a new QueryAllCdpRequest.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryAllCdpRequest.
             * @implements IQueryAllCdpRequest
             * @constructor
             * @param {ununifi.cdp.IQueryAllCdpRequest=} [properties] Properties to set
             */
            function QueryAllCdpRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllCdpRequest pagination.
             * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @instance
             */
            QueryAllCdpRequest.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllCdpRequest message. Does not implicitly {@link ununifi.cdp.QueryAllCdpRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {ununifi.cdp.IQueryAllCdpRequest} message QueryAllCdpRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllCdpRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllCdpRequest message, length delimited. Does not implicitly {@link ununifi.cdp.QueryAllCdpRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {ununifi.cdp.IQueryAllCdpRequest} message QueryAllCdpRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllCdpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllCdpRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryAllCdpRequest} QueryAllCdpRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllCdpRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryAllCdpRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllCdpRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryAllCdpRequest} QueryAllCdpRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllCdpRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllCdpRequest message.
             * @function verify
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllCdpRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllCdpRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryAllCdpRequest} QueryAllCdpRequest
             */
            QueryAllCdpRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryAllCdpRequest)
                    return object;
                let message = new $root.ununifi.cdp.QueryAllCdpRequest();
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.cdp.QueryAllCdpRequest.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllCdpRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @static
             * @param {ununifi.cdp.QueryAllCdpRequest} message QueryAllCdpRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllCdpRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.pagination = null;
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllCdpRequest to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryAllCdpRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllCdpRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllCdpRequest;
        })();

        cdp.QueryAllCdpResponse = (function() {

            /**
             * Properties of a QueryAllCdpResponse.
             * @memberof ununifi.cdp
             * @interface IQueryAllCdpResponse
             * @property {Array.<ununifi.cdp.IAugmentedCdp>|null} [cdp] QueryAllCdpResponse cdp
             * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllCdpResponse pagination
             */

            /**
             * Constructs a new QueryAllCdpResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryAllCdpResponse.
             * @implements IQueryAllCdpResponse
             * @constructor
             * @param {ununifi.cdp.IQueryAllCdpResponse=} [properties] Properties to set
             */
            function QueryAllCdpResponse(properties) {
                this.cdp = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllCdpResponse cdp.
             * @member {Array.<ununifi.cdp.IAugmentedCdp>} cdp
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @instance
             */
            QueryAllCdpResponse.prototype.cdp = $util.emptyArray;

            /**
             * QueryAllCdpResponse pagination.
             * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @instance
             */
            QueryAllCdpResponse.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllCdpResponse message. Does not implicitly {@link ununifi.cdp.QueryAllCdpResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {ununifi.cdp.IQueryAllCdpResponse} message QueryAllCdpResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllCdpResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.cdp != null && message.cdp.length)
                    for (let i = 0; i < message.cdp.length; ++i)
                        $root.ununifi.cdp.AugmentedCdp.encode(message.cdp[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllCdpResponse message, length delimited. Does not implicitly {@link ununifi.cdp.QueryAllCdpResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {ununifi.cdp.IQueryAllCdpResponse} message QueryAllCdpResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllCdpResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllCdpResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryAllCdpResponse} QueryAllCdpResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllCdpResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryAllCdpResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.cdp && message.cdp.length))
                            message.cdp = [];
                        message.cdp.push($root.ununifi.cdp.AugmentedCdp.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllCdpResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryAllCdpResponse} QueryAllCdpResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllCdpResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllCdpResponse message.
             * @function verify
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllCdpResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.cdp != null && message.hasOwnProperty("cdp")) {
                    if (!Array.isArray(message.cdp))
                        return "cdp: array expected";
                    for (let i = 0; i < message.cdp.length; ++i) {
                        let error = $root.ununifi.cdp.AugmentedCdp.verify(message.cdp[i]);
                        if (error)
                            return "cdp." + error;
                    }
                }
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllCdpResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryAllCdpResponse} QueryAllCdpResponse
             */
            QueryAllCdpResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryAllCdpResponse)
                    return object;
                let message = new $root.ununifi.cdp.QueryAllCdpResponse();
                if (object.cdp) {
                    if (!Array.isArray(object.cdp))
                        throw TypeError(".ununifi.cdp.QueryAllCdpResponse.cdp: array expected");
                    message.cdp = [];
                    for (let i = 0; i < object.cdp.length; ++i) {
                        if (typeof object.cdp[i] !== "object")
                            throw TypeError(".ununifi.cdp.QueryAllCdpResponse.cdp: object expected");
                        message.cdp[i] = $root.ununifi.cdp.AugmentedCdp.fromObject(object.cdp[i]);
                    }
                }
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.cdp.QueryAllCdpResponse.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllCdpResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @static
             * @param {ununifi.cdp.QueryAllCdpResponse} message QueryAllCdpResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllCdpResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.cdp = [];
                if (options.defaults)
                    object.pagination = null;
                if (message.cdp && message.cdp.length) {
                    object.cdp = [];
                    for (let j = 0; j < message.cdp.length; ++j)
                        object.cdp[j] = $root.ununifi.cdp.AugmentedCdp.toObject(message.cdp[j], options);
                }
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllCdpResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryAllCdpResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllCdpResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllCdpResponse;
        })();

        cdp.QueryAllAccountRequest = (function() {

            /**
             * Properties of a QueryAllAccountRequest.
             * @memberof ununifi.cdp
             * @interface IQueryAllAccountRequest
             */

            /**
             * Constructs a new QueryAllAccountRequest.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryAllAccountRequest.
             * @implements IQueryAllAccountRequest
             * @constructor
             * @param {ununifi.cdp.IQueryAllAccountRequest=} [properties] Properties to set
             */
            function QueryAllAccountRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryAllAccountRequest message. Does not implicitly {@link ununifi.cdp.QueryAllAccountRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {ununifi.cdp.IQueryAllAccountRequest} message QueryAllAccountRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAccountRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryAllAccountRequest message, length delimited. Does not implicitly {@link ununifi.cdp.QueryAllAccountRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {ununifi.cdp.IQueryAllAccountRequest} message QueryAllAccountRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAccountRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllAccountRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryAllAccountRequest} QueryAllAccountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAccountRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryAllAccountRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllAccountRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryAllAccountRequest} QueryAllAccountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAccountRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllAccountRequest message.
             * @function verify
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllAccountRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryAllAccountRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryAllAccountRequest} QueryAllAccountRequest
             */
            QueryAllAccountRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryAllAccountRequest)
                    return object;
                return new $root.ununifi.cdp.QueryAllAccountRequest();
            };

            /**
             * Creates a plain object from a QueryAllAccountRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @static
             * @param {ununifi.cdp.QueryAllAccountRequest} message QueryAllAccountRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllAccountRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryAllAccountRequest to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryAllAccountRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllAccountRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllAccountRequest;
        })();

        cdp.QueryAllAccountResponse = (function() {

            /**
             * Properties of a QueryAllAccountResponse.
             * @memberof ununifi.cdp
             * @interface IQueryAllAccountResponse
             * @property {Array.<google.protobuf.IAny>|null} [accounts] QueryAllAccountResponse accounts
             */

            /**
             * Constructs a new QueryAllAccountResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryAllAccountResponse.
             * @implements IQueryAllAccountResponse
             * @constructor
             * @param {ununifi.cdp.IQueryAllAccountResponse=} [properties] Properties to set
             */
            function QueryAllAccountResponse(properties) {
                this.accounts = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllAccountResponse accounts.
             * @member {Array.<google.protobuf.IAny>} accounts
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @instance
             */
            QueryAllAccountResponse.prototype.accounts = $util.emptyArray;

            /**
             * Encodes the specified QueryAllAccountResponse message. Does not implicitly {@link ununifi.cdp.QueryAllAccountResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {ununifi.cdp.IQueryAllAccountResponse} message QueryAllAccountResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAccountResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.accounts != null && message.accounts.length)
                    for (let i = 0; i < message.accounts.length; ++i)
                        $root.google.protobuf.Any.encode(message.accounts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllAccountResponse message, length delimited. Does not implicitly {@link ununifi.cdp.QueryAllAccountResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {ununifi.cdp.IQueryAllAccountResponse} message QueryAllAccountResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllAccountResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllAccountResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryAllAccountResponse} QueryAllAccountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAccountResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryAllAccountResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.accounts && message.accounts.length))
                            message.accounts = [];
                        message.accounts.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllAccountResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryAllAccountResponse} QueryAllAccountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllAccountResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllAccountResponse message.
             * @function verify
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllAccountResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.accounts != null && message.hasOwnProperty("accounts")) {
                    if (!Array.isArray(message.accounts))
                        return "accounts: array expected";
                    for (let i = 0; i < message.accounts.length; ++i) {
                        let error = $root.google.protobuf.Any.verify(message.accounts[i]);
                        if (error)
                            return "accounts." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a QueryAllAccountResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryAllAccountResponse} QueryAllAccountResponse
             */
            QueryAllAccountResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryAllAccountResponse)
                    return object;
                let message = new $root.ununifi.cdp.QueryAllAccountResponse();
                if (object.accounts) {
                    if (!Array.isArray(object.accounts))
                        throw TypeError(".ununifi.cdp.QueryAllAccountResponse.accounts: array expected");
                    message.accounts = [];
                    for (let i = 0; i < object.accounts.length; ++i) {
                        if (typeof object.accounts[i] !== "object")
                            throw TypeError(".ununifi.cdp.QueryAllAccountResponse.accounts: object expected");
                        message.accounts[i] = $root.google.protobuf.Any.fromObject(object.accounts[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllAccountResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @static
             * @param {ununifi.cdp.QueryAllAccountResponse} message QueryAllAccountResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllAccountResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.accounts = [];
                if (message.accounts && message.accounts.length) {
                    object.accounts = [];
                    for (let j = 0; j < message.accounts.length; ++j)
                        object.accounts[j] = $root.google.protobuf.Any.toObject(message.accounts[j], options);
                }
                return object;
            };

            /**
             * Converts this QueryAllAccountResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryAllAccountResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllAccountResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllAccountResponse;
        })();

        cdp.QueryAllDepositRequest = (function() {

            /**
             * Properties of a QueryAllDepositRequest.
             * @memberof ununifi.cdp
             * @interface IQueryAllDepositRequest
             * @property {string|null} [owner] QueryAllDepositRequest owner
             * @property {string|null} [collateral_type] QueryAllDepositRequest collateral_type
             */

            /**
             * Constructs a new QueryAllDepositRequest.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryAllDepositRequest.
             * @implements IQueryAllDepositRequest
             * @constructor
             * @param {ununifi.cdp.IQueryAllDepositRequest=} [properties] Properties to set
             */
            function QueryAllDepositRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllDepositRequest owner.
             * @member {string} owner
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @instance
             */
            QueryAllDepositRequest.prototype.owner = "";

            /**
             * QueryAllDepositRequest collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @instance
             */
            QueryAllDepositRequest.prototype.collateral_type = "";

            /**
             * Encodes the specified QueryAllDepositRequest message. Does not implicitly {@link ununifi.cdp.QueryAllDepositRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {ununifi.cdp.IQueryAllDepositRequest} message QueryAllDepositRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllDepositRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.owner);
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.collateral_type);
                return writer;
            };

            /**
             * Encodes the specified QueryAllDepositRequest message, length delimited. Does not implicitly {@link ununifi.cdp.QueryAllDepositRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {ununifi.cdp.IQueryAllDepositRequest} message QueryAllDepositRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllDepositRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllDepositRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryAllDepositRequest} QueryAllDepositRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllDepositRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryAllDepositRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.owner = reader.string();
                        break;
                    case 2:
                        message.collateral_type = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllDepositRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryAllDepositRequest} QueryAllDepositRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllDepositRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllDepositRequest message.
             * @function verify
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllDepositRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                return null;
            };

            /**
             * Creates a QueryAllDepositRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryAllDepositRequest} QueryAllDepositRequest
             */
            QueryAllDepositRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryAllDepositRequest)
                    return object;
                let message = new $root.ununifi.cdp.QueryAllDepositRequest();
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                return message;
            };

            /**
             * Creates a plain object from a QueryAllDepositRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @static
             * @param {ununifi.cdp.QueryAllDepositRequest} message QueryAllDepositRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllDepositRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.owner = "";
                    object.collateral_type = "";
                }
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                return object;
            };

            /**
             * Converts this QueryAllDepositRequest to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryAllDepositRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllDepositRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllDepositRequest;
        })();

        cdp.QueryAllDepositResponse = (function() {

            /**
             * Properties of a QueryAllDepositResponse.
             * @memberof ununifi.cdp
             * @interface IQueryAllDepositResponse
             * @property {Array.<ununifi.cdp.IDeposit>|null} [deposits] QueryAllDepositResponse deposits
             */

            /**
             * Constructs a new QueryAllDepositResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a QueryAllDepositResponse.
             * @implements IQueryAllDepositResponse
             * @constructor
             * @param {ununifi.cdp.IQueryAllDepositResponse=} [properties] Properties to set
             */
            function QueryAllDepositResponse(properties) {
                this.deposits = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllDepositResponse deposits.
             * @member {Array.<ununifi.cdp.IDeposit>} deposits
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @instance
             */
            QueryAllDepositResponse.prototype.deposits = $util.emptyArray;

            /**
             * Encodes the specified QueryAllDepositResponse message. Does not implicitly {@link ununifi.cdp.QueryAllDepositResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {ununifi.cdp.IQueryAllDepositResponse} message QueryAllDepositResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllDepositResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.deposits != null && message.deposits.length)
                    for (let i = 0; i < message.deposits.length; ++i)
                        $root.ununifi.cdp.Deposit.encode(message.deposits[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllDepositResponse message, length delimited. Does not implicitly {@link ununifi.cdp.QueryAllDepositResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {ununifi.cdp.IQueryAllDepositResponse} message QueryAllDepositResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllDepositResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllDepositResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.QueryAllDepositResponse} QueryAllDepositResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllDepositResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.QueryAllDepositResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.deposits && message.deposits.length))
                            message.deposits = [];
                        message.deposits.push($root.ununifi.cdp.Deposit.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllDepositResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.QueryAllDepositResponse} QueryAllDepositResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllDepositResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllDepositResponse message.
             * @function verify
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllDepositResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.deposits != null && message.hasOwnProperty("deposits")) {
                    if (!Array.isArray(message.deposits))
                        return "deposits: array expected";
                    for (let i = 0; i < message.deposits.length; ++i) {
                        let error = $root.ununifi.cdp.Deposit.verify(message.deposits[i]);
                        if (error)
                            return "deposits." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a QueryAllDepositResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.QueryAllDepositResponse} QueryAllDepositResponse
             */
            QueryAllDepositResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.QueryAllDepositResponse)
                    return object;
                let message = new $root.ununifi.cdp.QueryAllDepositResponse();
                if (object.deposits) {
                    if (!Array.isArray(object.deposits))
                        throw TypeError(".ununifi.cdp.QueryAllDepositResponse.deposits: array expected");
                    message.deposits = [];
                    for (let i = 0; i < object.deposits.length; ++i) {
                        if (typeof object.deposits[i] !== "object")
                            throw TypeError(".ununifi.cdp.QueryAllDepositResponse.deposits: object expected");
                        message.deposits[i] = $root.ununifi.cdp.Deposit.fromObject(object.deposits[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllDepositResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @static
             * @param {ununifi.cdp.QueryAllDepositResponse} message QueryAllDepositResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllDepositResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.deposits = [];
                if (message.deposits && message.deposits.length) {
                    object.deposits = [];
                    for (let j = 0; j < message.deposits.length; ++j)
                        object.deposits[j] = $root.ununifi.cdp.Deposit.toObject(message.deposits[j], options);
                }
                return object;
            };

            /**
             * Converts this QueryAllDepositResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.QueryAllDepositResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllDepositResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllDepositResponse;
        })();

        cdp.Cdp = (function() {

            /**
             * Properties of a Cdp.
             * @memberof ununifi.cdp
             * @interface ICdp
             * @property {Long|null} [id] Cdp id
             * @property {string|null} [owner] Cdp owner
             * @property {string|null} [type] Cdp type
             * @property {cosmos.base.v1beta1.ICoin|null} [collateral] Cdp collateral
             * @property {cosmos.base.v1beta1.ICoin|null} [principal] Cdp principal
             * @property {cosmos.base.v1beta1.ICoin|null} [accumulated_fees] Cdp accumulated_fees
             * @property {google.protobuf.ITimestamp|null} [fees_updated] Cdp fees_updated
             * @property {string|null} [interest_factor] Cdp interest_factor
             */

            /**
             * Constructs a new Cdp.
             * @memberof ununifi.cdp
             * @classdesc Represents a Cdp.
             * @implements ICdp
             * @constructor
             * @param {ununifi.cdp.ICdp=} [properties] Properties to set
             */
            function Cdp(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Cdp id.
             * @member {Long} id
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * Cdp owner.
             * @member {string} owner
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.owner = "";

            /**
             * Cdp type.
             * @member {string} type
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.type = "";

            /**
             * Cdp collateral.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} collateral
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.collateral = null;

            /**
             * Cdp principal.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} principal
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.principal = null;

            /**
             * Cdp accumulated_fees.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} accumulated_fees
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.accumulated_fees = null;

            /**
             * Cdp fees_updated.
             * @member {google.protobuf.ITimestamp|null|undefined} fees_updated
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.fees_updated = null;

            /**
             * Cdp interest_factor.
             * @member {string} interest_factor
             * @memberof ununifi.cdp.Cdp
             * @instance
             */
            Cdp.prototype.interest_factor = "";

            /**
             * Encodes the specified Cdp message. Does not implicitly {@link ununifi.cdp.Cdp.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {ununifi.cdp.ICdp} message Cdp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Cdp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.id);
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.owner);
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                if (message.collateral != null && Object.hasOwnProperty.call(message, "collateral"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.collateral, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.principal != null && Object.hasOwnProperty.call(message, "principal"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.principal, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.accumulated_fees != null && Object.hasOwnProperty.call(message, "accumulated_fees"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.accumulated_fees, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.fees_updated != null && Object.hasOwnProperty.call(message, "fees_updated"))
                    $root.google.protobuf.Timestamp.encode(message.fees_updated, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.interest_factor != null && Object.hasOwnProperty.call(message, "interest_factor"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.interest_factor);
                return writer;
            };

            /**
             * Encodes the specified Cdp message, length delimited. Does not implicitly {@link ununifi.cdp.Cdp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {ununifi.cdp.ICdp} message Cdp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Cdp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Cdp message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.Cdp} Cdp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Cdp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.Cdp();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.id = reader.uint64();
                        break;
                    case 2:
                        message.owner = reader.string();
                        break;
                    case 3:
                        message.type = reader.string();
                        break;
                    case 4:
                        message.collateral = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 5:
                        message.principal = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 6:
                        message.accumulated_fees = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 7:
                        message.fees_updated = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 8:
                        message.interest_factor = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Cdp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.Cdp} Cdp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Cdp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Cdp message.
             * @function verify
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Cdp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.id != null && message.hasOwnProperty("id"))
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    if (!$util.isString(message.type))
                        return "type: string expected";
                if (message.collateral != null && message.hasOwnProperty("collateral")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.collateral);
                    if (error)
                        return "collateral." + error;
                }
                if (message.principal != null && message.hasOwnProperty("principal")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.principal);
                    if (error)
                        return "principal." + error;
                }
                if (message.accumulated_fees != null && message.hasOwnProperty("accumulated_fees")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.accumulated_fees);
                    if (error)
                        return "accumulated_fees." + error;
                }
                if (message.fees_updated != null && message.hasOwnProperty("fees_updated")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.fees_updated);
                    if (error)
                        return "fees_updated." + error;
                }
                if (message.interest_factor != null && message.hasOwnProperty("interest_factor"))
                    if (!$util.isString(message.interest_factor))
                        return "interest_factor: string expected";
                return null;
            };

            /**
             * Creates a Cdp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.Cdp} Cdp
             */
            Cdp.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.Cdp)
                    return object;
                let message = new $root.ununifi.cdp.Cdp();
                if (object.id != null)
                    if ($util.Long)
                        (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                    else if (typeof object.id === "string")
                        message.id = parseInt(object.id, 10);
                    else if (typeof object.id === "number")
                        message.id = object.id;
                    else if (typeof object.id === "object")
                        message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.type != null)
                    message.type = String(object.type);
                if (object.collateral != null) {
                    if (typeof object.collateral !== "object")
                        throw TypeError(".ununifi.cdp.Cdp.collateral: object expected");
                    message.collateral = $root.cosmos.base.v1beta1.Coin.fromObject(object.collateral);
                }
                if (object.principal != null) {
                    if (typeof object.principal !== "object")
                        throw TypeError(".ununifi.cdp.Cdp.principal: object expected");
                    message.principal = $root.cosmos.base.v1beta1.Coin.fromObject(object.principal);
                }
                if (object.accumulated_fees != null) {
                    if (typeof object.accumulated_fees !== "object")
                        throw TypeError(".ununifi.cdp.Cdp.accumulated_fees: object expected");
                    message.accumulated_fees = $root.cosmos.base.v1beta1.Coin.fromObject(object.accumulated_fees);
                }
                if (object.fees_updated != null) {
                    if (typeof object.fees_updated !== "object")
                        throw TypeError(".ununifi.cdp.Cdp.fees_updated: object expected");
                    message.fees_updated = $root.google.protobuf.Timestamp.fromObject(object.fees_updated);
                }
                if (object.interest_factor != null)
                    message.interest_factor = String(object.interest_factor);
                return message;
            };

            /**
             * Creates a plain object from a Cdp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.Cdp
             * @static
             * @param {ununifi.cdp.Cdp} message Cdp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Cdp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.id = options.longs === String ? "0" : 0;
                    object.owner = "";
                    object.type = "";
                    object.collateral = null;
                    object.principal = null;
                    object.accumulated_fees = null;
                    object.fees_updated = null;
                    object.interest_factor = "";
                }
                if (message.id != null && message.hasOwnProperty("id"))
                    if (typeof message.id === "number")
                        object.id = options.longs === String ? String(message.id) : message.id;
                    else
                        object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = message.type;
                if (message.collateral != null && message.hasOwnProperty("collateral"))
                    object.collateral = $root.cosmos.base.v1beta1.Coin.toObject(message.collateral, options);
                if (message.principal != null && message.hasOwnProperty("principal"))
                    object.principal = $root.cosmos.base.v1beta1.Coin.toObject(message.principal, options);
                if (message.accumulated_fees != null && message.hasOwnProperty("accumulated_fees"))
                    object.accumulated_fees = $root.cosmos.base.v1beta1.Coin.toObject(message.accumulated_fees, options);
                if (message.fees_updated != null && message.hasOwnProperty("fees_updated"))
                    object.fees_updated = $root.google.protobuf.Timestamp.toObject(message.fees_updated, options);
                if (message.interest_factor != null && message.hasOwnProperty("interest_factor"))
                    object.interest_factor = message.interest_factor;
                return object;
            };

            /**
             * Converts this Cdp to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.Cdp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Cdp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Cdp;
        })();

        cdp.Deposit = (function() {

            /**
             * Properties of a Deposit.
             * @memberof ununifi.cdp
             * @interface IDeposit
             * @property {Long|null} [cdp_id] Deposit cdp_id
             * @property {string|null} [depositor] Deposit depositor
             * @property {cosmos.base.v1beta1.ICoin|null} [amount] Deposit amount
             */

            /**
             * Constructs a new Deposit.
             * @memberof ununifi.cdp
             * @classdesc Represents a Deposit.
             * @implements IDeposit
             * @constructor
             * @param {ununifi.cdp.IDeposit=} [properties] Properties to set
             */
            function Deposit(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Deposit cdp_id.
             * @member {Long} cdp_id
             * @memberof ununifi.cdp.Deposit
             * @instance
             */
            Deposit.prototype.cdp_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * Deposit depositor.
             * @member {string} depositor
             * @memberof ununifi.cdp.Deposit
             * @instance
             */
            Deposit.prototype.depositor = "";

            /**
             * Deposit amount.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} amount
             * @memberof ununifi.cdp.Deposit
             * @instance
             */
            Deposit.prototype.amount = null;

            /**
             * Encodes the specified Deposit message. Does not implicitly {@link ununifi.cdp.Deposit.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {ununifi.cdp.IDeposit} message Deposit message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Deposit.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.cdp_id != null && Object.hasOwnProperty.call(message, "cdp_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.cdp_id);
                if (message.depositor != null && Object.hasOwnProperty.call(message, "depositor"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.depositor);
                if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.amount, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified Deposit message, length delimited. Does not implicitly {@link ununifi.cdp.Deposit.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {ununifi.cdp.IDeposit} message Deposit message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Deposit.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Deposit message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.Deposit} Deposit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Deposit.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.Deposit();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.cdp_id = reader.uint64();
                        break;
                    case 2:
                        message.depositor = reader.string();
                        break;
                    case 3:
                        message.amount = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Deposit message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.Deposit} Deposit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Deposit.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Deposit message.
             * @function verify
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Deposit.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.cdp_id != null && message.hasOwnProperty("cdp_id"))
                    if (!$util.isInteger(message.cdp_id) && !(message.cdp_id && $util.isInteger(message.cdp_id.low) && $util.isInteger(message.cdp_id.high)))
                        return "cdp_id: integer|Long expected";
                if (message.depositor != null && message.hasOwnProperty("depositor"))
                    if (!$util.isString(message.depositor))
                        return "depositor: string expected";
                if (message.amount != null && message.hasOwnProperty("amount")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.amount);
                    if (error)
                        return "amount." + error;
                }
                return null;
            };

            /**
             * Creates a Deposit message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.Deposit} Deposit
             */
            Deposit.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.Deposit)
                    return object;
                let message = new $root.ununifi.cdp.Deposit();
                if (object.cdp_id != null)
                    if ($util.Long)
                        (message.cdp_id = $util.Long.fromValue(object.cdp_id)).unsigned = true;
                    else if (typeof object.cdp_id === "string")
                        message.cdp_id = parseInt(object.cdp_id, 10);
                    else if (typeof object.cdp_id === "number")
                        message.cdp_id = object.cdp_id;
                    else if (typeof object.cdp_id === "object")
                        message.cdp_id = new $util.LongBits(object.cdp_id.low >>> 0, object.cdp_id.high >>> 0).toNumber(true);
                if (object.depositor != null)
                    message.depositor = String(object.depositor);
                if (object.amount != null) {
                    if (typeof object.amount !== "object")
                        throw TypeError(".ununifi.cdp.Deposit.amount: object expected");
                    message.amount = $root.cosmos.base.v1beta1.Coin.fromObject(object.amount);
                }
                return message;
            };

            /**
             * Creates a plain object from a Deposit message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.Deposit
             * @static
             * @param {ununifi.cdp.Deposit} message Deposit
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Deposit.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.cdp_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.cdp_id = options.longs === String ? "0" : 0;
                    object.depositor = "";
                    object.amount = null;
                }
                if (message.cdp_id != null && message.hasOwnProperty("cdp_id"))
                    if (typeof message.cdp_id === "number")
                        object.cdp_id = options.longs === String ? String(message.cdp_id) : message.cdp_id;
                    else
                        object.cdp_id = options.longs === String ? $util.Long.prototype.toString.call(message.cdp_id) : options.longs === Number ? new $util.LongBits(message.cdp_id.low >>> 0, message.cdp_id.high >>> 0).toNumber(true) : message.cdp_id;
                if (message.depositor != null && message.hasOwnProperty("depositor"))
                    object.depositor = message.depositor;
                if (message.amount != null && message.hasOwnProperty("amount"))
                    object.amount = $root.cosmos.base.v1beta1.Coin.toObject(message.amount, options);
                return object;
            };

            /**
             * Converts this Deposit to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.Deposit
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Deposit.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Deposit;
        })();

        cdp.AugmentedCdp = (function() {

            /**
             * Properties of an AugmentedCdp.
             * @memberof ununifi.cdp
             * @interface IAugmentedCdp
             * @property {ununifi.cdp.ICdp|null} [cdp] AugmentedCdp cdp
             * @property {cosmos.base.v1beta1.ICoin|null} [collateral_value] AugmentedCdp collateral_value
             * @property {string|null} [collateralization_ratio] AugmentedCdp collateralization_ratio
             */

            /**
             * Constructs a new AugmentedCdp.
             * @memberof ununifi.cdp
             * @classdesc Represents an AugmentedCdp.
             * @implements IAugmentedCdp
             * @constructor
             * @param {ununifi.cdp.IAugmentedCdp=} [properties] Properties to set
             */
            function AugmentedCdp(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AugmentedCdp cdp.
             * @member {ununifi.cdp.ICdp|null|undefined} cdp
             * @memberof ununifi.cdp.AugmentedCdp
             * @instance
             */
            AugmentedCdp.prototype.cdp = null;

            /**
             * AugmentedCdp collateral_value.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} collateral_value
             * @memberof ununifi.cdp.AugmentedCdp
             * @instance
             */
            AugmentedCdp.prototype.collateral_value = null;

            /**
             * AugmentedCdp collateralization_ratio.
             * @member {string} collateralization_ratio
             * @memberof ununifi.cdp.AugmentedCdp
             * @instance
             */
            AugmentedCdp.prototype.collateralization_ratio = "";

            /**
             * Encodes the specified AugmentedCdp message. Does not implicitly {@link ununifi.cdp.AugmentedCdp.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {ununifi.cdp.IAugmentedCdp} message AugmentedCdp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AugmentedCdp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.cdp != null && Object.hasOwnProperty.call(message, "cdp"))
                    $root.ununifi.cdp.Cdp.encode(message.cdp, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.collateral_value != null && Object.hasOwnProperty.call(message, "collateral_value"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.collateral_value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.collateralization_ratio != null && Object.hasOwnProperty.call(message, "collateralization_ratio"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.collateralization_ratio);
                return writer;
            };

            /**
             * Encodes the specified AugmentedCdp message, length delimited. Does not implicitly {@link ununifi.cdp.AugmentedCdp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {ununifi.cdp.IAugmentedCdp} message AugmentedCdp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AugmentedCdp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AugmentedCdp message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.AugmentedCdp} AugmentedCdp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AugmentedCdp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.AugmentedCdp();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.cdp = $root.ununifi.cdp.Cdp.decode(reader, reader.uint32());
                        break;
                    case 2:
                        message.collateral_value = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.collateralization_ratio = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an AugmentedCdp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.AugmentedCdp} AugmentedCdp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AugmentedCdp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AugmentedCdp message.
             * @function verify
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AugmentedCdp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.cdp != null && message.hasOwnProperty("cdp")) {
                    let error = $root.ununifi.cdp.Cdp.verify(message.cdp);
                    if (error)
                        return "cdp." + error;
                }
                if (message.collateral_value != null && message.hasOwnProperty("collateral_value")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.collateral_value);
                    if (error)
                        return "collateral_value." + error;
                }
                if (message.collateralization_ratio != null && message.hasOwnProperty("collateralization_ratio"))
                    if (!$util.isString(message.collateralization_ratio))
                        return "collateralization_ratio: string expected";
                return null;
            };

            /**
             * Creates an AugmentedCdp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.AugmentedCdp} AugmentedCdp
             */
            AugmentedCdp.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.AugmentedCdp)
                    return object;
                let message = new $root.ununifi.cdp.AugmentedCdp();
                if (object.cdp != null) {
                    if (typeof object.cdp !== "object")
                        throw TypeError(".ununifi.cdp.AugmentedCdp.cdp: object expected");
                    message.cdp = $root.ununifi.cdp.Cdp.fromObject(object.cdp);
                }
                if (object.collateral_value != null) {
                    if (typeof object.collateral_value !== "object")
                        throw TypeError(".ununifi.cdp.AugmentedCdp.collateral_value: object expected");
                    message.collateral_value = $root.cosmos.base.v1beta1.Coin.fromObject(object.collateral_value);
                }
                if (object.collateralization_ratio != null)
                    message.collateralization_ratio = String(object.collateralization_ratio);
                return message;
            };

            /**
             * Creates a plain object from an AugmentedCdp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.AugmentedCdp
             * @static
             * @param {ununifi.cdp.AugmentedCdp} message AugmentedCdp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AugmentedCdp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.cdp = null;
                    object.collateral_value = null;
                    object.collateralization_ratio = "";
                }
                if (message.cdp != null && message.hasOwnProperty("cdp"))
                    object.cdp = $root.ununifi.cdp.Cdp.toObject(message.cdp, options);
                if (message.collateral_value != null && message.hasOwnProperty("collateral_value"))
                    object.collateral_value = $root.cosmos.base.v1beta1.Coin.toObject(message.collateral_value, options);
                if (message.collateralization_ratio != null && message.hasOwnProperty("collateralization_ratio"))
                    object.collateralization_ratio = message.collateralization_ratio;
                return object;
            };

            /**
             * Converts this AugmentedCdp to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.AugmentedCdp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AugmentedCdp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return AugmentedCdp;
        })();

        cdp.Params = (function() {

            /**
             * Properties of a Params.
             * @memberof ununifi.cdp
             * @interface IParams
             * @property {Array.<ununifi.cdp.ICollateralParam>|null} [collateral_params] Params collateral_params
             * @property {ununifi.cdp.IDebtParam|null} [debt_param] Params debt_param
             * @property {cosmos.base.v1beta1.ICoin|null} [global_debt_limit] Params global_debt_limit
             * @property {string|null} [surplus_auction_threshold] Params surplus_auction_threshold
             * @property {string|null} [surplus_auction_lot] Params surplus_auction_lot
             * @property {string|null} [debt_auction_threshold] Params debt_auction_threshold
             * @property {string|null} [debt_auction_lot] Params debt_auction_lot
             * @property {boolean|null} [circuit_breaker] Params circuit_breaker
             */

            /**
             * Constructs a new Params.
             * @memberof ununifi.cdp
             * @classdesc Represents a Params.
             * @implements IParams
             * @constructor
             * @param {ununifi.cdp.IParams=} [properties] Properties to set
             */
            function Params(properties) {
                this.collateral_params = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Params collateral_params.
             * @member {Array.<ununifi.cdp.ICollateralParam>} collateral_params
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.collateral_params = $util.emptyArray;

            /**
             * Params debt_param.
             * @member {ununifi.cdp.IDebtParam|null|undefined} debt_param
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.debt_param = null;

            /**
             * Params global_debt_limit.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} global_debt_limit
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.global_debt_limit = null;

            /**
             * Params surplus_auction_threshold.
             * @member {string} surplus_auction_threshold
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.surplus_auction_threshold = "";

            /**
             * Params surplus_auction_lot.
             * @member {string} surplus_auction_lot
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.surplus_auction_lot = "";

            /**
             * Params debt_auction_threshold.
             * @member {string} debt_auction_threshold
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.debt_auction_threshold = "";

            /**
             * Params debt_auction_lot.
             * @member {string} debt_auction_lot
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.debt_auction_lot = "";

            /**
             * Params circuit_breaker.
             * @member {boolean} circuit_breaker
             * @memberof ununifi.cdp.Params
             * @instance
             */
            Params.prototype.circuit_breaker = false;

            /**
             * Encodes the specified Params message. Does not implicitly {@link ununifi.cdp.Params.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.Params
             * @static
             * @param {ununifi.cdp.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.collateral_params != null && message.collateral_params.length)
                    for (let i = 0; i < message.collateral_params.length; ++i)
                        $root.ununifi.cdp.CollateralParam.encode(message.collateral_params[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.debt_param != null && Object.hasOwnProperty.call(message, "debt_param"))
                    $root.ununifi.cdp.DebtParam.encode(message.debt_param, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.global_debt_limit != null && Object.hasOwnProperty.call(message, "global_debt_limit"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.global_debt_limit, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.surplus_auction_threshold != null && Object.hasOwnProperty.call(message, "surplus_auction_threshold"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.surplus_auction_threshold);
                if (message.surplus_auction_lot != null && Object.hasOwnProperty.call(message, "surplus_auction_lot"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.surplus_auction_lot);
                if (message.debt_auction_threshold != null && Object.hasOwnProperty.call(message, "debt_auction_threshold"))
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.debt_auction_threshold);
                if (message.debt_auction_lot != null && Object.hasOwnProperty.call(message, "debt_auction_lot"))
                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.debt_auction_lot);
                if (message.circuit_breaker != null && Object.hasOwnProperty.call(message, "circuit_breaker"))
                    writer.uint32(/* id 8, wireType 0 =*/64).bool(message.circuit_breaker);
                return writer;
            };

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link ununifi.cdp.Params.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.Params
             * @static
             * @param {ununifi.cdp.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.Params();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.collateral_params && message.collateral_params.length))
                            message.collateral_params = [];
                        message.collateral_params.push($root.ununifi.cdp.CollateralParam.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.debt_param = $root.ununifi.cdp.DebtParam.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.global_debt_limit = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.surplus_auction_threshold = reader.string();
                        break;
                    case 5:
                        message.surplus_auction_lot = reader.string();
                        break;
                    case 6:
                        message.debt_auction_threshold = reader.string();
                        break;
                    case 7:
                        message.debt_auction_lot = reader.string();
                        break;
                    case 8:
                        message.circuit_breaker = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Params message.
             * @function verify
             * @memberof ununifi.cdp.Params
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Params.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.collateral_params != null && message.hasOwnProperty("collateral_params")) {
                    if (!Array.isArray(message.collateral_params))
                        return "collateral_params: array expected";
                    for (let i = 0; i < message.collateral_params.length; ++i) {
                        let error = $root.ununifi.cdp.CollateralParam.verify(message.collateral_params[i]);
                        if (error)
                            return "collateral_params." + error;
                    }
                }
                if (message.debt_param != null && message.hasOwnProperty("debt_param")) {
                    let error = $root.ununifi.cdp.DebtParam.verify(message.debt_param);
                    if (error)
                        return "debt_param." + error;
                }
                if (message.global_debt_limit != null && message.hasOwnProperty("global_debt_limit")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.global_debt_limit);
                    if (error)
                        return "global_debt_limit." + error;
                }
                if (message.surplus_auction_threshold != null && message.hasOwnProperty("surplus_auction_threshold"))
                    if (!$util.isString(message.surplus_auction_threshold))
                        return "surplus_auction_threshold: string expected";
                if (message.surplus_auction_lot != null && message.hasOwnProperty("surplus_auction_lot"))
                    if (!$util.isString(message.surplus_auction_lot))
                        return "surplus_auction_lot: string expected";
                if (message.debt_auction_threshold != null && message.hasOwnProperty("debt_auction_threshold"))
                    if (!$util.isString(message.debt_auction_threshold))
                        return "debt_auction_threshold: string expected";
                if (message.debt_auction_lot != null && message.hasOwnProperty("debt_auction_lot"))
                    if (!$util.isString(message.debt_auction_lot))
                        return "debt_auction_lot: string expected";
                if (message.circuit_breaker != null && message.hasOwnProperty("circuit_breaker"))
                    if (typeof message.circuit_breaker !== "boolean")
                        return "circuit_breaker: boolean expected";
                return null;
            };

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.Params
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.Params} Params
             */
            Params.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.Params)
                    return object;
                let message = new $root.ununifi.cdp.Params();
                if (object.collateral_params) {
                    if (!Array.isArray(object.collateral_params))
                        throw TypeError(".ununifi.cdp.Params.collateral_params: array expected");
                    message.collateral_params = [];
                    for (let i = 0; i < object.collateral_params.length; ++i) {
                        if (typeof object.collateral_params[i] !== "object")
                            throw TypeError(".ununifi.cdp.Params.collateral_params: object expected");
                        message.collateral_params[i] = $root.ununifi.cdp.CollateralParam.fromObject(object.collateral_params[i]);
                    }
                }
                if (object.debt_param != null) {
                    if (typeof object.debt_param !== "object")
                        throw TypeError(".ununifi.cdp.Params.debt_param: object expected");
                    message.debt_param = $root.ununifi.cdp.DebtParam.fromObject(object.debt_param);
                }
                if (object.global_debt_limit != null) {
                    if (typeof object.global_debt_limit !== "object")
                        throw TypeError(".ununifi.cdp.Params.global_debt_limit: object expected");
                    message.global_debt_limit = $root.cosmos.base.v1beta1.Coin.fromObject(object.global_debt_limit);
                }
                if (object.surplus_auction_threshold != null)
                    message.surplus_auction_threshold = String(object.surplus_auction_threshold);
                if (object.surplus_auction_lot != null)
                    message.surplus_auction_lot = String(object.surplus_auction_lot);
                if (object.debt_auction_threshold != null)
                    message.debt_auction_threshold = String(object.debt_auction_threshold);
                if (object.debt_auction_lot != null)
                    message.debt_auction_lot = String(object.debt_auction_lot);
                if (object.circuit_breaker != null)
                    message.circuit_breaker = Boolean(object.circuit_breaker);
                return message;
            };

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.Params
             * @static
             * @param {ununifi.cdp.Params} message Params
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Params.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.collateral_params = [];
                if (options.defaults) {
                    object.debt_param = null;
                    object.global_debt_limit = null;
                    object.surplus_auction_threshold = "";
                    object.surplus_auction_lot = "";
                    object.debt_auction_threshold = "";
                    object.debt_auction_lot = "";
                    object.circuit_breaker = false;
                }
                if (message.collateral_params && message.collateral_params.length) {
                    object.collateral_params = [];
                    for (let j = 0; j < message.collateral_params.length; ++j)
                        object.collateral_params[j] = $root.ununifi.cdp.CollateralParam.toObject(message.collateral_params[j], options);
                }
                if (message.debt_param != null && message.hasOwnProperty("debt_param"))
                    object.debt_param = $root.ununifi.cdp.DebtParam.toObject(message.debt_param, options);
                if (message.global_debt_limit != null && message.hasOwnProperty("global_debt_limit"))
                    object.global_debt_limit = $root.cosmos.base.v1beta1.Coin.toObject(message.global_debt_limit, options);
                if (message.surplus_auction_threshold != null && message.hasOwnProperty("surplus_auction_threshold"))
                    object.surplus_auction_threshold = message.surplus_auction_threshold;
                if (message.surplus_auction_lot != null && message.hasOwnProperty("surplus_auction_lot"))
                    object.surplus_auction_lot = message.surplus_auction_lot;
                if (message.debt_auction_threshold != null && message.hasOwnProperty("debt_auction_threshold"))
                    object.debt_auction_threshold = message.debt_auction_threshold;
                if (message.debt_auction_lot != null && message.hasOwnProperty("debt_auction_lot"))
                    object.debt_auction_lot = message.debt_auction_lot;
                if (message.circuit_breaker != null && message.hasOwnProperty("circuit_breaker"))
                    object.circuit_breaker = message.circuit_breaker;
                return object;
            };

            /**
             * Converts this Params to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.Params
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Params.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Params;
        })();

        cdp.CollateralParam = (function() {

            /**
             * Properties of a CollateralParam.
             * @memberof ununifi.cdp
             * @interface ICollateralParam
             * @property {string|null} [denom] CollateralParam denom
             * @property {string|null} [type] CollateralParam type
             * @property {string|null} [liquidation_ratio] CollateralParam liquidation_ratio
             * @property {cosmos.base.v1beta1.ICoin|null} [debt_limit] CollateralParam debt_limit
             * @property {string|null} [stability_fee] CollateralParam stability_fee
             * @property {string|null} [auction_size] CollateralParam auction_size
             * @property {string|null} [liquidation_penalty] CollateralParam liquidation_penalty
             * @property {number|null} [prefix] CollateralParam prefix
             * @property {string|null} [spot_market_id] CollateralParam spot_market_id
             * @property {string|null} [liquidation_market_id] CollateralParam liquidation_market_id
             * @property {string|null} [keeper_reward_percentage] CollateralParam keeper_reward_percentage
             * @property {string|null} [check_collateralization_index_count] CollateralParam check_collateralization_index_count
             * @property {string|null} [conversion_factor] CollateralParam conversion_factor
             */

            /**
             * Constructs a new CollateralParam.
             * @memberof ununifi.cdp
             * @classdesc Represents a CollateralParam.
             * @implements ICollateralParam
             * @constructor
             * @param {ununifi.cdp.ICollateralParam=} [properties] Properties to set
             */
            function CollateralParam(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CollateralParam denom.
             * @member {string} denom
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.denom = "";

            /**
             * CollateralParam type.
             * @member {string} type
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.type = "";

            /**
             * CollateralParam liquidation_ratio.
             * @member {string} liquidation_ratio
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.liquidation_ratio = "";

            /**
             * CollateralParam debt_limit.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} debt_limit
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.debt_limit = null;

            /**
             * CollateralParam stability_fee.
             * @member {string} stability_fee
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.stability_fee = "";

            /**
             * CollateralParam auction_size.
             * @member {string} auction_size
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.auction_size = "";

            /**
             * CollateralParam liquidation_penalty.
             * @member {string} liquidation_penalty
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.liquidation_penalty = "";

            /**
             * CollateralParam prefix.
             * @member {number} prefix
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.prefix = 0;

            /**
             * CollateralParam spot_market_id.
             * @member {string} spot_market_id
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.spot_market_id = "";

            /**
             * CollateralParam liquidation_market_id.
             * @member {string} liquidation_market_id
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.liquidation_market_id = "";

            /**
             * CollateralParam keeper_reward_percentage.
             * @member {string} keeper_reward_percentage
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.keeper_reward_percentage = "";

            /**
             * CollateralParam check_collateralization_index_count.
             * @member {string} check_collateralization_index_count
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.check_collateralization_index_count = "";

            /**
             * CollateralParam conversion_factor.
             * @member {string} conversion_factor
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             */
            CollateralParam.prototype.conversion_factor = "";

            /**
             * Encodes the specified CollateralParam message. Does not implicitly {@link ununifi.cdp.CollateralParam.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {ununifi.cdp.ICollateralParam} message CollateralParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CollateralParam.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.denom != null && Object.hasOwnProperty.call(message, "denom"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.denom);
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                if (message.liquidation_ratio != null && Object.hasOwnProperty.call(message, "liquidation_ratio"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.liquidation_ratio);
                if (message.debt_limit != null && Object.hasOwnProperty.call(message, "debt_limit"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.debt_limit, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.stability_fee != null && Object.hasOwnProperty.call(message, "stability_fee"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.stability_fee);
                if (message.auction_size != null && Object.hasOwnProperty.call(message, "auction_size"))
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.auction_size);
                if (message.liquidation_penalty != null && Object.hasOwnProperty.call(message, "liquidation_penalty"))
                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.liquidation_penalty);
                if (message.prefix != null && Object.hasOwnProperty.call(message, "prefix"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.prefix);
                if (message.spot_market_id != null && Object.hasOwnProperty.call(message, "spot_market_id"))
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.spot_market_id);
                if (message.liquidation_market_id != null && Object.hasOwnProperty.call(message, "liquidation_market_id"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.liquidation_market_id);
                if (message.keeper_reward_percentage != null && Object.hasOwnProperty.call(message, "keeper_reward_percentage"))
                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.keeper_reward_percentage);
                if (message.check_collateralization_index_count != null && Object.hasOwnProperty.call(message, "check_collateralization_index_count"))
                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.check_collateralization_index_count);
                if (message.conversion_factor != null && Object.hasOwnProperty.call(message, "conversion_factor"))
                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.conversion_factor);
                return writer;
            };

            /**
             * Encodes the specified CollateralParam message, length delimited. Does not implicitly {@link ununifi.cdp.CollateralParam.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {ununifi.cdp.ICollateralParam} message CollateralParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CollateralParam.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CollateralParam message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.CollateralParam} CollateralParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CollateralParam.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.CollateralParam();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.denom = reader.string();
                        break;
                    case 2:
                        message.type = reader.string();
                        break;
                    case 3:
                        message.liquidation_ratio = reader.string();
                        break;
                    case 4:
                        message.debt_limit = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 5:
                        message.stability_fee = reader.string();
                        break;
                    case 6:
                        message.auction_size = reader.string();
                        break;
                    case 7:
                        message.liquidation_penalty = reader.string();
                        break;
                    case 8:
                        message.prefix = reader.uint32();
                        break;
                    case 9:
                        message.spot_market_id = reader.string();
                        break;
                    case 10:
                        message.liquidation_market_id = reader.string();
                        break;
                    case 11:
                        message.keeper_reward_percentage = reader.string();
                        break;
                    case 12:
                        message.check_collateralization_index_count = reader.string();
                        break;
                    case 13:
                        message.conversion_factor = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a CollateralParam message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.CollateralParam} CollateralParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CollateralParam.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CollateralParam message.
             * @function verify
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CollateralParam.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.denom != null && message.hasOwnProperty("denom"))
                    if (!$util.isString(message.denom))
                        return "denom: string expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    if (!$util.isString(message.type))
                        return "type: string expected";
                if (message.liquidation_ratio != null && message.hasOwnProperty("liquidation_ratio"))
                    if (!$util.isString(message.liquidation_ratio))
                        return "liquidation_ratio: string expected";
                if (message.debt_limit != null && message.hasOwnProperty("debt_limit")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.debt_limit);
                    if (error)
                        return "debt_limit." + error;
                }
                if (message.stability_fee != null && message.hasOwnProperty("stability_fee"))
                    if (!$util.isString(message.stability_fee))
                        return "stability_fee: string expected";
                if (message.auction_size != null && message.hasOwnProperty("auction_size"))
                    if (!$util.isString(message.auction_size))
                        return "auction_size: string expected";
                if (message.liquidation_penalty != null && message.hasOwnProperty("liquidation_penalty"))
                    if (!$util.isString(message.liquidation_penalty))
                        return "liquidation_penalty: string expected";
                if (message.prefix != null && message.hasOwnProperty("prefix"))
                    if (!$util.isInteger(message.prefix))
                        return "prefix: integer expected";
                if (message.spot_market_id != null && message.hasOwnProperty("spot_market_id"))
                    if (!$util.isString(message.spot_market_id))
                        return "spot_market_id: string expected";
                if (message.liquidation_market_id != null && message.hasOwnProperty("liquidation_market_id"))
                    if (!$util.isString(message.liquidation_market_id))
                        return "liquidation_market_id: string expected";
                if (message.keeper_reward_percentage != null && message.hasOwnProperty("keeper_reward_percentage"))
                    if (!$util.isString(message.keeper_reward_percentage))
                        return "keeper_reward_percentage: string expected";
                if (message.check_collateralization_index_count != null && message.hasOwnProperty("check_collateralization_index_count"))
                    if (!$util.isString(message.check_collateralization_index_count))
                        return "check_collateralization_index_count: string expected";
                if (message.conversion_factor != null && message.hasOwnProperty("conversion_factor"))
                    if (!$util.isString(message.conversion_factor))
                        return "conversion_factor: string expected";
                return null;
            };

            /**
             * Creates a CollateralParam message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.CollateralParam} CollateralParam
             */
            CollateralParam.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.CollateralParam)
                    return object;
                let message = new $root.ununifi.cdp.CollateralParam();
                if (object.denom != null)
                    message.denom = String(object.denom);
                if (object.type != null)
                    message.type = String(object.type);
                if (object.liquidation_ratio != null)
                    message.liquidation_ratio = String(object.liquidation_ratio);
                if (object.debt_limit != null) {
                    if (typeof object.debt_limit !== "object")
                        throw TypeError(".ununifi.cdp.CollateralParam.debt_limit: object expected");
                    message.debt_limit = $root.cosmos.base.v1beta1.Coin.fromObject(object.debt_limit);
                }
                if (object.stability_fee != null)
                    message.stability_fee = String(object.stability_fee);
                if (object.auction_size != null)
                    message.auction_size = String(object.auction_size);
                if (object.liquidation_penalty != null)
                    message.liquidation_penalty = String(object.liquidation_penalty);
                if (object.prefix != null)
                    message.prefix = object.prefix >>> 0;
                if (object.spot_market_id != null)
                    message.spot_market_id = String(object.spot_market_id);
                if (object.liquidation_market_id != null)
                    message.liquidation_market_id = String(object.liquidation_market_id);
                if (object.keeper_reward_percentage != null)
                    message.keeper_reward_percentage = String(object.keeper_reward_percentage);
                if (object.check_collateralization_index_count != null)
                    message.check_collateralization_index_count = String(object.check_collateralization_index_count);
                if (object.conversion_factor != null)
                    message.conversion_factor = String(object.conversion_factor);
                return message;
            };

            /**
             * Creates a plain object from a CollateralParam message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.CollateralParam
             * @static
             * @param {ununifi.cdp.CollateralParam} message CollateralParam
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CollateralParam.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.denom = "";
                    object.type = "";
                    object.liquidation_ratio = "";
                    object.debt_limit = null;
                    object.stability_fee = "";
                    object.auction_size = "";
                    object.liquidation_penalty = "";
                    object.prefix = 0;
                    object.spot_market_id = "";
                    object.liquidation_market_id = "";
                    object.keeper_reward_percentage = "";
                    object.check_collateralization_index_count = "";
                    object.conversion_factor = "";
                }
                if (message.denom != null && message.hasOwnProperty("denom"))
                    object.denom = message.denom;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = message.type;
                if (message.liquidation_ratio != null && message.hasOwnProperty("liquidation_ratio"))
                    object.liquidation_ratio = message.liquidation_ratio;
                if (message.debt_limit != null && message.hasOwnProperty("debt_limit"))
                    object.debt_limit = $root.cosmos.base.v1beta1.Coin.toObject(message.debt_limit, options);
                if (message.stability_fee != null && message.hasOwnProperty("stability_fee"))
                    object.stability_fee = message.stability_fee;
                if (message.auction_size != null && message.hasOwnProperty("auction_size"))
                    object.auction_size = message.auction_size;
                if (message.liquidation_penalty != null && message.hasOwnProperty("liquidation_penalty"))
                    object.liquidation_penalty = message.liquidation_penalty;
                if (message.prefix != null && message.hasOwnProperty("prefix"))
                    object.prefix = message.prefix;
                if (message.spot_market_id != null && message.hasOwnProperty("spot_market_id"))
                    object.spot_market_id = message.spot_market_id;
                if (message.liquidation_market_id != null && message.hasOwnProperty("liquidation_market_id"))
                    object.liquidation_market_id = message.liquidation_market_id;
                if (message.keeper_reward_percentage != null && message.hasOwnProperty("keeper_reward_percentage"))
                    object.keeper_reward_percentage = message.keeper_reward_percentage;
                if (message.check_collateralization_index_count != null && message.hasOwnProperty("check_collateralization_index_count"))
                    object.check_collateralization_index_count = message.check_collateralization_index_count;
                if (message.conversion_factor != null && message.hasOwnProperty("conversion_factor"))
                    object.conversion_factor = message.conversion_factor;
                return object;
            };

            /**
             * Converts this CollateralParam to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.CollateralParam
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CollateralParam.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return CollateralParam;
        })();

        cdp.DebtParam = (function() {

            /**
             * Properties of a DebtParam.
             * @memberof ununifi.cdp
             * @interface IDebtParam
             * @property {string|null} [denom] DebtParam denom
             * @property {string|null} [reference_asset] DebtParam reference_asset
             * @property {string|null} [conversion_factor] DebtParam conversion_factor
             * @property {string|null} [debt_floor] DebtParam debt_floor
             */

            /**
             * Constructs a new DebtParam.
             * @memberof ununifi.cdp
             * @classdesc Represents a DebtParam.
             * @implements IDebtParam
             * @constructor
             * @param {ununifi.cdp.IDebtParam=} [properties] Properties to set
             */
            function DebtParam(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DebtParam denom.
             * @member {string} denom
             * @memberof ununifi.cdp.DebtParam
             * @instance
             */
            DebtParam.prototype.denom = "";

            /**
             * DebtParam reference_asset.
             * @member {string} reference_asset
             * @memberof ununifi.cdp.DebtParam
             * @instance
             */
            DebtParam.prototype.reference_asset = "";

            /**
             * DebtParam conversion_factor.
             * @member {string} conversion_factor
             * @memberof ununifi.cdp.DebtParam
             * @instance
             */
            DebtParam.prototype.conversion_factor = "";

            /**
             * DebtParam debt_floor.
             * @member {string} debt_floor
             * @memberof ununifi.cdp.DebtParam
             * @instance
             */
            DebtParam.prototype.debt_floor = "";

            /**
             * Encodes the specified DebtParam message. Does not implicitly {@link ununifi.cdp.DebtParam.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {ununifi.cdp.IDebtParam} message DebtParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DebtParam.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.denom != null && Object.hasOwnProperty.call(message, "denom"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.denom);
                if (message.reference_asset != null && Object.hasOwnProperty.call(message, "reference_asset"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.reference_asset);
                if (message.conversion_factor != null && Object.hasOwnProperty.call(message, "conversion_factor"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.conversion_factor);
                if (message.debt_floor != null && Object.hasOwnProperty.call(message, "debt_floor"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.debt_floor);
                return writer;
            };

            /**
             * Encodes the specified DebtParam message, length delimited. Does not implicitly {@link ununifi.cdp.DebtParam.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {ununifi.cdp.IDebtParam} message DebtParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DebtParam.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DebtParam message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.DebtParam} DebtParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DebtParam.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.DebtParam();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.denom = reader.string();
                        break;
                    case 2:
                        message.reference_asset = reader.string();
                        break;
                    case 3:
                        message.conversion_factor = reader.string();
                        break;
                    case 4:
                        message.debt_floor = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DebtParam message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.DebtParam} DebtParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DebtParam.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DebtParam message.
             * @function verify
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DebtParam.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.denom != null && message.hasOwnProperty("denom"))
                    if (!$util.isString(message.denom))
                        return "denom: string expected";
                if (message.reference_asset != null && message.hasOwnProperty("reference_asset"))
                    if (!$util.isString(message.reference_asset))
                        return "reference_asset: string expected";
                if (message.conversion_factor != null && message.hasOwnProperty("conversion_factor"))
                    if (!$util.isString(message.conversion_factor))
                        return "conversion_factor: string expected";
                if (message.debt_floor != null && message.hasOwnProperty("debt_floor"))
                    if (!$util.isString(message.debt_floor))
                        return "debt_floor: string expected";
                return null;
            };

            /**
             * Creates a DebtParam message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.DebtParam} DebtParam
             */
            DebtParam.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.DebtParam)
                    return object;
                let message = new $root.ununifi.cdp.DebtParam();
                if (object.denom != null)
                    message.denom = String(object.denom);
                if (object.reference_asset != null)
                    message.reference_asset = String(object.reference_asset);
                if (object.conversion_factor != null)
                    message.conversion_factor = String(object.conversion_factor);
                if (object.debt_floor != null)
                    message.debt_floor = String(object.debt_floor);
                return message;
            };

            /**
             * Creates a plain object from a DebtParam message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.DebtParam
             * @static
             * @param {ununifi.cdp.DebtParam} message DebtParam
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DebtParam.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.denom = "";
                    object.reference_asset = "";
                    object.conversion_factor = "";
                    object.debt_floor = "";
                }
                if (message.denom != null && message.hasOwnProperty("denom"))
                    object.denom = message.denom;
                if (message.reference_asset != null && message.hasOwnProperty("reference_asset"))
                    object.reference_asset = message.reference_asset;
                if (message.conversion_factor != null && message.hasOwnProperty("conversion_factor"))
                    object.conversion_factor = message.conversion_factor;
                if (message.debt_floor != null && message.hasOwnProperty("debt_floor"))
                    object.debt_floor = message.debt_floor;
                return object;
            };

            /**
             * Converts this DebtParam to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.DebtParam
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DebtParam.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return DebtParam;
        })();

        cdp.Msg = (function() {

            /**
             * Constructs a new Msg service.
             * @memberof ununifi.cdp
             * @classdesc Represents a Msg
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Msg(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Msg.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Msg;

            /**
             * Callback as used by {@link ununifi.cdp.Msg#createCdp}.
             * @memberof ununifi.cdp.Msg
             * @typedef CreateCdpCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.MsgCreateCdpResponse} [response] MsgCreateCdpResponse
             */

            /**
             * Calls CreateCdp.
             * @function createCdp
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgCreateCdp} request MsgCreateCdp message or plain object
             * @param {ununifi.cdp.Msg.CreateCdpCallback} callback Node-style callback called with the error, if any, and MsgCreateCdpResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.createCdp = function createCdp(request, callback) {
                return this.rpcCall(createCdp, $root.ununifi.cdp.MsgCreateCdp, $root.ununifi.cdp.MsgCreateCdpResponse, request, callback);
            }, "name", { value: "CreateCdp" });

            /**
             * Calls CreateCdp.
             * @function createCdp
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgCreateCdp} request MsgCreateCdp message or plain object
             * @returns {Promise<ununifi.cdp.MsgCreateCdpResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Msg#deposit}.
             * @memberof ununifi.cdp.Msg
             * @typedef DepositCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.MsgDepositResponse} [response] MsgDepositResponse
             */

            /**
             * Calls Deposit.
             * @function deposit
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgDeposit} request MsgDeposit message or plain object
             * @param {ununifi.cdp.Msg.DepositCallback} callback Node-style callback called with the error, if any, and MsgDepositResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.deposit = function deposit(request, callback) {
                return this.rpcCall(deposit, $root.ununifi.cdp.MsgDeposit, $root.ununifi.cdp.MsgDepositResponse, request, callback);
            }, "name", { value: "Deposit" });

            /**
             * Calls Deposit.
             * @function deposit
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgDeposit} request MsgDeposit message or plain object
             * @returns {Promise<ununifi.cdp.MsgDepositResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Msg#withdraw}.
             * @memberof ununifi.cdp.Msg
             * @typedef WithdrawCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.MsgWithdrawResponse} [response] MsgWithdrawResponse
             */

            /**
             * Calls Withdraw.
             * @function withdraw
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgWithdraw} request MsgWithdraw message or plain object
             * @param {ununifi.cdp.Msg.WithdrawCallback} callback Node-style callback called with the error, if any, and MsgWithdrawResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.withdraw = function withdraw(request, callback) {
                return this.rpcCall(withdraw, $root.ununifi.cdp.MsgWithdraw, $root.ununifi.cdp.MsgWithdrawResponse, request, callback);
            }, "name", { value: "Withdraw" });

            /**
             * Calls Withdraw.
             * @function withdraw
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgWithdraw} request MsgWithdraw message or plain object
             * @returns {Promise<ununifi.cdp.MsgWithdrawResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Msg#drawDebt}.
             * @memberof ununifi.cdp.Msg
             * @typedef DrawDebtCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.MsgDrawDebtResponse} [response] MsgDrawDebtResponse
             */

            /**
             * Calls DrawDebt.
             * @function drawDebt
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgDrawDebt} request MsgDrawDebt message or plain object
             * @param {ununifi.cdp.Msg.DrawDebtCallback} callback Node-style callback called with the error, if any, and MsgDrawDebtResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.drawDebt = function drawDebt(request, callback) {
                return this.rpcCall(drawDebt, $root.ununifi.cdp.MsgDrawDebt, $root.ununifi.cdp.MsgDrawDebtResponse, request, callback);
            }, "name", { value: "DrawDebt" });

            /**
             * Calls DrawDebt.
             * @function drawDebt
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgDrawDebt} request MsgDrawDebt message or plain object
             * @returns {Promise<ununifi.cdp.MsgDrawDebtResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Msg#repayDebt}.
             * @memberof ununifi.cdp.Msg
             * @typedef RepayDebtCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.MsgRepayDebtResponse} [response] MsgRepayDebtResponse
             */

            /**
             * Calls RepayDebt.
             * @function repayDebt
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgRepayDebt} request MsgRepayDebt message or plain object
             * @param {ununifi.cdp.Msg.RepayDebtCallback} callback Node-style callback called with the error, if any, and MsgRepayDebtResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.repayDebt = function repayDebt(request, callback) {
                return this.rpcCall(repayDebt, $root.ununifi.cdp.MsgRepayDebt, $root.ununifi.cdp.MsgRepayDebtResponse, request, callback);
            }, "name", { value: "RepayDebt" });

            /**
             * Calls RepayDebt.
             * @function repayDebt
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgRepayDebt} request MsgRepayDebt message or plain object
             * @returns {Promise<ununifi.cdp.MsgRepayDebtResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.cdp.Msg#liquidate}.
             * @memberof ununifi.cdp.Msg
             * @typedef LiquidateCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.cdp.MsgLiquidateResponse} [response] MsgLiquidateResponse
             */

            /**
             * Calls Liquidate.
             * @function liquidate
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgLiquidate} request MsgLiquidate message or plain object
             * @param {ununifi.cdp.Msg.LiquidateCallback} callback Node-style callback called with the error, if any, and MsgLiquidateResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.liquidate = function liquidate(request, callback) {
                return this.rpcCall(liquidate, $root.ununifi.cdp.MsgLiquidate, $root.ununifi.cdp.MsgLiquidateResponse, request, callback);
            }, "name", { value: "Liquidate" });

            /**
             * Calls Liquidate.
             * @function liquidate
             * @memberof ununifi.cdp.Msg
             * @instance
             * @param {ununifi.cdp.IMsgLiquidate} request MsgLiquidate message or plain object
             * @returns {Promise<ununifi.cdp.MsgLiquidateResponse>} Promise
             * @variation 2
             */

            return Msg;
        })();

        cdp.MsgCreateCdp = (function() {

            /**
             * Properties of a MsgCreateCdp.
             * @memberof ununifi.cdp
             * @interface IMsgCreateCdp
             * @property {string|null} [sender] MsgCreateCdp sender
             * @property {cosmos.base.v1beta1.ICoin|null} [collateral] MsgCreateCdp collateral
             * @property {cosmos.base.v1beta1.ICoin|null} [principal] MsgCreateCdp principal
             * @property {string|null} [collateral_type] MsgCreateCdp collateral_type
             */

            /**
             * Constructs a new MsgCreateCdp.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgCreateCdp.
             * @implements IMsgCreateCdp
             * @constructor
             * @param {ununifi.cdp.IMsgCreateCdp=} [properties] Properties to set
             */
            function MsgCreateCdp(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgCreateCdp sender.
             * @member {string} sender
             * @memberof ununifi.cdp.MsgCreateCdp
             * @instance
             */
            MsgCreateCdp.prototype.sender = "";

            /**
             * MsgCreateCdp collateral.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} collateral
             * @memberof ununifi.cdp.MsgCreateCdp
             * @instance
             */
            MsgCreateCdp.prototype.collateral = null;

            /**
             * MsgCreateCdp principal.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} principal
             * @memberof ununifi.cdp.MsgCreateCdp
             * @instance
             */
            MsgCreateCdp.prototype.principal = null;

            /**
             * MsgCreateCdp collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.MsgCreateCdp
             * @instance
             */
            MsgCreateCdp.prototype.collateral_type = "";

            /**
             * Encodes the specified MsgCreateCdp message. Does not implicitly {@link ununifi.cdp.MsgCreateCdp.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {ununifi.cdp.IMsgCreateCdp} message MsgCreateCdp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgCreateCdp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                if (message.collateral != null && Object.hasOwnProperty.call(message, "collateral"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.collateral, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.principal != null && Object.hasOwnProperty.call(message, "principal"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.principal, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.collateral_type);
                return writer;
            };

            /**
             * Encodes the specified MsgCreateCdp message, length delimited. Does not implicitly {@link ununifi.cdp.MsgCreateCdp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {ununifi.cdp.IMsgCreateCdp} message MsgCreateCdp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgCreateCdp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgCreateCdp message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgCreateCdp} MsgCreateCdp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgCreateCdp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgCreateCdp();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.sender = reader.string();
                        break;
                    case 2:
                        message.collateral = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.principal = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.collateral_type = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgCreateCdp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgCreateCdp} MsgCreateCdp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgCreateCdp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgCreateCdp message.
             * @function verify
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgCreateCdp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.sender != null && message.hasOwnProperty("sender"))
                    if (!$util.isString(message.sender))
                        return "sender: string expected";
                if (message.collateral != null && message.hasOwnProperty("collateral")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.collateral);
                    if (error)
                        return "collateral." + error;
                }
                if (message.principal != null && message.hasOwnProperty("principal")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.principal);
                    if (error)
                        return "principal." + error;
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                return null;
            };

            /**
             * Creates a MsgCreateCdp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgCreateCdp} MsgCreateCdp
             */
            MsgCreateCdp.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgCreateCdp)
                    return object;
                let message = new $root.ununifi.cdp.MsgCreateCdp();
                if (object.sender != null)
                    message.sender = String(object.sender);
                if (object.collateral != null) {
                    if (typeof object.collateral !== "object")
                        throw TypeError(".ununifi.cdp.MsgCreateCdp.collateral: object expected");
                    message.collateral = $root.cosmos.base.v1beta1.Coin.fromObject(object.collateral);
                }
                if (object.principal != null) {
                    if (typeof object.principal !== "object")
                        throw TypeError(".ununifi.cdp.MsgCreateCdp.principal: object expected");
                    message.principal = $root.cosmos.base.v1beta1.Coin.fromObject(object.principal);
                }
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                return message;
            };

            /**
             * Creates a plain object from a MsgCreateCdp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgCreateCdp
             * @static
             * @param {ununifi.cdp.MsgCreateCdp} message MsgCreateCdp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgCreateCdp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.sender = "";
                    object.collateral = null;
                    object.principal = null;
                    object.collateral_type = "";
                }
                if (message.sender != null && message.hasOwnProperty("sender"))
                    object.sender = message.sender;
                if (message.collateral != null && message.hasOwnProperty("collateral"))
                    object.collateral = $root.cosmos.base.v1beta1.Coin.toObject(message.collateral, options);
                if (message.principal != null && message.hasOwnProperty("principal"))
                    object.principal = $root.cosmos.base.v1beta1.Coin.toObject(message.principal, options);
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                return object;
            };

            /**
             * Converts this MsgCreateCdp to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgCreateCdp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgCreateCdp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgCreateCdp;
        })();

        cdp.MsgCreateCdpResponse = (function() {

            /**
             * Properties of a MsgCreateCdpResponse.
             * @memberof ununifi.cdp
             * @interface IMsgCreateCdpResponse
             */

            /**
             * Constructs a new MsgCreateCdpResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgCreateCdpResponse.
             * @implements IMsgCreateCdpResponse
             * @constructor
             * @param {ununifi.cdp.IMsgCreateCdpResponse=} [properties] Properties to set
             */
            function MsgCreateCdpResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgCreateCdpResponse message. Does not implicitly {@link ununifi.cdp.MsgCreateCdpResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {ununifi.cdp.IMsgCreateCdpResponse} message MsgCreateCdpResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgCreateCdpResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgCreateCdpResponse message, length delimited. Does not implicitly {@link ununifi.cdp.MsgCreateCdpResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {ununifi.cdp.IMsgCreateCdpResponse} message MsgCreateCdpResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgCreateCdpResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgCreateCdpResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgCreateCdpResponse} MsgCreateCdpResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgCreateCdpResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgCreateCdpResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgCreateCdpResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgCreateCdpResponse} MsgCreateCdpResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgCreateCdpResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgCreateCdpResponse message.
             * @function verify
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgCreateCdpResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgCreateCdpResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgCreateCdpResponse} MsgCreateCdpResponse
             */
            MsgCreateCdpResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgCreateCdpResponse)
                    return object;
                return new $root.ununifi.cdp.MsgCreateCdpResponse();
            };

            /**
             * Creates a plain object from a MsgCreateCdpResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @static
             * @param {ununifi.cdp.MsgCreateCdpResponse} message MsgCreateCdpResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgCreateCdpResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgCreateCdpResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgCreateCdpResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgCreateCdpResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgCreateCdpResponse;
        })();

        cdp.MsgDeposit = (function() {

            /**
             * Properties of a MsgDeposit.
             * @memberof ununifi.cdp
             * @interface IMsgDeposit
             * @property {string|null} [depositor] MsgDeposit depositor
             * @property {string|null} [owner] MsgDeposit owner
             * @property {cosmos.base.v1beta1.ICoin|null} [collateral] MsgDeposit collateral
             * @property {string|null} [collateral_type] MsgDeposit collateral_type
             */

            /**
             * Constructs a new MsgDeposit.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgDeposit.
             * @implements IMsgDeposit
             * @constructor
             * @param {ununifi.cdp.IMsgDeposit=} [properties] Properties to set
             */
            function MsgDeposit(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgDeposit depositor.
             * @member {string} depositor
             * @memberof ununifi.cdp.MsgDeposit
             * @instance
             */
            MsgDeposit.prototype.depositor = "";

            /**
             * MsgDeposit owner.
             * @member {string} owner
             * @memberof ununifi.cdp.MsgDeposit
             * @instance
             */
            MsgDeposit.prototype.owner = "";

            /**
             * MsgDeposit collateral.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} collateral
             * @memberof ununifi.cdp.MsgDeposit
             * @instance
             */
            MsgDeposit.prototype.collateral = null;

            /**
             * MsgDeposit collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.MsgDeposit
             * @instance
             */
            MsgDeposit.prototype.collateral_type = "";

            /**
             * Encodes the specified MsgDeposit message. Does not implicitly {@link ununifi.cdp.MsgDeposit.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {ununifi.cdp.IMsgDeposit} message MsgDeposit message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDeposit.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.depositor != null && Object.hasOwnProperty.call(message, "depositor"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.depositor);
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.owner);
                if (message.collateral != null && Object.hasOwnProperty.call(message, "collateral"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.collateral, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.collateral_type);
                return writer;
            };

            /**
             * Encodes the specified MsgDeposit message, length delimited. Does not implicitly {@link ununifi.cdp.MsgDeposit.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {ununifi.cdp.IMsgDeposit} message MsgDeposit message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDeposit.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgDeposit message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgDeposit} MsgDeposit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDeposit.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgDeposit();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.depositor = reader.string();
                        break;
                    case 2:
                        message.owner = reader.string();
                        break;
                    case 3:
                        message.collateral = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.collateral_type = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgDeposit message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgDeposit} MsgDeposit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDeposit.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgDeposit message.
             * @function verify
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgDeposit.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.depositor != null && message.hasOwnProperty("depositor"))
                    if (!$util.isString(message.depositor))
                        return "depositor: string expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.collateral != null && message.hasOwnProperty("collateral")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.collateral);
                    if (error)
                        return "collateral." + error;
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                return null;
            };

            /**
             * Creates a MsgDeposit message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgDeposit} MsgDeposit
             */
            MsgDeposit.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgDeposit)
                    return object;
                let message = new $root.ununifi.cdp.MsgDeposit();
                if (object.depositor != null)
                    message.depositor = String(object.depositor);
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.collateral != null) {
                    if (typeof object.collateral !== "object")
                        throw TypeError(".ununifi.cdp.MsgDeposit.collateral: object expected");
                    message.collateral = $root.cosmos.base.v1beta1.Coin.fromObject(object.collateral);
                }
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                return message;
            };

            /**
             * Creates a plain object from a MsgDeposit message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgDeposit
             * @static
             * @param {ununifi.cdp.MsgDeposit} message MsgDeposit
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgDeposit.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.depositor = "";
                    object.owner = "";
                    object.collateral = null;
                    object.collateral_type = "";
                }
                if (message.depositor != null && message.hasOwnProperty("depositor"))
                    object.depositor = message.depositor;
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.collateral != null && message.hasOwnProperty("collateral"))
                    object.collateral = $root.cosmos.base.v1beta1.Coin.toObject(message.collateral, options);
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                return object;
            };

            /**
             * Converts this MsgDeposit to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgDeposit
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgDeposit.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgDeposit;
        })();

        cdp.MsgDepositResponse = (function() {

            /**
             * Properties of a MsgDepositResponse.
             * @memberof ununifi.cdp
             * @interface IMsgDepositResponse
             */

            /**
             * Constructs a new MsgDepositResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgDepositResponse.
             * @implements IMsgDepositResponse
             * @constructor
             * @param {ununifi.cdp.IMsgDepositResponse=} [properties] Properties to set
             */
            function MsgDepositResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgDepositResponse message. Does not implicitly {@link ununifi.cdp.MsgDepositResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {ununifi.cdp.IMsgDepositResponse} message MsgDepositResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDepositResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgDepositResponse message, length delimited. Does not implicitly {@link ununifi.cdp.MsgDepositResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {ununifi.cdp.IMsgDepositResponse} message MsgDepositResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDepositResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgDepositResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgDepositResponse} MsgDepositResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDepositResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgDepositResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgDepositResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgDepositResponse} MsgDepositResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDepositResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgDepositResponse message.
             * @function verify
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgDepositResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgDepositResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgDepositResponse} MsgDepositResponse
             */
            MsgDepositResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgDepositResponse)
                    return object;
                return new $root.ununifi.cdp.MsgDepositResponse();
            };

            /**
             * Creates a plain object from a MsgDepositResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgDepositResponse
             * @static
             * @param {ununifi.cdp.MsgDepositResponse} message MsgDepositResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgDepositResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgDepositResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgDepositResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgDepositResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgDepositResponse;
        })();

        cdp.MsgWithdraw = (function() {

            /**
             * Properties of a MsgWithdraw.
             * @memberof ununifi.cdp
             * @interface IMsgWithdraw
             * @property {string|null} [depositor] MsgWithdraw depositor
             * @property {string|null} [owner] MsgWithdraw owner
             * @property {cosmos.base.v1beta1.ICoin|null} [collateral] MsgWithdraw collateral
             * @property {string|null} [collateral_type] MsgWithdraw collateral_type
             */

            /**
             * Constructs a new MsgWithdraw.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgWithdraw.
             * @implements IMsgWithdraw
             * @constructor
             * @param {ununifi.cdp.IMsgWithdraw=} [properties] Properties to set
             */
            function MsgWithdraw(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgWithdraw depositor.
             * @member {string} depositor
             * @memberof ununifi.cdp.MsgWithdraw
             * @instance
             */
            MsgWithdraw.prototype.depositor = "";

            /**
             * MsgWithdraw owner.
             * @member {string} owner
             * @memberof ununifi.cdp.MsgWithdraw
             * @instance
             */
            MsgWithdraw.prototype.owner = "";

            /**
             * MsgWithdraw collateral.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} collateral
             * @memberof ununifi.cdp.MsgWithdraw
             * @instance
             */
            MsgWithdraw.prototype.collateral = null;

            /**
             * MsgWithdraw collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.MsgWithdraw
             * @instance
             */
            MsgWithdraw.prototype.collateral_type = "";

            /**
             * Encodes the specified MsgWithdraw message. Does not implicitly {@link ununifi.cdp.MsgWithdraw.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {ununifi.cdp.IMsgWithdraw} message MsgWithdraw message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgWithdraw.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.depositor != null && Object.hasOwnProperty.call(message, "depositor"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.depositor);
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.owner);
                if (message.collateral != null && Object.hasOwnProperty.call(message, "collateral"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.collateral, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.collateral_type);
                return writer;
            };

            /**
             * Encodes the specified MsgWithdraw message, length delimited. Does not implicitly {@link ununifi.cdp.MsgWithdraw.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {ununifi.cdp.IMsgWithdraw} message MsgWithdraw message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgWithdraw.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgWithdraw message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgWithdraw} MsgWithdraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgWithdraw.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgWithdraw();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.depositor = reader.string();
                        break;
                    case 2:
                        message.owner = reader.string();
                        break;
                    case 3:
                        message.collateral = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.collateral_type = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgWithdraw message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgWithdraw} MsgWithdraw
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgWithdraw.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgWithdraw message.
             * @function verify
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgWithdraw.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.depositor != null && message.hasOwnProperty("depositor"))
                    if (!$util.isString(message.depositor))
                        return "depositor: string expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.collateral != null && message.hasOwnProperty("collateral")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.collateral);
                    if (error)
                        return "collateral." + error;
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                return null;
            };

            /**
             * Creates a MsgWithdraw message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgWithdraw} MsgWithdraw
             */
            MsgWithdraw.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgWithdraw)
                    return object;
                let message = new $root.ununifi.cdp.MsgWithdraw();
                if (object.depositor != null)
                    message.depositor = String(object.depositor);
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.collateral != null) {
                    if (typeof object.collateral !== "object")
                        throw TypeError(".ununifi.cdp.MsgWithdraw.collateral: object expected");
                    message.collateral = $root.cosmos.base.v1beta1.Coin.fromObject(object.collateral);
                }
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                return message;
            };

            /**
             * Creates a plain object from a MsgWithdraw message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgWithdraw
             * @static
             * @param {ununifi.cdp.MsgWithdraw} message MsgWithdraw
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgWithdraw.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.depositor = "";
                    object.owner = "";
                    object.collateral = null;
                    object.collateral_type = "";
                }
                if (message.depositor != null && message.hasOwnProperty("depositor"))
                    object.depositor = message.depositor;
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.collateral != null && message.hasOwnProperty("collateral"))
                    object.collateral = $root.cosmos.base.v1beta1.Coin.toObject(message.collateral, options);
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                return object;
            };

            /**
             * Converts this MsgWithdraw to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgWithdraw
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgWithdraw.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgWithdraw;
        })();

        cdp.MsgWithdrawResponse = (function() {

            /**
             * Properties of a MsgWithdrawResponse.
             * @memberof ununifi.cdp
             * @interface IMsgWithdrawResponse
             */

            /**
             * Constructs a new MsgWithdrawResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgWithdrawResponse.
             * @implements IMsgWithdrawResponse
             * @constructor
             * @param {ununifi.cdp.IMsgWithdrawResponse=} [properties] Properties to set
             */
            function MsgWithdrawResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgWithdrawResponse message. Does not implicitly {@link ununifi.cdp.MsgWithdrawResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {ununifi.cdp.IMsgWithdrawResponse} message MsgWithdrawResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgWithdrawResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgWithdrawResponse message, length delimited. Does not implicitly {@link ununifi.cdp.MsgWithdrawResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {ununifi.cdp.IMsgWithdrawResponse} message MsgWithdrawResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgWithdrawResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgWithdrawResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgWithdrawResponse} MsgWithdrawResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgWithdrawResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgWithdrawResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgWithdrawResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgWithdrawResponse} MsgWithdrawResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgWithdrawResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgWithdrawResponse message.
             * @function verify
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgWithdrawResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgWithdrawResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgWithdrawResponse} MsgWithdrawResponse
             */
            MsgWithdrawResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgWithdrawResponse)
                    return object;
                return new $root.ununifi.cdp.MsgWithdrawResponse();
            };

            /**
             * Creates a plain object from a MsgWithdrawResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @static
             * @param {ununifi.cdp.MsgWithdrawResponse} message MsgWithdrawResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgWithdrawResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgWithdrawResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgWithdrawResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgWithdrawResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgWithdrawResponse;
        })();

        cdp.MsgDrawDebt = (function() {

            /**
             * Properties of a MsgDrawDebt.
             * @memberof ununifi.cdp
             * @interface IMsgDrawDebt
             * @property {string|null} [sender] MsgDrawDebt sender
             * @property {string|null} [collateral_type] MsgDrawDebt collateral_type
             * @property {cosmos.base.v1beta1.ICoin|null} [principal] MsgDrawDebt principal
             */

            /**
             * Constructs a new MsgDrawDebt.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgDrawDebt.
             * @implements IMsgDrawDebt
             * @constructor
             * @param {ununifi.cdp.IMsgDrawDebt=} [properties] Properties to set
             */
            function MsgDrawDebt(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgDrawDebt sender.
             * @member {string} sender
             * @memberof ununifi.cdp.MsgDrawDebt
             * @instance
             */
            MsgDrawDebt.prototype.sender = "";

            /**
             * MsgDrawDebt collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.MsgDrawDebt
             * @instance
             */
            MsgDrawDebt.prototype.collateral_type = "";

            /**
             * MsgDrawDebt principal.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} principal
             * @memberof ununifi.cdp.MsgDrawDebt
             * @instance
             */
            MsgDrawDebt.prototype.principal = null;

            /**
             * Encodes the specified MsgDrawDebt message. Does not implicitly {@link ununifi.cdp.MsgDrawDebt.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {ununifi.cdp.IMsgDrawDebt} message MsgDrawDebt message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDrawDebt.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.collateral_type);
                if (message.principal != null && Object.hasOwnProperty.call(message, "principal"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.principal, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified MsgDrawDebt message, length delimited. Does not implicitly {@link ununifi.cdp.MsgDrawDebt.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {ununifi.cdp.IMsgDrawDebt} message MsgDrawDebt message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDrawDebt.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgDrawDebt message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgDrawDebt} MsgDrawDebt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDrawDebt.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgDrawDebt();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.sender = reader.string();
                        break;
                    case 2:
                        message.collateral_type = reader.string();
                        break;
                    case 3:
                        message.principal = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgDrawDebt message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgDrawDebt} MsgDrawDebt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDrawDebt.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgDrawDebt message.
             * @function verify
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgDrawDebt.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.sender != null && message.hasOwnProperty("sender"))
                    if (!$util.isString(message.sender))
                        return "sender: string expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.principal != null && message.hasOwnProperty("principal")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.principal);
                    if (error)
                        return "principal." + error;
                }
                return null;
            };

            /**
             * Creates a MsgDrawDebt message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgDrawDebt} MsgDrawDebt
             */
            MsgDrawDebt.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgDrawDebt)
                    return object;
                let message = new $root.ununifi.cdp.MsgDrawDebt();
                if (object.sender != null)
                    message.sender = String(object.sender);
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.principal != null) {
                    if (typeof object.principal !== "object")
                        throw TypeError(".ununifi.cdp.MsgDrawDebt.principal: object expected");
                    message.principal = $root.cosmos.base.v1beta1.Coin.fromObject(object.principal);
                }
                return message;
            };

            /**
             * Creates a plain object from a MsgDrawDebt message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgDrawDebt
             * @static
             * @param {ununifi.cdp.MsgDrawDebt} message MsgDrawDebt
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgDrawDebt.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.sender = "";
                    object.collateral_type = "";
                    object.principal = null;
                }
                if (message.sender != null && message.hasOwnProperty("sender"))
                    object.sender = message.sender;
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.principal != null && message.hasOwnProperty("principal"))
                    object.principal = $root.cosmos.base.v1beta1.Coin.toObject(message.principal, options);
                return object;
            };

            /**
             * Converts this MsgDrawDebt to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgDrawDebt
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgDrawDebt.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgDrawDebt;
        })();

        cdp.MsgDrawDebtResponse = (function() {

            /**
             * Properties of a MsgDrawDebtResponse.
             * @memberof ununifi.cdp
             * @interface IMsgDrawDebtResponse
             */

            /**
             * Constructs a new MsgDrawDebtResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgDrawDebtResponse.
             * @implements IMsgDrawDebtResponse
             * @constructor
             * @param {ununifi.cdp.IMsgDrawDebtResponse=} [properties] Properties to set
             */
            function MsgDrawDebtResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgDrawDebtResponse message. Does not implicitly {@link ununifi.cdp.MsgDrawDebtResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {ununifi.cdp.IMsgDrawDebtResponse} message MsgDrawDebtResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDrawDebtResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgDrawDebtResponse message, length delimited. Does not implicitly {@link ununifi.cdp.MsgDrawDebtResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {ununifi.cdp.IMsgDrawDebtResponse} message MsgDrawDebtResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgDrawDebtResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgDrawDebtResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgDrawDebtResponse} MsgDrawDebtResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDrawDebtResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgDrawDebtResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgDrawDebtResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgDrawDebtResponse} MsgDrawDebtResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgDrawDebtResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgDrawDebtResponse message.
             * @function verify
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgDrawDebtResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgDrawDebtResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgDrawDebtResponse} MsgDrawDebtResponse
             */
            MsgDrawDebtResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgDrawDebtResponse)
                    return object;
                return new $root.ununifi.cdp.MsgDrawDebtResponse();
            };

            /**
             * Creates a plain object from a MsgDrawDebtResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @static
             * @param {ununifi.cdp.MsgDrawDebtResponse} message MsgDrawDebtResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgDrawDebtResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgDrawDebtResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgDrawDebtResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgDrawDebtResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgDrawDebtResponse;
        })();

        cdp.MsgRepayDebt = (function() {

            /**
             * Properties of a MsgRepayDebt.
             * @memberof ununifi.cdp
             * @interface IMsgRepayDebt
             * @property {string|null} [sender] MsgRepayDebt sender
             * @property {string|null} [collateral_type] MsgRepayDebt collateral_type
             * @property {cosmos.base.v1beta1.ICoin|null} [payment] MsgRepayDebt payment
             */

            /**
             * Constructs a new MsgRepayDebt.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgRepayDebt.
             * @implements IMsgRepayDebt
             * @constructor
             * @param {ununifi.cdp.IMsgRepayDebt=} [properties] Properties to set
             */
            function MsgRepayDebt(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgRepayDebt sender.
             * @member {string} sender
             * @memberof ununifi.cdp.MsgRepayDebt
             * @instance
             */
            MsgRepayDebt.prototype.sender = "";

            /**
             * MsgRepayDebt collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.MsgRepayDebt
             * @instance
             */
            MsgRepayDebt.prototype.collateral_type = "";

            /**
             * MsgRepayDebt payment.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} payment
             * @memberof ununifi.cdp.MsgRepayDebt
             * @instance
             */
            MsgRepayDebt.prototype.payment = null;

            /**
             * Encodes the specified MsgRepayDebt message. Does not implicitly {@link ununifi.cdp.MsgRepayDebt.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {ununifi.cdp.IMsgRepayDebt} message MsgRepayDebt message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgRepayDebt.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.collateral_type);
                if (message.payment != null && Object.hasOwnProperty.call(message, "payment"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.payment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified MsgRepayDebt message, length delimited. Does not implicitly {@link ununifi.cdp.MsgRepayDebt.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {ununifi.cdp.IMsgRepayDebt} message MsgRepayDebt message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgRepayDebt.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgRepayDebt message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgRepayDebt} MsgRepayDebt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgRepayDebt.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgRepayDebt();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.sender = reader.string();
                        break;
                    case 2:
                        message.collateral_type = reader.string();
                        break;
                    case 3:
                        message.payment = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgRepayDebt message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgRepayDebt} MsgRepayDebt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgRepayDebt.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgRepayDebt message.
             * @function verify
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgRepayDebt.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.sender != null && message.hasOwnProperty("sender"))
                    if (!$util.isString(message.sender))
                        return "sender: string expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.payment != null && message.hasOwnProperty("payment")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.payment);
                    if (error)
                        return "payment." + error;
                }
                return null;
            };

            /**
             * Creates a MsgRepayDebt message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgRepayDebt} MsgRepayDebt
             */
            MsgRepayDebt.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgRepayDebt)
                    return object;
                let message = new $root.ununifi.cdp.MsgRepayDebt();
                if (object.sender != null)
                    message.sender = String(object.sender);
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.payment != null) {
                    if (typeof object.payment !== "object")
                        throw TypeError(".ununifi.cdp.MsgRepayDebt.payment: object expected");
                    message.payment = $root.cosmos.base.v1beta1.Coin.fromObject(object.payment);
                }
                return message;
            };

            /**
             * Creates a plain object from a MsgRepayDebt message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgRepayDebt
             * @static
             * @param {ununifi.cdp.MsgRepayDebt} message MsgRepayDebt
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgRepayDebt.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.sender = "";
                    object.collateral_type = "";
                    object.payment = null;
                }
                if (message.sender != null && message.hasOwnProperty("sender"))
                    object.sender = message.sender;
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.payment != null && message.hasOwnProperty("payment"))
                    object.payment = $root.cosmos.base.v1beta1.Coin.toObject(message.payment, options);
                return object;
            };

            /**
             * Converts this MsgRepayDebt to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgRepayDebt
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgRepayDebt.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgRepayDebt;
        })();

        cdp.MsgRepayDebtResponse = (function() {

            /**
             * Properties of a MsgRepayDebtResponse.
             * @memberof ununifi.cdp
             * @interface IMsgRepayDebtResponse
             */

            /**
             * Constructs a new MsgRepayDebtResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgRepayDebtResponse.
             * @implements IMsgRepayDebtResponse
             * @constructor
             * @param {ununifi.cdp.IMsgRepayDebtResponse=} [properties] Properties to set
             */
            function MsgRepayDebtResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgRepayDebtResponse message. Does not implicitly {@link ununifi.cdp.MsgRepayDebtResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {ununifi.cdp.IMsgRepayDebtResponse} message MsgRepayDebtResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgRepayDebtResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgRepayDebtResponse message, length delimited. Does not implicitly {@link ununifi.cdp.MsgRepayDebtResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {ununifi.cdp.IMsgRepayDebtResponse} message MsgRepayDebtResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgRepayDebtResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgRepayDebtResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgRepayDebtResponse} MsgRepayDebtResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgRepayDebtResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgRepayDebtResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgRepayDebtResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgRepayDebtResponse} MsgRepayDebtResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgRepayDebtResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgRepayDebtResponse message.
             * @function verify
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgRepayDebtResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgRepayDebtResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgRepayDebtResponse} MsgRepayDebtResponse
             */
            MsgRepayDebtResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgRepayDebtResponse)
                    return object;
                return new $root.ununifi.cdp.MsgRepayDebtResponse();
            };

            /**
             * Creates a plain object from a MsgRepayDebtResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @static
             * @param {ununifi.cdp.MsgRepayDebtResponse} message MsgRepayDebtResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgRepayDebtResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgRepayDebtResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgRepayDebtResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgRepayDebtResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgRepayDebtResponse;
        })();

        cdp.MsgLiquidate = (function() {

            /**
             * Properties of a MsgLiquidate.
             * @memberof ununifi.cdp
             * @interface IMsgLiquidate
             * @property {string|null} [keeper] MsgLiquidate keeper
             * @property {string|null} [borrower] MsgLiquidate borrower
             * @property {string|null} [collateral_type] MsgLiquidate collateral_type
             */

            /**
             * Constructs a new MsgLiquidate.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgLiquidate.
             * @implements IMsgLiquidate
             * @constructor
             * @param {ununifi.cdp.IMsgLiquidate=} [properties] Properties to set
             */
            function MsgLiquidate(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgLiquidate keeper.
             * @member {string} keeper
             * @memberof ununifi.cdp.MsgLiquidate
             * @instance
             */
            MsgLiquidate.prototype.keeper = "";

            /**
             * MsgLiquidate borrower.
             * @member {string} borrower
             * @memberof ununifi.cdp.MsgLiquidate
             * @instance
             */
            MsgLiquidate.prototype.borrower = "";

            /**
             * MsgLiquidate collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.MsgLiquidate
             * @instance
             */
            MsgLiquidate.prototype.collateral_type = "";

            /**
             * Encodes the specified MsgLiquidate message. Does not implicitly {@link ununifi.cdp.MsgLiquidate.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {ununifi.cdp.IMsgLiquidate} message MsgLiquidate message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgLiquidate.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.keeper != null && Object.hasOwnProperty.call(message, "keeper"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.keeper);
                if (message.borrower != null && Object.hasOwnProperty.call(message, "borrower"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.borrower);
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.collateral_type);
                return writer;
            };

            /**
             * Encodes the specified MsgLiquidate message, length delimited. Does not implicitly {@link ununifi.cdp.MsgLiquidate.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {ununifi.cdp.IMsgLiquidate} message MsgLiquidate message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgLiquidate.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgLiquidate message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgLiquidate} MsgLiquidate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgLiquidate.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgLiquidate();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.keeper = reader.string();
                        break;
                    case 2:
                        message.borrower = reader.string();
                        break;
                    case 3:
                        message.collateral_type = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgLiquidate message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgLiquidate} MsgLiquidate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgLiquidate.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgLiquidate message.
             * @function verify
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgLiquidate.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.keeper != null && message.hasOwnProperty("keeper"))
                    if (!$util.isString(message.keeper))
                        return "keeper: string expected";
                if (message.borrower != null && message.hasOwnProperty("borrower"))
                    if (!$util.isString(message.borrower))
                        return "borrower: string expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                return null;
            };

            /**
             * Creates a MsgLiquidate message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgLiquidate} MsgLiquidate
             */
            MsgLiquidate.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgLiquidate)
                    return object;
                let message = new $root.ununifi.cdp.MsgLiquidate();
                if (object.keeper != null)
                    message.keeper = String(object.keeper);
                if (object.borrower != null)
                    message.borrower = String(object.borrower);
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                return message;
            };

            /**
             * Creates a plain object from a MsgLiquidate message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgLiquidate
             * @static
             * @param {ununifi.cdp.MsgLiquidate} message MsgLiquidate
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgLiquidate.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.keeper = "";
                    object.borrower = "";
                    object.collateral_type = "";
                }
                if (message.keeper != null && message.hasOwnProperty("keeper"))
                    object.keeper = message.keeper;
                if (message.borrower != null && message.hasOwnProperty("borrower"))
                    object.borrower = message.borrower;
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                return object;
            };

            /**
             * Converts this MsgLiquidate to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgLiquidate
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgLiquidate.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgLiquidate;
        })();

        cdp.MsgLiquidateResponse = (function() {

            /**
             * Properties of a MsgLiquidateResponse.
             * @memberof ununifi.cdp
             * @interface IMsgLiquidateResponse
             */

            /**
             * Constructs a new MsgLiquidateResponse.
             * @memberof ununifi.cdp
             * @classdesc Represents a MsgLiquidateResponse.
             * @implements IMsgLiquidateResponse
             * @constructor
             * @param {ununifi.cdp.IMsgLiquidateResponse=} [properties] Properties to set
             */
            function MsgLiquidateResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgLiquidateResponse message. Does not implicitly {@link ununifi.cdp.MsgLiquidateResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {ununifi.cdp.IMsgLiquidateResponse} message MsgLiquidateResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgLiquidateResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgLiquidateResponse message, length delimited. Does not implicitly {@link ununifi.cdp.MsgLiquidateResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {ununifi.cdp.IMsgLiquidateResponse} message MsgLiquidateResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgLiquidateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgLiquidateResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.MsgLiquidateResponse} MsgLiquidateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgLiquidateResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.MsgLiquidateResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgLiquidateResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.MsgLiquidateResponse} MsgLiquidateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgLiquidateResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgLiquidateResponse message.
             * @function verify
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgLiquidateResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgLiquidateResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.MsgLiquidateResponse} MsgLiquidateResponse
             */
            MsgLiquidateResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.MsgLiquidateResponse)
                    return object;
                return new $root.ununifi.cdp.MsgLiquidateResponse();
            };

            /**
             * Creates a plain object from a MsgLiquidateResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @static
             * @param {ununifi.cdp.MsgLiquidateResponse} message MsgLiquidateResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgLiquidateResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgLiquidateResponse to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.MsgLiquidateResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgLiquidateResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgLiquidateResponse;
        })();

        cdp.GenesisState = (function() {

            /**
             * Properties of a GenesisState.
             * @memberof ununifi.cdp
             * @interface IGenesisState
             * @property {ununifi.cdp.IParams|null} [params] GenesisState params
             * @property {Array.<ununifi.cdp.ICdp>|null} [cdps] GenesisState cdps
             * @property {Array.<ununifi.cdp.IDeposit>|null} [deposits] GenesisState deposits
             * @property {Long|null} [starting_cdp_id] GenesisState starting_cdp_id
             * @property {string|null} [debt_denom] GenesisState debt_denom
             * @property {string|null} [gov_denom] GenesisState gov_denom
             * @property {Array.<ununifi.cdp.IGenesisAccumulationTime>|null} [previous_accumulation_times] GenesisState previous_accumulation_times
             * @property {Array.<ununifi.cdp.IGenesisTotalPrincipal>|null} [total_principals] GenesisState total_principals
             */

            /**
             * Constructs a new GenesisState.
             * @memberof ununifi.cdp
             * @classdesc Represents a GenesisState.
             * @implements IGenesisState
             * @constructor
             * @param {ununifi.cdp.IGenesisState=} [properties] Properties to set
             */
            function GenesisState(properties) {
                this.cdps = [];
                this.deposits = [];
                this.previous_accumulation_times = [];
                this.total_principals = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisState params.
             * @member {ununifi.cdp.IParams|null|undefined} params
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.params = null;

            /**
             * GenesisState cdps.
             * @member {Array.<ununifi.cdp.ICdp>} cdps
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.cdps = $util.emptyArray;

            /**
             * GenesisState deposits.
             * @member {Array.<ununifi.cdp.IDeposit>} deposits
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.deposits = $util.emptyArray;

            /**
             * GenesisState starting_cdp_id.
             * @member {Long} starting_cdp_id
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.starting_cdp_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * GenesisState debt_denom.
             * @member {string} debt_denom
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.debt_denom = "";

            /**
             * GenesisState gov_denom.
             * @member {string} gov_denom
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.gov_denom = "";

            /**
             * GenesisState previous_accumulation_times.
             * @member {Array.<ununifi.cdp.IGenesisAccumulationTime>} previous_accumulation_times
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.previous_accumulation_times = $util.emptyArray;

            /**
             * GenesisState total_principals.
             * @member {Array.<ununifi.cdp.IGenesisTotalPrincipal>} total_principals
             * @memberof ununifi.cdp.GenesisState
             * @instance
             */
            GenesisState.prototype.total_principals = $util.emptyArray;

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link ununifi.cdp.GenesisState.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {ununifi.cdp.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.cdp.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.cdps != null && message.cdps.length)
                    for (let i = 0; i < message.cdps.length; ++i)
                        $root.ununifi.cdp.Cdp.encode(message.cdps[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.deposits != null && message.deposits.length)
                    for (let i = 0; i < message.deposits.length; ++i)
                        $root.ununifi.cdp.Deposit.encode(message.deposits[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.starting_cdp_id != null && Object.hasOwnProperty.call(message, "starting_cdp_id"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.starting_cdp_id);
                if (message.debt_denom != null && Object.hasOwnProperty.call(message, "debt_denom"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.debt_denom);
                if (message.gov_denom != null && Object.hasOwnProperty.call(message, "gov_denom"))
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.gov_denom);
                if (message.previous_accumulation_times != null && message.previous_accumulation_times.length)
                    for (let i = 0; i < message.previous_accumulation_times.length; ++i)
                        $root.ununifi.cdp.GenesisAccumulationTime.encode(message.previous_accumulation_times[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.total_principals != null && message.total_principals.length)
                    for (let i = 0; i < message.total_principals.length; ++i)
                        $root.ununifi.cdp.GenesisTotalPrincipal.encode(message.total_principals[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ununifi.cdp.GenesisState.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {ununifi.cdp.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.GenesisState();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.cdp.Params.decode(reader, reader.uint32());
                        break;
                    case 2:
                        if (!(message.cdps && message.cdps.length))
                            message.cdps = [];
                        message.cdps.push($root.ununifi.cdp.Cdp.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        if (!(message.deposits && message.deposits.length))
                            message.deposits = [];
                        message.deposits.push($root.ununifi.cdp.Deposit.decode(reader, reader.uint32()));
                        break;
                    case 4:
                        message.starting_cdp_id = reader.uint64();
                        break;
                    case 5:
                        message.debt_denom = reader.string();
                        break;
                    case 6:
                        message.gov_denom = reader.string();
                        break;
                    case 7:
                        if (!(message.previous_accumulation_times && message.previous_accumulation_times.length))
                            message.previous_accumulation_times = [];
                        message.previous_accumulation_times.push($root.ununifi.cdp.GenesisAccumulationTime.decode(reader, reader.uint32()));
                        break;
                    case 8:
                        if (!(message.total_principals && message.total_principals.length))
                            message.total_principals = [];
                        message.total_principals.push($root.ununifi.cdp.GenesisTotalPrincipal.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisState message.
             * @function verify
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisState.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.cdp.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                if (message.cdps != null && message.hasOwnProperty("cdps")) {
                    if (!Array.isArray(message.cdps))
                        return "cdps: array expected";
                    for (let i = 0; i < message.cdps.length; ++i) {
                        let error = $root.ununifi.cdp.Cdp.verify(message.cdps[i]);
                        if (error)
                            return "cdps." + error;
                    }
                }
                if (message.deposits != null && message.hasOwnProperty("deposits")) {
                    if (!Array.isArray(message.deposits))
                        return "deposits: array expected";
                    for (let i = 0; i < message.deposits.length; ++i) {
                        let error = $root.ununifi.cdp.Deposit.verify(message.deposits[i]);
                        if (error)
                            return "deposits." + error;
                    }
                }
                if (message.starting_cdp_id != null && message.hasOwnProperty("starting_cdp_id"))
                    if (!$util.isInteger(message.starting_cdp_id) && !(message.starting_cdp_id && $util.isInteger(message.starting_cdp_id.low) && $util.isInteger(message.starting_cdp_id.high)))
                        return "starting_cdp_id: integer|Long expected";
                if (message.debt_denom != null && message.hasOwnProperty("debt_denom"))
                    if (!$util.isString(message.debt_denom))
                        return "debt_denom: string expected";
                if (message.gov_denom != null && message.hasOwnProperty("gov_denom"))
                    if (!$util.isString(message.gov_denom))
                        return "gov_denom: string expected";
                if (message.previous_accumulation_times != null && message.hasOwnProperty("previous_accumulation_times")) {
                    if (!Array.isArray(message.previous_accumulation_times))
                        return "previous_accumulation_times: array expected";
                    for (let i = 0; i < message.previous_accumulation_times.length; ++i) {
                        let error = $root.ununifi.cdp.GenesisAccumulationTime.verify(message.previous_accumulation_times[i]);
                        if (error)
                            return "previous_accumulation_times." + error;
                    }
                }
                if (message.total_principals != null && message.hasOwnProperty("total_principals")) {
                    if (!Array.isArray(message.total_principals))
                        return "total_principals: array expected";
                    for (let i = 0; i < message.total_principals.length; ++i) {
                        let error = $root.ununifi.cdp.GenesisTotalPrincipal.verify(message.total_principals[i]);
                        if (error)
                            return "total_principals." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.GenesisState} GenesisState
             */
            GenesisState.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.GenesisState)
                    return object;
                let message = new $root.ununifi.cdp.GenesisState();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.cdp.GenesisState.params: object expected");
                    message.params = $root.ununifi.cdp.Params.fromObject(object.params);
                }
                if (object.cdps) {
                    if (!Array.isArray(object.cdps))
                        throw TypeError(".ununifi.cdp.GenesisState.cdps: array expected");
                    message.cdps = [];
                    for (let i = 0; i < object.cdps.length; ++i) {
                        if (typeof object.cdps[i] !== "object")
                            throw TypeError(".ununifi.cdp.GenesisState.cdps: object expected");
                        message.cdps[i] = $root.ununifi.cdp.Cdp.fromObject(object.cdps[i]);
                    }
                }
                if (object.deposits) {
                    if (!Array.isArray(object.deposits))
                        throw TypeError(".ununifi.cdp.GenesisState.deposits: array expected");
                    message.deposits = [];
                    for (let i = 0; i < object.deposits.length; ++i) {
                        if (typeof object.deposits[i] !== "object")
                            throw TypeError(".ununifi.cdp.GenesisState.deposits: object expected");
                        message.deposits[i] = $root.ununifi.cdp.Deposit.fromObject(object.deposits[i]);
                    }
                }
                if (object.starting_cdp_id != null)
                    if ($util.Long)
                        (message.starting_cdp_id = $util.Long.fromValue(object.starting_cdp_id)).unsigned = true;
                    else if (typeof object.starting_cdp_id === "string")
                        message.starting_cdp_id = parseInt(object.starting_cdp_id, 10);
                    else if (typeof object.starting_cdp_id === "number")
                        message.starting_cdp_id = object.starting_cdp_id;
                    else if (typeof object.starting_cdp_id === "object")
                        message.starting_cdp_id = new $util.LongBits(object.starting_cdp_id.low >>> 0, object.starting_cdp_id.high >>> 0).toNumber(true);
                if (object.debt_denom != null)
                    message.debt_denom = String(object.debt_denom);
                if (object.gov_denom != null)
                    message.gov_denom = String(object.gov_denom);
                if (object.previous_accumulation_times) {
                    if (!Array.isArray(object.previous_accumulation_times))
                        throw TypeError(".ununifi.cdp.GenesisState.previous_accumulation_times: array expected");
                    message.previous_accumulation_times = [];
                    for (let i = 0; i < object.previous_accumulation_times.length; ++i) {
                        if (typeof object.previous_accumulation_times[i] !== "object")
                            throw TypeError(".ununifi.cdp.GenesisState.previous_accumulation_times: object expected");
                        message.previous_accumulation_times[i] = $root.ununifi.cdp.GenesisAccumulationTime.fromObject(object.previous_accumulation_times[i]);
                    }
                }
                if (object.total_principals) {
                    if (!Array.isArray(object.total_principals))
                        throw TypeError(".ununifi.cdp.GenesisState.total_principals: array expected");
                    message.total_principals = [];
                    for (let i = 0; i < object.total_principals.length; ++i) {
                        if (typeof object.total_principals[i] !== "object")
                            throw TypeError(".ununifi.cdp.GenesisState.total_principals: object expected");
                        message.total_principals[i] = $root.ununifi.cdp.GenesisTotalPrincipal.fromObject(object.total_principals[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.GenesisState
             * @static
             * @param {ununifi.cdp.GenesisState} message GenesisState
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisState.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.cdps = [];
                    object.deposits = [];
                    object.previous_accumulation_times = [];
                    object.total_principals = [];
                }
                if (options.defaults) {
                    object.params = null;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.starting_cdp_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.starting_cdp_id = options.longs === String ? "0" : 0;
                    object.debt_denom = "";
                    object.gov_denom = "";
                }
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.cdp.Params.toObject(message.params, options);
                if (message.cdps && message.cdps.length) {
                    object.cdps = [];
                    for (let j = 0; j < message.cdps.length; ++j)
                        object.cdps[j] = $root.ununifi.cdp.Cdp.toObject(message.cdps[j], options);
                }
                if (message.deposits && message.deposits.length) {
                    object.deposits = [];
                    for (let j = 0; j < message.deposits.length; ++j)
                        object.deposits[j] = $root.ununifi.cdp.Deposit.toObject(message.deposits[j], options);
                }
                if (message.starting_cdp_id != null && message.hasOwnProperty("starting_cdp_id"))
                    if (typeof message.starting_cdp_id === "number")
                        object.starting_cdp_id = options.longs === String ? String(message.starting_cdp_id) : message.starting_cdp_id;
                    else
                        object.starting_cdp_id = options.longs === String ? $util.Long.prototype.toString.call(message.starting_cdp_id) : options.longs === Number ? new $util.LongBits(message.starting_cdp_id.low >>> 0, message.starting_cdp_id.high >>> 0).toNumber(true) : message.starting_cdp_id;
                if (message.debt_denom != null && message.hasOwnProperty("debt_denom"))
                    object.debt_denom = message.debt_denom;
                if (message.gov_denom != null && message.hasOwnProperty("gov_denom"))
                    object.gov_denom = message.gov_denom;
                if (message.previous_accumulation_times && message.previous_accumulation_times.length) {
                    object.previous_accumulation_times = [];
                    for (let j = 0; j < message.previous_accumulation_times.length; ++j)
                        object.previous_accumulation_times[j] = $root.ununifi.cdp.GenesisAccumulationTime.toObject(message.previous_accumulation_times[j], options);
                }
                if (message.total_principals && message.total_principals.length) {
                    object.total_principals = [];
                    for (let j = 0; j < message.total_principals.length; ++j)
                        object.total_principals[j] = $root.ununifi.cdp.GenesisTotalPrincipal.toObject(message.total_principals[j], options);
                }
                return object;
            };

            /**
             * Converts this GenesisState to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.GenesisState
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisState.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisState;
        })();

        cdp.GenesisAccumulationTime = (function() {

            /**
             * Properties of a GenesisAccumulationTime.
             * @memberof ununifi.cdp
             * @interface IGenesisAccumulationTime
             * @property {string|null} [collateral_type] GenesisAccumulationTime collateral_type
             * @property {google.protobuf.ITimestamp|null} [previous_accumulation_time] GenesisAccumulationTime previous_accumulation_time
             * @property {string|null} [interest_factor] GenesisAccumulationTime interest_factor
             */

            /**
             * Constructs a new GenesisAccumulationTime.
             * @memberof ununifi.cdp
             * @classdesc Represents a GenesisAccumulationTime.
             * @implements IGenesisAccumulationTime
             * @constructor
             * @param {ununifi.cdp.IGenesisAccumulationTime=} [properties] Properties to set
             */
            function GenesisAccumulationTime(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisAccumulationTime collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @instance
             */
            GenesisAccumulationTime.prototype.collateral_type = "";

            /**
             * GenesisAccumulationTime previous_accumulation_time.
             * @member {google.protobuf.ITimestamp|null|undefined} previous_accumulation_time
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @instance
             */
            GenesisAccumulationTime.prototype.previous_accumulation_time = null;

            /**
             * GenesisAccumulationTime interest_factor.
             * @member {string} interest_factor
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @instance
             */
            GenesisAccumulationTime.prototype.interest_factor = "";

            /**
             * Encodes the specified GenesisAccumulationTime message. Does not implicitly {@link ununifi.cdp.GenesisAccumulationTime.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {ununifi.cdp.IGenesisAccumulationTime} message GenesisAccumulationTime message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisAccumulationTime.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.collateral_type);
                if (message.previous_accumulation_time != null && Object.hasOwnProperty.call(message, "previous_accumulation_time"))
                    $root.google.protobuf.Timestamp.encode(message.previous_accumulation_time, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.interest_factor != null && Object.hasOwnProperty.call(message, "interest_factor"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.interest_factor);
                return writer;
            };

            /**
             * Encodes the specified GenesisAccumulationTime message, length delimited. Does not implicitly {@link ununifi.cdp.GenesisAccumulationTime.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {ununifi.cdp.IGenesisAccumulationTime} message GenesisAccumulationTime message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisAccumulationTime.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisAccumulationTime message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.GenesisAccumulationTime} GenesisAccumulationTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisAccumulationTime.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.GenesisAccumulationTime();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.collateral_type = reader.string();
                        break;
                    case 2:
                        message.previous_accumulation_time = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.interest_factor = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisAccumulationTime message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.GenesisAccumulationTime} GenesisAccumulationTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisAccumulationTime.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisAccumulationTime message.
             * @function verify
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisAccumulationTime.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.previous_accumulation_time != null && message.hasOwnProperty("previous_accumulation_time")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.previous_accumulation_time);
                    if (error)
                        return "previous_accumulation_time." + error;
                }
                if (message.interest_factor != null && message.hasOwnProperty("interest_factor"))
                    if (!$util.isString(message.interest_factor))
                        return "interest_factor: string expected";
                return null;
            };

            /**
             * Creates a GenesisAccumulationTime message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.GenesisAccumulationTime} GenesisAccumulationTime
             */
            GenesisAccumulationTime.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.GenesisAccumulationTime)
                    return object;
                let message = new $root.ununifi.cdp.GenesisAccumulationTime();
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.previous_accumulation_time != null) {
                    if (typeof object.previous_accumulation_time !== "object")
                        throw TypeError(".ununifi.cdp.GenesisAccumulationTime.previous_accumulation_time: object expected");
                    message.previous_accumulation_time = $root.google.protobuf.Timestamp.fromObject(object.previous_accumulation_time);
                }
                if (object.interest_factor != null)
                    message.interest_factor = String(object.interest_factor);
                return message;
            };

            /**
             * Creates a plain object from a GenesisAccumulationTime message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @static
             * @param {ununifi.cdp.GenesisAccumulationTime} message GenesisAccumulationTime
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisAccumulationTime.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.collateral_type = "";
                    object.previous_accumulation_time = null;
                    object.interest_factor = "";
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.previous_accumulation_time != null && message.hasOwnProperty("previous_accumulation_time"))
                    object.previous_accumulation_time = $root.google.protobuf.Timestamp.toObject(message.previous_accumulation_time, options);
                if (message.interest_factor != null && message.hasOwnProperty("interest_factor"))
                    object.interest_factor = message.interest_factor;
                return object;
            };

            /**
             * Converts this GenesisAccumulationTime to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.GenesisAccumulationTime
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisAccumulationTime.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisAccumulationTime;
        })();

        cdp.GenesisTotalPrincipal = (function() {

            /**
             * Properties of a GenesisTotalPrincipal.
             * @memberof ununifi.cdp
             * @interface IGenesisTotalPrincipal
             * @property {string|null} [collateral_type] GenesisTotalPrincipal collateral_type
             * @property {string|null} [total_principal] GenesisTotalPrincipal total_principal
             */

            /**
             * Constructs a new GenesisTotalPrincipal.
             * @memberof ununifi.cdp
             * @classdesc Represents a GenesisTotalPrincipal.
             * @implements IGenesisTotalPrincipal
             * @constructor
             * @param {ununifi.cdp.IGenesisTotalPrincipal=} [properties] Properties to set
             */
            function GenesisTotalPrincipal(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisTotalPrincipal collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @instance
             */
            GenesisTotalPrincipal.prototype.collateral_type = "";

            /**
             * GenesisTotalPrincipal total_principal.
             * @member {string} total_principal
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @instance
             */
            GenesisTotalPrincipal.prototype.total_principal = "";

            /**
             * Encodes the specified GenesisTotalPrincipal message. Does not implicitly {@link ununifi.cdp.GenesisTotalPrincipal.verify|verify} messages.
             * @function encode
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {ununifi.cdp.IGenesisTotalPrincipal} message GenesisTotalPrincipal message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisTotalPrincipal.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.collateral_type);
                if (message.total_principal != null && Object.hasOwnProperty.call(message, "total_principal"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.total_principal);
                return writer;
            };

            /**
             * Encodes the specified GenesisTotalPrincipal message, length delimited. Does not implicitly {@link ununifi.cdp.GenesisTotalPrincipal.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {ununifi.cdp.IGenesisTotalPrincipal} message GenesisTotalPrincipal message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisTotalPrincipal.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisTotalPrincipal message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.cdp.GenesisTotalPrincipal} GenesisTotalPrincipal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisTotalPrincipal.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.cdp.GenesisTotalPrincipal();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.collateral_type = reader.string();
                        break;
                    case 2:
                        message.total_principal = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisTotalPrincipal message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.cdp.GenesisTotalPrincipal} GenesisTotalPrincipal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisTotalPrincipal.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisTotalPrincipal message.
             * @function verify
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisTotalPrincipal.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.total_principal != null && message.hasOwnProperty("total_principal"))
                    if (!$util.isString(message.total_principal))
                        return "total_principal: string expected";
                return null;
            };

            /**
             * Creates a GenesisTotalPrincipal message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.cdp.GenesisTotalPrincipal} GenesisTotalPrincipal
             */
            GenesisTotalPrincipal.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.cdp.GenesisTotalPrincipal)
                    return object;
                let message = new $root.ununifi.cdp.GenesisTotalPrincipal();
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.total_principal != null)
                    message.total_principal = String(object.total_principal);
                return message;
            };

            /**
             * Creates a plain object from a GenesisTotalPrincipal message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @static
             * @param {ununifi.cdp.GenesisTotalPrincipal} message GenesisTotalPrincipal
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisTotalPrincipal.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.collateral_type = "";
                    object.total_principal = "";
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.total_principal != null && message.hasOwnProperty("total_principal"))
                    object.total_principal = message.total_principal;
                return object;
            };

            /**
             * Converts this GenesisTotalPrincipal to JSON.
             * @function toJSON
             * @memberof ununifi.cdp.GenesisTotalPrincipal
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisTotalPrincipal.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisTotalPrincipal;
        })();

        return cdp;
    })();

    ununifi.incentive = (function() {

        /**
         * Namespace incentive.
         * @memberof ununifi
         * @namespace
         */
        const incentive = {};

        incentive.Query = (function() {

            /**
             * Constructs a new Query service.
             * @memberof ununifi.incentive
             * @classdesc Represents a Query
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Query(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;

            /**
             * Callback as used by {@link ununifi.incentive.Query#params}.
             * @memberof ununifi.incentive.Query
             * @typedef ParamsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.incentive.QueryParamsResponse} [response] QueryParamsResponse
             */

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.incentive.Query
             * @instance
             * @param {ununifi.incentive.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @param {ununifi.incentive.Query.ParamsCallback} callback Node-style callback called with the error, if any, and QueryParamsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.params = function params(request, callback) {
                return this.rpcCall(params, $root.ununifi.incentive.QueryParamsRequest, $root.ununifi.incentive.QueryParamsResponse, request, callback);
            }, "name", { value: "Params" });

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.incentive.Query
             * @instance
             * @param {ununifi.incentive.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @returns {Promise<ununifi.incentive.QueryParamsResponse>} Promise
             * @variation 2
             */

            return Query;
        })();

        incentive.QueryParamsRequest = (function() {

            /**
             * Properties of a QueryParamsRequest.
             * @memberof ununifi.incentive
             * @interface IQueryParamsRequest
             */

            /**
             * Constructs a new QueryParamsRequest.
             * @memberof ununifi.incentive
             * @classdesc Represents a QueryParamsRequest.
             * @implements IQueryParamsRequest
             * @constructor
             * @param {ununifi.incentive.IQueryParamsRequest=} [properties] Properties to set
             */
            function QueryParamsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ununifi.incentive.QueryParamsRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {ununifi.incentive.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ununifi.incentive.QueryParamsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {ununifi.incentive.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.QueryParamsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsRequest message.
             * @function verify
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.QueryParamsRequest} QueryParamsRequest
             */
            QueryParamsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.QueryParamsRequest)
                    return object;
                return new $root.ununifi.incentive.QueryParamsRequest();
            };

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.QueryParamsRequest
             * @static
             * @param {ununifi.incentive.QueryParamsRequest} message QueryParamsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.QueryParamsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsRequest;
        })();

        incentive.QueryParamsResponse = (function() {

            /**
             * Properties of a QueryParamsResponse.
             * @memberof ununifi.incentive
             * @interface IQueryParamsResponse
             * @property {ununifi.incentive.IParams|null} [params] QueryParamsResponse params
             */

            /**
             * Constructs a new QueryParamsResponse.
             * @memberof ununifi.incentive
             * @classdesc Represents a QueryParamsResponse.
             * @implements IQueryParamsResponse
             * @constructor
             * @param {ununifi.incentive.IQueryParamsResponse=} [properties] Properties to set
             */
            function QueryParamsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryParamsResponse params.
             * @member {ununifi.incentive.IParams|null|undefined} params
             * @memberof ununifi.incentive.QueryParamsResponse
             * @instance
             */
            QueryParamsResponse.prototype.params = null;

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ununifi.incentive.QueryParamsResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {ununifi.incentive.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.incentive.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ununifi.incentive.QueryParamsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {ununifi.incentive.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.QueryParamsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.incentive.Params.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsResponse message.
             * @function verify
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.incentive.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                return null;
            };

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.QueryParamsResponse} QueryParamsResponse
             */
            QueryParamsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.QueryParamsResponse)
                    return object;
                let message = new $root.ununifi.incentive.QueryParamsResponse();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.incentive.QueryParamsResponse.params: object expected");
                    message.params = $root.ununifi.incentive.Params.fromObject(object.params);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.QueryParamsResponse
             * @static
             * @param {ununifi.incentive.QueryParamsResponse} message QueryParamsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.params = null;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.incentive.Params.toObject(message.params, options);
                return object;
            };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.QueryParamsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsResponse;
        })();

        incentive.BaseClaim = (function() {

            /**
             * Properties of a BaseClaim.
             * @memberof ununifi.incentive
             * @interface IBaseClaim
             * @property {string|null} [owner] BaseClaim owner
             * @property {cosmos.base.v1beta1.ICoin|null} [reward] BaseClaim reward
             */

            /**
             * Constructs a new BaseClaim.
             * @memberof ununifi.incentive
             * @classdesc Represents a BaseClaim.
             * @implements IBaseClaim
             * @constructor
             * @param {ununifi.incentive.IBaseClaim=} [properties] Properties to set
             */
            function BaseClaim(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BaseClaim owner.
             * @member {string} owner
             * @memberof ununifi.incentive.BaseClaim
             * @instance
             */
            BaseClaim.prototype.owner = "";

            /**
             * BaseClaim reward.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} reward
             * @memberof ununifi.incentive.BaseClaim
             * @instance
             */
            BaseClaim.prototype.reward = null;

            /**
             * Encodes the specified BaseClaim message. Does not implicitly {@link ununifi.incentive.BaseClaim.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {ununifi.incentive.IBaseClaim} message BaseClaim message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BaseClaim.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.owner);
                if (message.reward != null && Object.hasOwnProperty.call(message, "reward"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.reward, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified BaseClaim message, length delimited. Does not implicitly {@link ununifi.incentive.BaseClaim.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {ununifi.incentive.IBaseClaim} message BaseClaim message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BaseClaim.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BaseClaim message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.BaseClaim} BaseClaim
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BaseClaim.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.BaseClaim();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.owner = reader.string();
                        break;
                    case 2:
                        message.reward = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a BaseClaim message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.BaseClaim} BaseClaim
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BaseClaim.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BaseClaim message.
             * @function verify
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BaseClaim.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.reward != null && message.hasOwnProperty("reward")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.reward);
                    if (error)
                        return "reward." + error;
                }
                return null;
            };

            /**
             * Creates a BaseClaim message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.BaseClaim} BaseClaim
             */
            BaseClaim.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.BaseClaim)
                    return object;
                let message = new $root.ununifi.incentive.BaseClaim();
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.reward != null) {
                    if (typeof object.reward !== "object")
                        throw TypeError(".ununifi.incentive.BaseClaim.reward: object expected");
                    message.reward = $root.cosmos.base.v1beta1.Coin.fromObject(object.reward);
                }
                return message;
            };

            /**
             * Creates a plain object from a BaseClaim message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.BaseClaim
             * @static
             * @param {ununifi.incentive.BaseClaim} message BaseClaim
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BaseClaim.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.owner = "";
                    object.reward = null;
                }
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.reward != null && message.hasOwnProperty("reward"))
                    object.reward = $root.cosmos.base.v1beta1.Coin.toObject(message.reward, options);
                return object;
            };

            /**
             * Converts this BaseClaim to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.BaseClaim
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BaseClaim.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return BaseClaim;
        })();

        incentive.BaseMultiClaim = (function() {

            /**
             * Properties of a BaseMultiClaim.
             * @memberof ununifi.incentive
             * @interface IBaseMultiClaim
             * @property {string|null} [owner] BaseMultiClaim owner
             * @property {Array.<cosmos.base.v1beta1.ICoin>|null} [reward] BaseMultiClaim reward
             */

            /**
             * Constructs a new BaseMultiClaim.
             * @memberof ununifi.incentive
             * @classdesc Represents a BaseMultiClaim.
             * @implements IBaseMultiClaim
             * @constructor
             * @param {ununifi.incentive.IBaseMultiClaim=} [properties] Properties to set
             */
            function BaseMultiClaim(properties) {
                this.reward = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BaseMultiClaim owner.
             * @member {string} owner
             * @memberof ununifi.incentive.BaseMultiClaim
             * @instance
             */
            BaseMultiClaim.prototype.owner = "";

            /**
             * BaseMultiClaim reward.
             * @member {Array.<cosmos.base.v1beta1.ICoin>} reward
             * @memberof ununifi.incentive.BaseMultiClaim
             * @instance
             */
            BaseMultiClaim.prototype.reward = $util.emptyArray;

            /**
             * Encodes the specified BaseMultiClaim message. Does not implicitly {@link ununifi.incentive.BaseMultiClaim.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {ununifi.incentive.IBaseMultiClaim} message BaseMultiClaim message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BaseMultiClaim.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.owner);
                if (message.reward != null && message.reward.length)
                    for (let i = 0; i < message.reward.length; ++i)
                        $root.cosmos.base.v1beta1.Coin.encode(message.reward[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified BaseMultiClaim message, length delimited. Does not implicitly {@link ununifi.incentive.BaseMultiClaim.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {ununifi.incentive.IBaseMultiClaim} message BaseMultiClaim message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BaseMultiClaim.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BaseMultiClaim message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.BaseMultiClaim} BaseMultiClaim
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BaseMultiClaim.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.BaseMultiClaim();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.owner = reader.string();
                        break;
                    case 2:
                        if (!(message.reward && message.reward.length))
                            message.reward = [];
                        message.reward.push($root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a BaseMultiClaim message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.BaseMultiClaim} BaseMultiClaim
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BaseMultiClaim.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BaseMultiClaim message.
             * @function verify
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BaseMultiClaim.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    if (!$util.isString(message.owner))
                        return "owner: string expected";
                if (message.reward != null && message.hasOwnProperty("reward")) {
                    if (!Array.isArray(message.reward))
                        return "reward: array expected";
                    for (let i = 0; i < message.reward.length; ++i) {
                        let error = $root.cosmos.base.v1beta1.Coin.verify(message.reward[i]);
                        if (error)
                            return "reward." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a BaseMultiClaim message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.BaseMultiClaim} BaseMultiClaim
             */
            BaseMultiClaim.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.BaseMultiClaim)
                    return object;
                let message = new $root.ununifi.incentive.BaseMultiClaim();
                if (object.owner != null)
                    message.owner = String(object.owner);
                if (object.reward) {
                    if (!Array.isArray(object.reward))
                        throw TypeError(".ununifi.incentive.BaseMultiClaim.reward: array expected");
                    message.reward = [];
                    for (let i = 0; i < object.reward.length; ++i) {
                        if (typeof object.reward[i] !== "object")
                            throw TypeError(".ununifi.incentive.BaseMultiClaim.reward: object expected");
                        message.reward[i] = $root.cosmos.base.v1beta1.Coin.fromObject(object.reward[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a BaseMultiClaim message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.BaseMultiClaim
             * @static
             * @param {ununifi.incentive.BaseMultiClaim} message BaseMultiClaim
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BaseMultiClaim.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.reward = [];
                if (options.defaults)
                    object.owner = "";
                if (message.owner != null && message.hasOwnProperty("owner"))
                    object.owner = message.owner;
                if (message.reward && message.reward.length) {
                    object.reward = [];
                    for (let j = 0; j < message.reward.length; ++j)
                        object.reward[j] = $root.cosmos.base.v1beta1.Coin.toObject(message.reward[j], options);
                }
                return object;
            };

            /**
             * Converts this BaseMultiClaim to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.BaseMultiClaim
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BaseMultiClaim.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return BaseMultiClaim;
        })();

        incentive.CdpMintingClaim = (function() {

            /**
             * Properties of a CdpMintingClaim.
             * @memberof ununifi.incentive
             * @interface ICdpMintingClaim
             * @property {ununifi.incentive.IBaseClaim|null} [base_claim] CdpMintingClaim base_claim
             * @property {Array.<ununifi.incentive.IRewardIndex>|null} [reward_indexes] CdpMintingClaim reward_indexes
             */

            /**
             * Constructs a new CdpMintingClaim.
             * @memberof ununifi.incentive
             * @classdesc Represents a CdpMintingClaim.
             * @implements ICdpMintingClaim
             * @constructor
             * @param {ununifi.incentive.ICdpMintingClaim=} [properties] Properties to set
             */
            function CdpMintingClaim(properties) {
                this.reward_indexes = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CdpMintingClaim base_claim.
             * @member {ununifi.incentive.IBaseClaim|null|undefined} base_claim
             * @memberof ununifi.incentive.CdpMintingClaim
             * @instance
             */
            CdpMintingClaim.prototype.base_claim = null;

            /**
             * CdpMintingClaim reward_indexes.
             * @member {Array.<ununifi.incentive.IRewardIndex>} reward_indexes
             * @memberof ununifi.incentive.CdpMintingClaim
             * @instance
             */
            CdpMintingClaim.prototype.reward_indexes = $util.emptyArray;

            /**
             * Encodes the specified CdpMintingClaim message. Does not implicitly {@link ununifi.incentive.CdpMintingClaim.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {ununifi.incentive.ICdpMintingClaim} message CdpMintingClaim message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CdpMintingClaim.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.base_claim != null && Object.hasOwnProperty.call(message, "base_claim"))
                    $root.ununifi.incentive.BaseClaim.encode(message.base_claim, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.reward_indexes != null && message.reward_indexes.length)
                    for (let i = 0; i < message.reward_indexes.length; ++i)
                        $root.ununifi.incentive.RewardIndex.encode(message.reward_indexes[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CdpMintingClaim message, length delimited. Does not implicitly {@link ununifi.incentive.CdpMintingClaim.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {ununifi.incentive.ICdpMintingClaim} message CdpMintingClaim message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CdpMintingClaim.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CdpMintingClaim message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.CdpMintingClaim} CdpMintingClaim
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CdpMintingClaim.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.CdpMintingClaim();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.base_claim = $root.ununifi.incentive.BaseClaim.decode(reader, reader.uint32());
                        break;
                    case 2:
                        if (!(message.reward_indexes && message.reward_indexes.length))
                            message.reward_indexes = [];
                        message.reward_indexes.push($root.ununifi.incentive.RewardIndex.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a CdpMintingClaim message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.CdpMintingClaim} CdpMintingClaim
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CdpMintingClaim.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CdpMintingClaim message.
             * @function verify
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CdpMintingClaim.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.base_claim != null && message.hasOwnProperty("base_claim")) {
                    let error = $root.ununifi.incentive.BaseClaim.verify(message.base_claim);
                    if (error)
                        return "base_claim." + error;
                }
                if (message.reward_indexes != null && message.hasOwnProperty("reward_indexes")) {
                    if (!Array.isArray(message.reward_indexes))
                        return "reward_indexes: array expected";
                    for (let i = 0; i < message.reward_indexes.length; ++i) {
                        let error = $root.ununifi.incentive.RewardIndex.verify(message.reward_indexes[i]);
                        if (error)
                            return "reward_indexes." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a CdpMintingClaim message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.CdpMintingClaim} CdpMintingClaim
             */
            CdpMintingClaim.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.CdpMintingClaim)
                    return object;
                let message = new $root.ununifi.incentive.CdpMintingClaim();
                if (object.base_claim != null) {
                    if (typeof object.base_claim !== "object")
                        throw TypeError(".ununifi.incentive.CdpMintingClaim.base_claim: object expected");
                    message.base_claim = $root.ununifi.incentive.BaseClaim.fromObject(object.base_claim);
                }
                if (object.reward_indexes) {
                    if (!Array.isArray(object.reward_indexes))
                        throw TypeError(".ununifi.incentive.CdpMintingClaim.reward_indexes: array expected");
                    message.reward_indexes = [];
                    for (let i = 0; i < object.reward_indexes.length; ++i) {
                        if (typeof object.reward_indexes[i] !== "object")
                            throw TypeError(".ununifi.incentive.CdpMintingClaim.reward_indexes: object expected");
                        message.reward_indexes[i] = $root.ununifi.incentive.RewardIndex.fromObject(object.reward_indexes[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a CdpMintingClaim message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.CdpMintingClaim
             * @static
             * @param {ununifi.incentive.CdpMintingClaim} message CdpMintingClaim
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CdpMintingClaim.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.reward_indexes = [];
                if (options.defaults)
                    object.base_claim = null;
                if (message.base_claim != null && message.hasOwnProperty("base_claim"))
                    object.base_claim = $root.ununifi.incentive.BaseClaim.toObject(message.base_claim, options);
                if (message.reward_indexes && message.reward_indexes.length) {
                    object.reward_indexes = [];
                    for (let j = 0; j < message.reward_indexes.length; ++j)
                        object.reward_indexes[j] = $root.ununifi.incentive.RewardIndex.toObject(message.reward_indexes[j], options);
                }
                return object;
            };

            /**
             * Converts this CdpMintingClaim to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.CdpMintingClaim
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CdpMintingClaim.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return CdpMintingClaim;
        })();

        incentive.RewardIndex = (function() {

            /**
             * Properties of a RewardIndex.
             * @memberof ununifi.incentive
             * @interface IRewardIndex
             * @property {string|null} [collateral_type] RewardIndex collateral_type
             * @property {string|null} [reward_factor] RewardIndex reward_factor
             */

            /**
             * Constructs a new RewardIndex.
             * @memberof ununifi.incentive
             * @classdesc Represents a RewardIndex.
             * @implements IRewardIndex
             * @constructor
             * @param {ununifi.incentive.IRewardIndex=} [properties] Properties to set
             */
            function RewardIndex(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RewardIndex collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.incentive.RewardIndex
             * @instance
             */
            RewardIndex.prototype.collateral_type = "";

            /**
             * RewardIndex reward_factor.
             * @member {string} reward_factor
             * @memberof ununifi.incentive.RewardIndex
             * @instance
             */
            RewardIndex.prototype.reward_factor = "";

            /**
             * Encodes the specified RewardIndex message. Does not implicitly {@link ununifi.incentive.RewardIndex.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {ununifi.incentive.IRewardIndex} message RewardIndex message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RewardIndex.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.collateral_type);
                if (message.reward_factor != null && Object.hasOwnProperty.call(message, "reward_factor"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.reward_factor);
                return writer;
            };

            /**
             * Encodes the specified RewardIndex message, length delimited. Does not implicitly {@link ununifi.incentive.RewardIndex.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {ununifi.incentive.IRewardIndex} message RewardIndex message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RewardIndex.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RewardIndex message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.RewardIndex} RewardIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RewardIndex.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.RewardIndex();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.collateral_type = reader.string();
                        break;
                    case 2:
                        message.reward_factor = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a RewardIndex message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.RewardIndex} RewardIndex
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RewardIndex.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RewardIndex message.
             * @function verify
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RewardIndex.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.reward_factor != null && message.hasOwnProperty("reward_factor"))
                    if (!$util.isString(message.reward_factor))
                        return "reward_factor: string expected";
                return null;
            };

            /**
             * Creates a RewardIndex message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.RewardIndex} RewardIndex
             */
            RewardIndex.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.RewardIndex)
                    return object;
                let message = new $root.ununifi.incentive.RewardIndex();
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.reward_factor != null)
                    message.reward_factor = String(object.reward_factor);
                return message;
            };

            /**
             * Creates a plain object from a RewardIndex message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.RewardIndex
             * @static
             * @param {ununifi.incentive.RewardIndex} message RewardIndex
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RewardIndex.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.collateral_type = "";
                    object.reward_factor = "";
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.reward_factor != null && message.hasOwnProperty("reward_factor"))
                    object.reward_factor = message.reward_factor;
                return object;
            };

            /**
             * Converts this RewardIndex to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.RewardIndex
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RewardIndex.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return RewardIndex;
        })();

        incentive.Params = (function() {

            /**
             * Properties of a Params.
             * @memberof ununifi.incentive
             * @interface IParams
             * @property {Array.<ununifi.incentive.IRewardPeriod>|null} [cdp_minting_reward_periods] Params cdp_minting_reward_periods
             * @property {Array.<ununifi.incentive.IMultiplier>|null} [claim_multipliers] Params claim_multipliers
             * @property {google.protobuf.ITimestamp|null} [claim_end] Params claim_end
             */

            /**
             * Constructs a new Params.
             * @memberof ununifi.incentive
             * @classdesc Represents a Params.
             * @implements IParams
             * @constructor
             * @param {ununifi.incentive.IParams=} [properties] Properties to set
             */
            function Params(properties) {
                this.cdp_minting_reward_periods = [];
                this.claim_multipliers = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Params cdp_minting_reward_periods.
             * @member {Array.<ununifi.incentive.IRewardPeriod>} cdp_minting_reward_periods
             * @memberof ununifi.incentive.Params
             * @instance
             */
            Params.prototype.cdp_minting_reward_periods = $util.emptyArray;

            /**
             * Params claim_multipliers.
             * @member {Array.<ununifi.incentive.IMultiplier>} claim_multipliers
             * @memberof ununifi.incentive.Params
             * @instance
             */
            Params.prototype.claim_multipliers = $util.emptyArray;

            /**
             * Params claim_end.
             * @member {google.protobuf.ITimestamp|null|undefined} claim_end
             * @memberof ununifi.incentive.Params
             * @instance
             */
            Params.prototype.claim_end = null;

            /**
             * Encodes the specified Params message. Does not implicitly {@link ununifi.incentive.Params.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.Params
             * @static
             * @param {ununifi.incentive.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.cdp_minting_reward_periods != null && message.cdp_minting_reward_periods.length)
                    for (let i = 0; i < message.cdp_minting_reward_periods.length; ++i)
                        $root.ununifi.incentive.RewardPeriod.encode(message.cdp_minting_reward_periods[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.claim_multipliers != null && message.claim_multipliers.length)
                    for (let i = 0; i < message.claim_multipliers.length; ++i)
                        $root.ununifi.incentive.Multiplier.encode(message.claim_multipliers[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.claim_end != null && Object.hasOwnProperty.call(message, "claim_end"))
                    $root.google.protobuf.Timestamp.encode(message.claim_end, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link ununifi.incentive.Params.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.Params
             * @static
             * @param {ununifi.incentive.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.Params();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.cdp_minting_reward_periods && message.cdp_minting_reward_periods.length))
                            message.cdp_minting_reward_periods = [];
                        message.cdp_minting_reward_periods.push($root.ununifi.incentive.RewardPeriod.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        if (!(message.claim_multipliers && message.claim_multipliers.length))
                            message.claim_multipliers = [];
                        message.claim_multipliers.push($root.ununifi.incentive.Multiplier.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        message.claim_end = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Params message.
             * @function verify
             * @memberof ununifi.incentive.Params
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Params.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.cdp_minting_reward_periods != null && message.hasOwnProperty("cdp_minting_reward_periods")) {
                    if (!Array.isArray(message.cdp_minting_reward_periods))
                        return "cdp_minting_reward_periods: array expected";
                    for (let i = 0; i < message.cdp_minting_reward_periods.length; ++i) {
                        let error = $root.ununifi.incentive.RewardPeriod.verify(message.cdp_minting_reward_periods[i]);
                        if (error)
                            return "cdp_minting_reward_periods." + error;
                    }
                }
                if (message.claim_multipliers != null && message.hasOwnProperty("claim_multipliers")) {
                    if (!Array.isArray(message.claim_multipliers))
                        return "claim_multipliers: array expected";
                    for (let i = 0; i < message.claim_multipliers.length; ++i) {
                        let error = $root.ununifi.incentive.Multiplier.verify(message.claim_multipliers[i]);
                        if (error)
                            return "claim_multipliers." + error;
                    }
                }
                if (message.claim_end != null && message.hasOwnProperty("claim_end")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.claim_end);
                    if (error)
                        return "claim_end." + error;
                }
                return null;
            };

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.Params
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.Params} Params
             */
            Params.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.Params)
                    return object;
                let message = new $root.ununifi.incentive.Params();
                if (object.cdp_minting_reward_periods) {
                    if (!Array.isArray(object.cdp_minting_reward_periods))
                        throw TypeError(".ununifi.incentive.Params.cdp_minting_reward_periods: array expected");
                    message.cdp_minting_reward_periods = [];
                    for (let i = 0; i < object.cdp_minting_reward_periods.length; ++i) {
                        if (typeof object.cdp_minting_reward_periods[i] !== "object")
                            throw TypeError(".ununifi.incentive.Params.cdp_minting_reward_periods: object expected");
                        message.cdp_minting_reward_periods[i] = $root.ununifi.incentive.RewardPeriod.fromObject(object.cdp_minting_reward_periods[i]);
                    }
                }
                if (object.claim_multipliers) {
                    if (!Array.isArray(object.claim_multipliers))
                        throw TypeError(".ununifi.incentive.Params.claim_multipliers: array expected");
                    message.claim_multipliers = [];
                    for (let i = 0; i < object.claim_multipliers.length; ++i) {
                        if (typeof object.claim_multipliers[i] !== "object")
                            throw TypeError(".ununifi.incentive.Params.claim_multipliers: object expected");
                        message.claim_multipliers[i] = $root.ununifi.incentive.Multiplier.fromObject(object.claim_multipliers[i]);
                    }
                }
                if (object.claim_end != null) {
                    if (typeof object.claim_end !== "object")
                        throw TypeError(".ununifi.incentive.Params.claim_end: object expected");
                    message.claim_end = $root.google.protobuf.Timestamp.fromObject(object.claim_end);
                }
                return message;
            };

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.Params
             * @static
             * @param {ununifi.incentive.Params} message Params
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Params.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.cdp_minting_reward_periods = [];
                    object.claim_multipliers = [];
                }
                if (options.defaults)
                    object.claim_end = null;
                if (message.cdp_minting_reward_periods && message.cdp_minting_reward_periods.length) {
                    object.cdp_minting_reward_periods = [];
                    for (let j = 0; j < message.cdp_minting_reward_periods.length; ++j)
                        object.cdp_minting_reward_periods[j] = $root.ununifi.incentive.RewardPeriod.toObject(message.cdp_minting_reward_periods[j], options);
                }
                if (message.claim_multipliers && message.claim_multipliers.length) {
                    object.claim_multipliers = [];
                    for (let j = 0; j < message.claim_multipliers.length; ++j)
                        object.claim_multipliers[j] = $root.ununifi.incentive.Multiplier.toObject(message.claim_multipliers[j], options);
                }
                if (message.claim_end != null && message.hasOwnProperty("claim_end"))
                    object.claim_end = $root.google.protobuf.Timestamp.toObject(message.claim_end, options);
                return object;
            };

            /**
             * Converts this Params to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.Params
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Params.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Params;
        })();

        incentive.RewardPeriod = (function() {

            /**
             * Properties of a RewardPeriod.
             * @memberof ununifi.incentive
             * @interface IRewardPeriod
             * @property {boolean|null} [active] RewardPeriod active
             * @property {string|null} [collateral_type] RewardPeriod collateral_type
             * @property {google.protobuf.ITimestamp|null} [start] RewardPeriod start
             * @property {google.protobuf.ITimestamp|null} [end] RewardPeriod end
             * @property {cosmos.base.v1beta1.ICoin|null} [rewards_per_second] RewardPeriod rewards_per_second
             */

            /**
             * Constructs a new RewardPeriod.
             * @memberof ununifi.incentive
             * @classdesc Represents a RewardPeriod.
             * @implements IRewardPeriod
             * @constructor
             * @param {ununifi.incentive.IRewardPeriod=} [properties] Properties to set
             */
            function RewardPeriod(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RewardPeriod active.
             * @member {boolean} active
             * @memberof ununifi.incentive.RewardPeriod
             * @instance
             */
            RewardPeriod.prototype.active = false;

            /**
             * RewardPeriod collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.incentive.RewardPeriod
             * @instance
             */
            RewardPeriod.prototype.collateral_type = "";

            /**
             * RewardPeriod start.
             * @member {google.protobuf.ITimestamp|null|undefined} start
             * @memberof ununifi.incentive.RewardPeriod
             * @instance
             */
            RewardPeriod.prototype.start = null;

            /**
             * RewardPeriod end.
             * @member {google.protobuf.ITimestamp|null|undefined} end
             * @memberof ununifi.incentive.RewardPeriod
             * @instance
             */
            RewardPeriod.prototype.end = null;

            /**
             * RewardPeriod rewards_per_second.
             * @member {cosmos.base.v1beta1.ICoin|null|undefined} rewards_per_second
             * @memberof ununifi.incentive.RewardPeriod
             * @instance
             */
            RewardPeriod.prototype.rewards_per_second = null;

            /**
             * Encodes the specified RewardPeriod message. Does not implicitly {@link ununifi.incentive.RewardPeriod.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {ununifi.incentive.IRewardPeriod} message RewardPeriod message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RewardPeriod.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.active != null && Object.hasOwnProperty.call(message, "active"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.active);
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.collateral_type);
                if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                    $root.google.protobuf.Timestamp.encode(message.start, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                    $root.google.protobuf.Timestamp.encode(message.end, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.rewards_per_second != null && Object.hasOwnProperty.call(message, "rewards_per_second"))
                    $root.cosmos.base.v1beta1.Coin.encode(message.rewards_per_second, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified RewardPeriod message, length delimited. Does not implicitly {@link ununifi.incentive.RewardPeriod.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {ununifi.incentive.IRewardPeriod} message RewardPeriod message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RewardPeriod.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RewardPeriod message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.RewardPeriod} RewardPeriod
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RewardPeriod.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.RewardPeriod();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.active = reader.bool();
                        break;
                    case 2:
                        message.collateral_type = reader.string();
                        break;
                    case 3:
                        message.start = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.end = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 5:
                        message.rewards_per_second = $root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a RewardPeriod message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.RewardPeriod} RewardPeriod
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RewardPeriod.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RewardPeriod message.
             * @function verify
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RewardPeriod.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.active != null && message.hasOwnProperty("active"))
                    if (typeof message.active !== "boolean")
                        return "active: boolean expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.start != null && message.hasOwnProperty("start")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.start);
                    if (error)
                        return "start." + error;
                }
                if (message.end != null && message.hasOwnProperty("end")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.end);
                    if (error)
                        return "end." + error;
                }
                if (message.rewards_per_second != null && message.hasOwnProperty("rewards_per_second")) {
                    let error = $root.cosmos.base.v1beta1.Coin.verify(message.rewards_per_second);
                    if (error)
                        return "rewards_per_second." + error;
                }
                return null;
            };

            /**
             * Creates a RewardPeriod message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.RewardPeriod} RewardPeriod
             */
            RewardPeriod.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.RewardPeriod)
                    return object;
                let message = new $root.ununifi.incentive.RewardPeriod();
                if (object.active != null)
                    message.active = Boolean(object.active);
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.start != null) {
                    if (typeof object.start !== "object")
                        throw TypeError(".ununifi.incentive.RewardPeriod.start: object expected");
                    message.start = $root.google.protobuf.Timestamp.fromObject(object.start);
                }
                if (object.end != null) {
                    if (typeof object.end !== "object")
                        throw TypeError(".ununifi.incentive.RewardPeriod.end: object expected");
                    message.end = $root.google.protobuf.Timestamp.fromObject(object.end);
                }
                if (object.rewards_per_second != null) {
                    if (typeof object.rewards_per_second !== "object")
                        throw TypeError(".ununifi.incentive.RewardPeriod.rewards_per_second: object expected");
                    message.rewards_per_second = $root.cosmos.base.v1beta1.Coin.fromObject(object.rewards_per_second);
                }
                return message;
            };

            /**
             * Creates a plain object from a RewardPeriod message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.RewardPeriod
             * @static
             * @param {ununifi.incentive.RewardPeriod} message RewardPeriod
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RewardPeriod.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.active = false;
                    object.collateral_type = "";
                    object.start = null;
                    object.end = null;
                    object.rewards_per_second = null;
                }
                if (message.active != null && message.hasOwnProperty("active"))
                    object.active = message.active;
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.start != null && message.hasOwnProperty("start"))
                    object.start = $root.google.protobuf.Timestamp.toObject(message.start, options);
                if (message.end != null && message.hasOwnProperty("end"))
                    object.end = $root.google.protobuf.Timestamp.toObject(message.end, options);
                if (message.rewards_per_second != null && message.hasOwnProperty("rewards_per_second"))
                    object.rewards_per_second = $root.cosmos.base.v1beta1.Coin.toObject(message.rewards_per_second, options);
                return object;
            };

            /**
             * Converts this RewardPeriod to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.RewardPeriod
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RewardPeriod.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return RewardPeriod;
        })();

        incentive.Multiplier = (function() {

            /**
             * Properties of a Multiplier.
             * @memberof ununifi.incentive
             * @interface IMultiplier
             * @property {string|null} [name] Multiplier name
             * @property {Long|null} [months_lockup] Multiplier months_lockup
             * @property {string|null} [factor] Multiplier factor
             */

            /**
             * Constructs a new Multiplier.
             * @memberof ununifi.incentive
             * @classdesc Represents a Multiplier.
             * @implements IMultiplier
             * @constructor
             * @param {ununifi.incentive.IMultiplier=} [properties] Properties to set
             */
            function Multiplier(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Multiplier name.
             * @member {string} name
             * @memberof ununifi.incentive.Multiplier
             * @instance
             */
            Multiplier.prototype.name = "";

            /**
             * Multiplier months_lockup.
             * @member {Long} months_lockup
             * @memberof ununifi.incentive.Multiplier
             * @instance
             */
            Multiplier.prototype.months_lockup = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Multiplier factor.
             * @member {string} factor
             * @memberof ununifi.incentive.Multiplier
             * @instance
             */
            Multiplier.prototype.factor = "";

            /**
             * Encodes the specified Multiplier message. Does not implicitly {@link ununifi.incentive.Multiplier.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {ununifi.incentive.IMultiplier} message Multiplier message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Multiplier.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.months_lockup != null && Object.hasOwnProperty.call(message, "months_lockup"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.months_lockup);
                if (message.factor != null && Object.hasOwnProperty.call(message, "factor"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.factor);
                return writer;
            };

            /**
             * Encodes the specified Multiplier message, length delimited. Does not implicitly {@link ununifi.incentive.Multiplier.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {ununifi.incentive.IMultiplier} message Multiplier message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Multiplier.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Multiplier message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.Multiplier} Multiplier
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Multiplier.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.Multiplier();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        message.months_lockup = reader.int64();
                        break;
                    case 3:
                        message.factor = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Multiplier message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.Multiplier} Multiplier
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Multiplier.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Multiplier message.
             * @function verify
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Multiplier.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.months_lockup != null && message.hasOwnProperty("months_lockup"))
                    if (!$util.isInteger(message.months_lockup) && !(message.months_lockup && $util.isInteger(message.months_lockup.low) && $util.isInteger(message.months_lockup.high)))
                        return "months_lockup: integer|Long expected";
                if (message.factor != null && message.hasOwnProperty("factor"))
                    if (!$util.isString(message.factor))
                        return "factor: string expected";
                return null;
            };

            /**
             * Creates a Multiplier message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.Multiplier} Multiplier
             */
            Multiplier.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.Multiplier)
                    return object;
                let message = new $root.ununifi.incentive.Multiplier();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.months_lockup != null)
                    if ($util.Long)
                        (message.months_lockup = $util.Long.fromValue(object.months_lockup)).unsigned = false;
                    else if (typeof object.months_lockup === "string")
                        message.months_lockup = parseInt(object.months_lockup, 10);
                    else if (typeof object.months_lockup === "number")
                        message.months_lockup = object.months_lockup;
                    else if (typeof object.months_lockup === "object")
                        message.months_lockup = new $util.LongBits(object.months_lockup.low >>> 0, object.months_lockup.high >>> 0).toNumber();
                if (object.factor != null)
                    message.factor = String(object.factor);
                return message;
            };

            /**
             * Creates a plain object from a Multiplier message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.Multiplier
             * @static
             * @param {ununifi.incentive.Multiplier} message Multiplier
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Multiplier.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, false);
                        object.months_lockup = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.months_lockup = options.longs === String ? "0" : 0;
                    object.factor = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.months_lockup != null && message.hasOwnProperty("months_lockup"))
                    if (typeof message.months_lockup === "number")
                        object.months_lockup = options.longs === String ? String(message.months_lockup) : message.months_lockup;
                    else
                        object.months_lockup = options.longs === String ? $util.Long.prototype.toString.call(message.months_lockup) : options.longs === Number ? new $util.LongBits(message.months_lockup.low >>> 0, message.months_lockup.high >>> 0).toNumber() : message.months_lockup;
                if (message.factor != null && message.hasOwnProperty("factor"))
                    object.factor = message.factor;
                return object;
            };

            /**
             * Converts this Multiplier to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.Multiplier
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Multiplier.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Multiplier;
        })();

        incentive.Msg = (function() {

            /**
             * Constructs a new Msg service.
             * @memberof ununifi.incentive
             * @classdesc Represents a Msg
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Msg(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Msg.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Msg;

            /**
             * Callback as used by {@link ununifi.incentive.Msg#claimCdpMintingReward}.
             * @memberof ununifi.incentive.Msg
             * @typedef ClaimCdpMintingRewardCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.incentive.MsgClaimCdpMintingRewardResponse} [response] MsgClaimCdpMintingRewardResponse
             */

            /**
             * Calls ClaimCdpMintingReward.
             * @function claimCdpMintingReward
             * @memberof ununifi.incentive.Msg
             * @instance
             * @param {ununifi.incentive.IMsgClaimCdpMintingReward} request MsgClaimCdpMintingReward message or plain object
             * @param {ununifi.incentive.Msg.ClaimCdpMintingRewardCallback} callback Node-style callback called with the error, if any, and MsgClaimCdpMintingRewardResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.claimCdpMintingReward = function claimCdpMintingReward(request, callback) {
                return this.rpcCall(claimCdpMintingReward, $root.ununifi.incentive.MsgClaimCdpMintingReward, $root.ununifi.incentive.MsgClaimCdpMintingRewardResponse, request, callback);
            }, "name", { value: "ClaimCdpMintingReward" });

            /**
             * Calls ClaimCdpMintingReward.
             * @function claimCdpMintingReward
             * @memberof ununifi.incentive.Msg
             * @instance
             * @param {ununifi.incentive.IMsgClaimCdpMintingReward} request MsgClaimCdpMintingReward message or plain object
             * @returns {Promise<ununifi.incentive.MsgClaimCdpMintingRewardResponse>} Promise
             * @variation 2
             */

            return Msg;
        })();

        incentive.MsgClaimCdpMintingReward = (function() {

            /**
             * Properties of a MsgClaimCdpMintingReward.
             * @memberof ununifi.incentive
             * @interface IMsgClaimCdpMintingReward
             * @property {string|null} [sender] MsgClaimCdpMintingReward sender
             * @property {string|null} [multiplier_name] MsgClaimCdpMintingReward multiplier_name
             */

            /**
             * Constructs a new MsgClaimCdpMintingReward.
             * @memberof ununifi.incentive
             * @classdesc Represents a MsgClaimCdpMintingReward.
             * @implements IMsgClaimCdpMintingReward
             * @constructor
             * @param {ununifi.incentive.IMsgClaimCdpMintingReward=} [properties] Properties to set
             */
            function MsgClaimCdpMintingReward(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgClaimCdpMintingReward sender.
             * @member {string} sender
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @instance
             */
            MsgClaimCdpMintingReward.prototype.sender = "";

            /**
             * MsgClaimCdpMintingReward multiplier_name.
             * @member {string} multiplier_name
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @instance
             */
            MsgClaimCdpMintingReward.prototype.multiplier_name = "";

            /**
             * Encodes the specified MsgClaimCdpMintingReward message. Does not implicitly {@link ununifi.incentive.MsgClaimCdpMintingReward.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {ununifi.incentive.IMsgClaimCdpMintingReward} message MsgClaimCdpMintingReward message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgClaimCdpMintingReward.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                if (message.multiplier_name != null && Object.hasOwnProperty.call(message, "multiplier_name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.multiplier_name);
                return writer;
            };

            /**
             * Encodes the specified MsgClaimCdpMintingReward message, length delimited. Does not implicitly {@link ununifi.incentive.MsgClaimCdpMintingReward.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {ununifi.incentive.IMsgClaimCdpMintingReward} message MsgClaimCdpMintingReward message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgClaimCdpMintingReward.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgClaimCdpMintingReward message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.MsgClaimCdpMintingReward} MsgClaimCdpMintingReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgClaimCdpMintingReward.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.MsgClaimCdpMintingReward();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.sender = reader.string();
                        break;
                    case 2:
                        message.multiplier_name = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgClaimCdpMintingReward message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.MsgClaimCdpMintingReward} MsgClaimCdpMintingReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgClaimCdpMintingReward.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgClaimCdpMintingReward message.
             * @function verify
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgClaimCdpMintingReward.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.sender != null && message.hasOwnProperty("sender"))
                    if (!$util.isString(message.sender))
                        return "sender: string expected";
                if (message.multiplier_name != null && message.hasOwnProperty("multiplier_name"))
                    if (!$util.isString(message.multiplier_name))
                        return "multiplier_name: string expected";
                return null;
            };

            /**
             * Creates a MsgClaimCdpMintingReward message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.MsgClaimCdpMintingReward} MsgClaimCdpMintingReward
             */
            MsgClaimCdpMintingReward.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.MsgClaimCdpMintingReward)
                    return object;
                let message = new $root.ununifi.incentive.MsgClaimCdpMintingReward();
                if (object.sender != null)
                    message.sender = String(object.sender);
                if (object.multiplier_name != null)
                    message.multiplier_name = String(object.multiplier_name);
                return message;
            };

            /**
             * Creates a plain object from a MsgClaimCdpMintingReward message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @static
             * @param {ununifi.incentive.MsgClaimCdpMintingReward} message MsgClaimCdpMintingReward
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgClaimCdpMintingReward.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.sender = "";
                    object.multiplier_name = "";
                }
                if (message.sender != null && message.hasOwnProperty("sender"))
                    object.sender = message.sender;
                if (message.multiplier_name != null && message.hasOwnProperty("multiplier_name"))
                    object.multiplier_name = message.multiplier_name;
                return object;
            };

            /**
             * Converts this MsgClaimCdpMintingReward to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.MsgClaimCdpMintingReward
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgClaimCdpMintingReward.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgClaimCdpMintingReward;
        })();

        incentive.MsgClaimCdpMintingRewardResponse = (function() {

            /**
             * Properties of a MsgClaimCdpMintingRewardResponse.
             * @memberof ununifi.incentive
             * @interface IMsgClaimCdpMintingRewardResponse
             */

            /**
             * Constructs a new MsgClaimCdpMintingRewardResponse.
             * @memberof ununifi.incentive
             * @classdesc Represents a MsgClaimCdpMintingRewardResponse.
             * @implements IMsgClaimCdpMintingRewardResponse
             * @constructor
             * @param {ununifi.incentive.IMsgClaimCdpMintingRewardResponse=} [properties] Properties to set
             */
            function MsgClaimCdpMintingRewardResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgClaimCdpMintingRewardResponse message. Does not implicitly {@link ununifi.incentive.MsgClaimCdpMintingRewardResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {ununifi.incentive.IMsgClaimCdpMintingRewardResponse} message MsgClaimCdpMintingRewardResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgClaimCdpMintingRewardResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgClaimCdpMintingRewardResponse message, length delimited. Does not implicitly {@link ununifi.incentive.MsgClaimCdpMintingRewardResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {ununifi.incentive.IMsgClaimCdpMintingRewardResponse} message MsgClaimCdpMintingRewardResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgClaimCdpMintingRewardResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgClaimCdpMintingRewardResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.MsgClaimCdpMintingRewardResponse} MsgClaimCdpMintingRewardResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgClaimCdpMintingRewardResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.MsgClaimCdpMintingRewardResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgClaimCdpMintingRewardResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.MsgClaimCdpMintingRewardResponse} MsgClaimCdpMintingRewardResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgClaimCdpMintingRewardResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgClaimCdpMintingRewardResponse message.
             * @function verify
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgClaimCdpMintingRewardResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgClaimCdpMintingRewardResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.MsgClaimCdpMintingRewardResponse} MsgClaimCdpMintingRewardResponse
             */
            MsgClaimCdpMintingRewardResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.MsgClaimCdpMintingRewardResponse)
                    return object;
                return new $root.ununifi.incentive.MsgClaimCdpMintingRewardResponse();
            };

            /**
             * Creates a plain object from a MsgClaimCdpMintingRewardResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @static
             * @param {ununifi.incentive.MsgClaimCdpMintingRewardResponse} message MsgClaimCdpMintingRewardResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgClaimCdpMintingRewardResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgClaimCdpMintingRewardResponse to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.MsgClaimCdpMintingRewardResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgClaimCdpMintingRewardResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgClaimCdpMintingRewardResponse;
        })();

        incentive.GenesisState = (function() {

            /**
             * Properties of a GenesisState.
             * @memberof ununifi.incentive
             * @interface IGenesisState
             * @property {ununifi.incentive.IParams|null} [params] GenesisState params
             * @property {Array.<ununifi.incentive.IGenesisAccumulationTime>|null} [cdp_accumulation_times] GenesisState cdp_accumulation_times
             * @property {Array.<ununifi.incentive.ICdpMintingClaim>|null} [cdp_minting_claims] GenesisState cdp_minting_claims
             * @property {ununifi.incentive.IGenesisDenoms|null} [denoms] GenesisState denoms
             */

            /**
             * Constructs a new GenesisState.
             * @memberof ununifi.incentive
             * @classdesc Represents a GenesisState.
             * @implements IGenesisState
             * @constructor
             * @param {ununifi.incentive.IGenesisState=} [properties] Properties to set
             */
            function GenesisState(properties) {
                this.cdp_accumulation_times = [];
                this.cdp_minting_claims = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisState params.
             * @member {ununifi.incentive.IParams|null|undefined} params
             * @memberof ununifi.incentive.GenesisState
             * @instance
             */
            GenesisState.prototype.params = null;

            /**
             * GenesisState cdp_accumulation_times.
             * @member {Array.<ununifi.incentive.IGenesisAccumulationTime>} cdp_accumulation_times
             * @memberof ununifi.incentive.GenesisState
             * @instance
             */
            GenesisState.prototype.cdp_accumulation_times = $util.emptyArray;

            /**
             * GenesisState cdp_minting_claims.
             * @member {Array.<ununifi.incentive.ICdpMintingClaim>} cdp_minting_claims
             * @memberof ununifi.incentive.GenesisState
             * @instance
             */
            GenesisState.prototype.cdp_minting_claims = $util.emptyArray;

            /**
             * GenesisState denoms.
             * @member {ununifi.incentive.IGenesisDenoms|null|undefined} denoms
             * @memberof ununifi.incentive.GenesisState
             * @instance
             */
            GenesisState.prototype.denoms = null;

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link ununifi.incentive.GenesisState.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {ununifi.incentive.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.incentive.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.cdp_accumulation_times != null && message.cdp_accumulation_times.length)
                    for (let i = 0; i < message.cdp_accumulation_times.length; ++i)
                        $root.ununifi.incentive.GenesisAccumulationTime.encode(message.cdp_accumulation_times[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.cdp_minting_claims != null && message.cdp_minting_claims.length)
                    for (let i = 0; i < message.cdp_minting_claims.length; ++i)
                        $root.ununifi.incentive.CdpMintingClaim.encode(message.cdp_minting_claims[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.denoms != null && Object.hasOwnProperty.call(message, "denoms"))
                    $root.ununifi.incentive.GenesisDenoms.encode(message.denoms, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ununifi.incentive.GenesisState.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {ununifi.incentive.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.GenesisState();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.incentive.Params.decode(reader, reader.uint32());
                        break;
                    case 2:
                        if (!(message.cdp_accumulation_times && message.cdp_accumulation_times.length))
                            message.cdp_accumulation_times = [];
                        message.cdp_accumulation_times.push($root.ununifi.incentive.GenesisAccumulationTime.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        if (!(message.cdp_minting_claims && message.cdp_minting_claims.length))
                            message.cdp_minting_claims = [];
                        message.cdp_minting_claims.push($root.ununifi.incentive.CdpMintingClaim.decode(reader, reader.uint32()));
                        break;
                    case 4:
                        message.denoms = $root.ununifi.incentive.GenesisDenoms.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisState message.
             * @function verify
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisState.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.incentive.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                if (message.cdp_accumulation_times != null && message.hasOwnProperty("cdp_accumulation_times")) {
                    if (!Array.isArray(message.cdp_accumulation_times))
                        return "cdp_accumulation_times: array expected";
                    for (let i = 0; i < message.cdp_accumulation_times.length; ++i) {
                        let error = $root.ununifi.incentive.GenesisAccumulationTime.verify(message.cdp_accumulation_times[i]);
                        if (error)
                            return "cdp_accumulation_times." + error;
                    }
                }
                if (message.cdp_minting_claims != null && message.hasOwnProperty("cdp_minting_claims")) {
                    if (!Array.isArray(message.cdp_minting_claims))
                        return "cdp_minting_claims: array expected";
                    for (let i = 0; i < message.cdp_minting_claims.length; ++i) {
                        let error = $root.ununifi.incentive.CdpMintingClaim.verify(message.cdp_minting_claims[i]);
                        if (error)
                            return "cdp_minting_claims." + error;
                    }
                }
                if (message.denoms != null && message.hasOwnProperty("denoms")) {
                    let error = $root.ununifi.incentive.GenesisDenoms.verify(message.denoms);
                    if (error)
                        return "denoms." + error;
                }
                return null;
            };

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.GenesisState} GenesisState
             */
            GenesisState.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.GenesisState)
                    return object;
                let message = new $root.ununifi.incentive.GenesisState();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.incentive.GenesisState.params: object expected");
                    message.params = $root.ununifi.incentive.Params.fromObject(object.params);
                }
                if (object.cdp_accumulation_times) {
                    if (!Array.isArray(object.cdp_accumulation_times))
                        throw TypeError(".ununifi.incentive.GenesisState.cdp_accumulation_times: array expected");
                    message.cdp_accumulation_times = [];
                    for (let i = 0; i < object.cdp_accumulation_times.length; ++i) {
                        if (typeof object.cdp_accumulation_times[i] !== "object")
                            throw TypeError(".ununifi.incentive.GenesisState.cdp_accumulation_times: object expected");
                        message.cdp_accumulation_times[i] = $root.ununifi.incentive.GenesisAccumulationTime.fromObject(object.cdp_accumulation_times[i]);
                    }
                }
                if (object.cdp_minting_claims) {
                    if (!Array.isArray(object.cdp_minting_claims))
                        throw TypeError(".ununifi.incentive.GenesisState.cdp_minting_claims: array expected");
                    message.cdp_minting_claims = [];
                    for (let i = 0; i < object.cdp_minting_claims.length; ++i) {
                        if (typeof object.cdp_minting_claims[i] !== "object")
                            throw TypeError(".ununifi.incentive.GenesisState.cdp_minting_claims: object expected");
                        message.cdp_minting_claims[i] = $root.ununifi.incentive.CdpMintingClaim.fromObject(object.cdp_minting_claims[i]);
                    }
                }
                if (object.denoms != null) {
                    if (typeof object.denoms !== "object")
                        throw TypeError(".ununifi.incentive.GenesisState.denoms: object expected");
                    message.denoms = $root.ununifi.incentive.GenesisDenoms.fromObject(object.denoms);
                }
                return message;
            };

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.GenesisState
             * @static
             * @param {ununifi.incentive.GenesisState} message GenesisState
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisState.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.cdp_accumulation_times = [];
                    object.cdp_minting_claims = [];
                }
                if (options.defaults) {
                    object.params = null;
                    object.denoms = null;
                }
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.incentive.Params.toObject(message.params, options);
                if (message.cdp_accumulation_times && message.cdp_accumulation_times.length) {
                    object.cdp_accumulation_times = [];
                    for (let j = 0; j < message.cdp_accumulation_times.length; ++j)
                        object.cdp_accumulation_times[j] = $root.ununifi.incentive.GenesisAccumulationTime.toObject(message.cdp_accumulation_times[j], options);
                }
                if (message.cdp_minting_claims && message.cdp_minting_claims.length) {
                    object.cdp_minting_claims = [];
                    for (let j = 0; j < message.cdp_minting_claims.length; ++j)
                        object.cdp_minting_claims[j] = $root.ununifi.incentive.CdpMintingClaim.toObject(message.cdp_minting_claims[j], options);
                }
                if (message.denoms != null && message.hasOwnProperty("denoms"))
                    object.denoms = $root.ununifi.incentive.GenesisDenoms.toObject(message.denoms, options);
                return object;
            };

            /**
             * Converts this GenesisState to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.GenesisState
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisState.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisState;
        })();

        incentive.GenesisAccumulationTime = (function() {

            /**
             * Properties of a GenesisAccumulationTime.
             * @memberof ununifi.incentive
             * @interface IGenesisAccumulationTime
             * @property {string|null} [collateral_type] GenesisAccumulationTime collateral_type
             * @property {google.protobuf.ITimestamp|null} [previous_accumulation_time] GenesisAccumulationTime previous_accumulation_time
             */

            /**
             * Constructs a new GenesisAccumulationTime.
             * @memberof ununifi.incentive
             * @classdesc Represents a GenesisAccumulationTime.
             * @implements IGenesisAccumulationTime
             * @constructor
             * @param {ununifi.incentive.IGenesisAccumulationTime=} [properties] Properties to set
             */
            function GenesisAccumulationTime(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisAccumulationTime collateral_type.
             * @member {string} collateral_type
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @instance
             */
            GenesisAccumulationTime.prototype.collateral_type = "";

            /**
             * GenesisAccumulationTime previous_accumulation_time.
             * @member {google.protobuf.ITimestamp|null|undefined} previous_accumulation_time
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @instance
             */
            GenesisAccumulationTime.prototype.previous_accumulation_time = null;

            /**
             * Encodes the specified GenesisAccumulationTime message. Does not implicitly {@link ununifi.incentive.GenesisAccumulationTime.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {ununifi.incentive.IGenesisAccumulationTime} message GenesisAccumulationTime message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisAccumulationTime.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.collateral_type != null && Object.hasOwnProperty.call(message, "collateral_type"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.collateral_type);
                if (message.previous_accumulation_time != null && Object.hasOwnProperty.call(message, "previous_accumulation_time"))
                    $root.google.protobuf.Timestamp.encode(message.previous_accumulation_time, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GenesisAccumulationTime message, length delimited. Does not implicitly {@link ununifi.incentive.GenesisAccumulationTime.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {ununifi.incentive.IGenesisAccumulationTime} message GenesisAccumulationTime message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisAccumulationTime.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisAccumulationTime message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.GenesisAccumulationTime} GenesisAccumulationTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisAccumulationTime.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.GenesisAccumulationTime();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.collateral_type = reader.string();
                        break;
                    case 2:
                        message.previous_accumulation_time = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisAccumulationTime message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.GenesisAccumulationTime} GenesisAccumulationTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisAccumulationTime.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisAccumulationTime message.
             * @function verify
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisAccumulationTime.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    if (!$util.isString(message.collateral_type))
                        return "collateral_type: string expected";
                if (message.previous_accumulation_time != null && message.hasOwnProperty("previous_accumulation_time")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.previous_accumulation_time);
                    if (error)
                        return "previous_accumulation_time." + error;
                }
                return null;
            };

            /**
             * Creates a GenesisAccumulationTime message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.GenesisAccumulationTime} GenesisAccumulationTime
             */
            GenesisAccumulationTime.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.GenesisAccumulationTime)
                    return object;
                let message = new $root.ununifi.incentive.GenesisAccumulationTime();
                if (object.collateral_type != null)
                    message.collateral_type = String(object.collateral_type);
                if (object.previous_accumulation_time != null) {
                    if (typeof object.previous_accumulation_time !== "object")
                        throw TypeError(".ununifi.incentive.GenesisAccumulationTime.previous_accumulation_time: object expected");
                    message.previous_accumulation_time = $root.google.protobuf.Timestamp.fromObject(object.previous_accumulation_time);
                }
                return message;
            };

            /**
             * Creates a plain object from a GenesisAccumulationTime message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @static
             * @param {ununifi.incentive.GenesisAccumulationTime} message GenesisAccumulationTime
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisAccumulationTime.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.collateral_type = "";
                    object.previous_accumulation_time = null;
                }
                if (message.collateral_type != null && message.hasOwnProperty("collateral_type"))
                    object.collateral_type = message.collateral_type;
                if (message.previous_accumulation_time != null && message.hasOwnProperty("previous_accumulation_time"))
                    object.previous_accumulation_time = $root.google.protobuf.Timestamp.toObject(message.previous_accumulation_time, options);
                return object;
            };

            /**
             * Converts this GenesisAccumulationTime to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.GenesisAccumulationTime
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisAccumulationTime.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisAccumulationTime;
        })();

        incentive.GenesisDenoms = (function() {

            /**
             * Properties of a GenesisDenoms.
             * @memberof ununifi.incentive
             * @interface IGenesisDenoms
             * @property {string|null} [principal_denom] GenesisDenoms principal_denom
             * @property {string|null} [cdp_minting_reward_denom] GenesisDenoms cdp_minting_reward_denom
             */

            /**
             * Constructs a new GenesisDenoms.
             * @memberof ununifi.incentive
             * @classdesc Represents a GenesisDenoms.
             * @implements IGenesisDenoms
             * @constructor
             * @param {ununifi.incentive.IGenesisDenoms=} [properties] Properties to set
             */
            function GenesisDenoms(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisDenoms principal_denom.
             * @member {string} principal_denom
             * @memberof ununifi.incentive.GenesisDenoms
             * @instance
             */
            GenesisDenoms.prototype.principal_denom = "";

            /**
             * GenesisDenoms cdp_minting_reward_denom.
             * @member {string} cdp_minting_reward_denom
             * @memberof ununifi.incentive.GenesisDenoms
             * @instance
             */
            GenesisDenoms.prototype.cdp_minting_reward_denom = "";

            /**
             * Encodes the specified GenesisDenoms message. Does not implicitly {@link ununifi.incentive.GenesisDenoms.verify|verify} messages.
             * @function encode
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {ununifi.incentive.IGenesisDenoms} message GenesisDenoms message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisDenoms.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.principal_denom != null && Object.hasOwnProperty.call(message, "principal_denom"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.principal_denom);
                if (message.cdp_minting_reward_denom != null && Object.hasOwnProperty.call(message, "cdp_minting_reward_denom"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.cdp_minting_reward_denom);
                return writer;
            };

            /**
             * Encodes the specified GenesisDenoms message, length delimited. Does not implicitly {@link ununifi.incentive.GenesisDenoms.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {ununifi.incentive.IGenesisDenoms} message GenesisDenoms message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisDenoms.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisDenoms message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.incentive.GenesisDenoms} GenesisDenoms
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisDenoms.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.incentive.GenesisDenoms();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.principal_denom = reader.string();
                        break;
                    case 2:
                        message.cdp_minting_reward_denom = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisDenoms message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.incentive.GenesisDenoms} GenesisDenoms
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisDenoms.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisDenoms message.
             * @function verify
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisDenoms.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.principal_denom != null && message.hasOwnProperty("principal_denom"))
                    if (!$util.isString(message.principal_denom))
                        return "principal_denom: string expected";
                if (message.cdp_minting_reward_denom != null && message.hasOwnProperty("cdp_minting_reward_denom"))
                    if (!$util.isString(message.cdp_minting_reward_denom))
                        return "cdp_minting_reward_denom: string expected";
                return null;
            };

            /**
             * Creates a GenesisDenoms message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.incentive.GenesisDenoms} GenesisDenoms
             */
            GenesisDenoms.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.incentive.GenesisDenoms)
                    return object;
                let message = new $root.ununifi.incentive.GenesisDenoms();
                if (object.principal_denom != null)
                    message.principal_denom = String(object.principal_denom);
                if (object.cdp_minting_reward_denom != null)
                    message.cdp_minting_reward_denom = String(object.cdp_minting_reward_denom);
                return message;
            };

            /**
             * Creates a plain object from a GenesisDenoms message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.incentive.GenesisDenoms
             * @static
             * @param {ununifi.incentive.GenesisDenoms} message GenesisDenoms
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisDenoms.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.principal_denom = "";
                    object.cdp_minting_reward_denom = "";
                }
                if (message.principal_denom != null && message.hasOwnProperty("principal_denom"))
                    object.principal_denom = message.principal_denom;
                if (message.cdp_minting_reward_denom != null && message.hasOwnProperty("cdp_minting_reward_denom"))
                    object.cdp_minting_reward_denom = message.cdp_minting_reward_denom;
                return object;
            };

            /**
             * Converts this GenesisDenoms to JSON.
             * @function toJSON
             * @memberof ununifi.incentive.GenesisDenoms
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisDenoms.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisDenoms;
        })();

        return incentive;
    })();

    ununifi.pricefeed = (function() {

        /**
         * Namespace pricefeed.
         * @memberof ununifi
         * @namespace
         */
        const pricefeed = {};

        pricefeed.Query = (function() {

            /**
             * Constructs a new Query service.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a Query
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Query(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;

            /**
             * Callback as used by {@link ununifi.pricefeed.Query#params}.
             * @memberof ununifi.pricefeed.Query
             * @typedef ParamsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.QueryParamsResponse} [response] QueryParamsResponse
             */

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @param {ununifi.pricefeed.Query.ParamsCallback} callback Node-style callback called with the error, if any, and QueryParamsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.params = function params(request, callback) {
                return this.rpcCall(params, $root.ununifi.pricefeed.QueryParamsRequest, $root.ununifi.pricefeed.QueryParamsResponse, request, callback);
            }, "name", { value: "Params" });

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @returns {Promise<ununifi.pricefeed.QueryParamsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.pricefeed.Query#marketAll}.
             * @memberof ununifi.pricefeed.Query
             * @typedef MarketAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.QueryAllMarketResponse} [response] QueryAllMarketResponse
             */

            /**
             * Calls MarketAll.
             * @function marketAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllMarketRequest} request QueryAllMarketRequest message or plain object
             * @param {ununifi.pricefeed.Query.MarketAllCallback} callback Node-style callback called with the error, if any, and QueryAllMarketResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.marketAll = function marketAll(request, callback) {
                return this.rpcCall(marketAll, $root.ununifi.pricefeed.QueryAllMarketRequest, $root.ununifi.pricefeed.QueryAllMarketResponse, request, callback);
            }, "name", { value: "MarketAll" });

            /**
             * Calls MarketAll.
             * @function marketAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllMarketRequest} request QueryAllMarketRequest message or plain object
             * @returns {Promise<ununifi.pricefeed.QueryAllMarketResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.pricefeed.Query#oracleAll}.
             * @memberof ununifi.pricefeed.Query
             * @typedef OracleAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.QueryAllOracleResponse} [response] QueryAllOracleResponse
             */

            /**
             * Calls OracleAll.
             * @function oracleAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllOracleRequest} request QueryAllOracleRequest message or plain object
             * @param {ununifi.pricefeed.Query.OracleAllCallback} callback Node-style callback called with the error, if any, and QueryAllOracleResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.oracleAll = function oracleAll(request, callback) {
                return this.rpcCall(oracleAll, $root.ununifi.pricefeed.QueryAllOracleRequest, $root.ununifi.pricefeed.QueryAllOracleResponse, request, callback);
            }, "name", { value: "OracleAll" });

            /**
             * Calls OracleAll.
             * @function oracleAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllOracleRequest} request QueryAllOracleRequest message or plain object
             * @returns {Promise<ununifi.pricefeed.QueryAllOracleResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.pricefeed.Query#price}.
             * @memberof ununifi.pricefeed.Query
             * @typedef PriceCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.QueryGetPriceResponse} [response] QueryGetPriceResponse
             */

            /**
             * Calls Price.
             * @function price
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryGetPriceRequest} request QueryGetPriceRequest message or plain object
             * @param {ununifi.pricefeed.Query.PriceCallback} callback Node-style callback called with the error, if any, and QueryGetPriceResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.price = function price(request, callback) {
                return this.rpcCall(price, $root.ununifi.pricefeed.QueryGetPriceRequest, $root.ununifi.pricefeed.QueryGetPriceResponse, request, callback);
            }, "name", { value: "Price" });

            /**
             * Calls Price.
             * @function price
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryGetPriceRequest} request QueryGetPriceRequest message or plain object
             * @returns {Promise<ununifi.pricefeed.QueryGetPriceResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.pricefeed.Query#priceAll}.
             * @memberof ununifi.pricefeed.Query
             * @typedef PriceAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.QueryAllPriceResponse} [response] QueryAllPriceResponse
             */

            /**
             * Calls PriceAll.
             * @function priceAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllPriceRequest} request QueryAllPriceRequest message or plain object
             * @param {ununifi.pricefeed.Query.PriceAllCallback} callback Node-style callback called with the error, if any, and QueryAllPriceResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.priceAll = function priceAll(request, callback) {
                return this.rpcCall(priceAll, $root.ununifi.pricefeed.QueryAllPriceRequest, $root.ununifi.pricefeed.QueryAllPriceResponse, request, callback);
            }, "name", { value: "PriceAll" });

            /**
             * Calls PriceAll.
             * @function priceAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllPriceRequest} request QueryAllPriceRequest message or plain object
             * @returns {Promise<ununifi.pricefeed.QueryAllPriceResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.pricefeed.Query#rawPriceAll}.
             * @memberof ununifi.pricefeed.Query
             * @typedef RawPriceAllCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.QueryAllRawPriceResponse} [response] QueryAllRawPriceResponse
             */

            /**
             * Calls RawPriceAll.
             * @function rawPriceAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllRawPriceRequest} request QueryAllRawPriceRequest message or plain object
             * @param {ununifi.pricefeed.Query.RawPriceAllCallback} callback Node-style callback called with the error, if any, and QueryAllRawPriceResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.rawPriceAll = function rawPriceAll(request, callback) {
                return this.rpcCall(rawPriceAll, $root.ununifi.pricefeed.QueryAllRawPriceRequest, $root.ununifi.pricefeed.QueryAllRawPriceResponse, request, callback);
            }, "name", { value: "RawPriceAll" });

            /**
             * Calls RawPriceAll.
             * @function rawPriceAll
             * @memberof ununifi.pricefeed.Query
             * @instance
             * @param {ununifi.pricefeed.IQueryAllRawPriceRequest} request QueryAllRawPriceRequest message or plain object
             * @returns {Promise<ununifi.pricefeed.QueryAllRawPriceResponse>} Promise
             * @variation 2
             */

            return Query;
        })();

        pricefeed.QueryParamsRequest = (function() {

            /**
             * Properties of a QueryParamsRequest.
             * @memberof ununifi.pricefeed
             * @interface IQueryParamsRequest
             */

            /**
             * Constructs a new QueryParamsRequest.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryParamsRequest.
             * @implements IQueryParamsRequest
             * @constructor
             * @param {ununifi.pricefeed.IQueryParamsRequest=} [properties] Properties to set
             */
            function QueryParamsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ununifi.pricefeed.QueryParamsRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {ununifi.pricefeed.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryParamsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {ununifi.pricefeed.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryParamsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsRequest message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryParamsRequest} QueryParamsRequest
             */
            QueryParamsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryParamsRequest)
                    return object;
                return new $root.ununifi.pricefeed.QueryParamsRequest();
            };

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @static
             * @param {ununifi.pricefeed.QueryParamsRequest} message QueryParamsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryParamsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsRequest;
        })();

        pricefeed.QueryParamsResponse = (function() {

            /**
             * Properties of a QueryParamsResponse.
             * @memberof ununifi.pricefeed
             * @interface IQueryParamsResponse
             * @property {ununifi.pricefeed.IParams|null} [params] QueryParamsResponse params
             */

            /**
             * Constructs a new QueryParamsResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryParamsResponse.
             * @implements IQueryParamsResponse
             * @constructor
             * @param {ununifi.pricefeed.IQueryParamsResponse=} [properties] Properties to set
             */
            function QueryParamsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryParamsResponse params.
             * @member {ununifi.pricefeed.IParams|null|undefined} params
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @instance
             */
            QueryParamsResponse.prototype.params = null;

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ununifi.pricefeed.QueryParamsResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {ununifi.pricefeed.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.pricefeed.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryParamsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {ununifi.pricefeed.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryParamsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.pricefeed.Params.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.pricefeed.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                return null;
            };

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryParamsResponse} QueryParamsResponse
             */
            QueryParamsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryParamsResponse)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryParamsResponse();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryParamsResponse.params: object expected");
                    message.params = $root.ununifi.pricefeed.Params.fromObject(object.params);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @static
             * @param {ununifi.pricefeed.QueryParamsResponse} message QueryParamsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.params = null;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.pricefeed.Params.toObject(message.params, options);
                return object;
            };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryParamsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsResponse;
        })();

        pricefeed.QueryAllMarketRequest = (function() {

            /**
             * Properties of a QueryAllMarketRequest.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllMarketRequest
             * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllMarketRequest pagination
             */

            /**
             * Constructs a new QueryAllMarketRequest.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllMarketRequest.
             * @implements IQueryAllMarketRequest
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllMarketRequest=} [properties] Properties to set
             */
            function QueryAllMarketRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllMarketRequest pagination.
             * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @instance
             */
            QueryAllMarketRequest.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllMarketRequest message. Does not implicitly {@link ununifi.pricefeed.QueryAllMarketRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllMarketRequest} message QueryAllMarketRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllMarketRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllMarketRequest message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllMarketRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllMarketRequest} message QueryAllMarketRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllMarketRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllMarketRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllMarketRequest} QueryAllMarketRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllMarketRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllMarketRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllMarketRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllMarketRequest} QueryAllMarketRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllMarketRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllMarketRequest message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllMarketRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllMarketRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllMarketRequest} QueryAllMarketRequest
             */
            QueryAllMarketRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllMarketRequest)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllMarketRequest();
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllMarketRequest.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllMarketRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @static
             * @param {ununifi.pricefeed.QueryAllMarketRequest} message QueryAllMarketRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllMarketRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.pagination = null;
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllMarketRequest to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllMarketRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllMarketRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllMarketRequest;
        })();

        pricefeed.QueryAllMarketResponse = (function() {

            /**
             * Properties of a QueryAllMarketResponse.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllMarketResponse
             * @property {Array.<ununifi.pricefeed.IMarket>|null} [markets] QueryAllMarketResponse markets
             * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllMarketResponse pagination
             */

            /**
             * Constructs a new QueryAllMarketResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllMarketResponse.
             * @implements IQueryAllMarketResponse
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllMarketResponse=} [properties] Properties to set
             */
            function QueryAllMarketResponse(properties) {
                this.markets = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllMarketResponse markets.
             * @member {Array.<ununifi.pricefeed.IMarket>} markets
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @instance
             */
            QueryAllMarketResponse.prototype.markets = $util.emptyArray;

            /**
             * QueryAllMarketResponse pagination.
             * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @instance
             */
            QueryAllMarketResponse.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllMarketResponse message. Does not implicitly {@link ununifi.pricefeed.QueryAllMarketResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllMarketResponse} message QueryAllMarketResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllMarketResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.markets != null && message.markets.length)
                    for (let i = 0; i < message.markets.length; ++i)
                        $root.ununifi.pricefeed.Market.encode(message.markets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllMarketResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllMarketResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllMarketResponse} message QueryAllMarketResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllMarketResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllMarketResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllMarketResponse} QueryAllMarketResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllMarketResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllMarketResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.markets && message.markets.length))
                            message.markets = [];
                        message.markets.push($root.ununifi.pricefeed.Market.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllMarketResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllMarketResponse} QueryAllMarketResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllMarketResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllMarketResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllMarketResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.markets != null && message.hasOwnProperty("markets")) {
                    if (!Array.isArray(message.markets))
                        return "markets: array expected";
                    for (let i = 0; i < message.markets.length; ++i) {
                        let error = $root.ununifi.pricefeed.Market.verify(message.markets[i]);
                        if (error)
                            return "markets." + error;
                    }
                }
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllMarketResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllMarketResponse} QueryAllMarketResponse
             */
            QueryAllMarketResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllMarketResponse)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllMarketResponse();
                if (object.markets) {
                    if (!Array.isArray(object.markets))
                        throw TypeError(".ununifi.pricefeed.QueryAllMarketResponse.markets: array expected");
                    message.markets = [];
                    for (let i = 0; i < object.markets.length; ++i) {
                        if (typeof object.markets[i] !== "object")
                            throw TypeError(".ununifi.pricefeed.QueryAllMarketResponse.markets: object expected");
                        message.markets[i] = $root.ununifi.pricefeed.Market.fromObject(object.markets[i]);
                    }
                }
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllMarketResponse.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllMarketResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @static
             * @param {ununifi.pricefeed.QueryAllMarketResponse} message QueryAllMarketResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllMarketResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.markets = [];
                if (options.defaults)
                    object.pagination = null;
                if (message.markets && message.markets.length) {
                    object.markets = [];
                    for (let j = 0; j < message.markets.length; ++j)
                        object.markets[j] = $root.ununifi.pricefeed.Market.toObject(message.markets[j], options);
                }
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllMarketResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllMarketResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllMarketResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllMarketResponse;
        })();

        pricefeed.QueryAllOracleRequest = (function() {

            /**
             * Properties of a QueryAllOracleRequest.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllOracleRequest
             * @property {string|null} [market_id] QueryAllOracleRequest market_id
             * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllOracleRequest pagination
             */

            /**
             * Constructs a new QueryAllOracleRequest.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllOracleRequest.
             * @implements IQueryAllOracleRequest
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllOracleRequest=} [properties] Properties to set
             */
            function QueryAllOracleRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllOracleRequest market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @instance
             */
            QueryAllOracleRequest.prototype.market_id = "";

            /**
             * QueryAllOracleRequest pagination.
             * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @instance
             */
            QueryAllOracleRequest.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllOracleRequest message. Does not implicitly {@link ununifi.pricefeed.QueryAllOracleRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllOracleRequest} message QueryAllOracleRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllOracleRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.market_id);
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllOracleRequest message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllOracleRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllOracleRequest} message QueryAllOracleRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllOracleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllOracleRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllOracleRequest} QueryAllOracleRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllOracleRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllOracleRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.market_id = reader.string();
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllOracleRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllOracleRequest} QueryAllOracleRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllOracleRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllOracleRequest message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllOracleRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllOracleRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllOracleRequest} QueryAllOracleRequest
             */
            QueryAllOracleRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllOracleRequest)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllOracleRequest();
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllOracleRequest.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllOracleRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @static
             * @param {ununifi.pricefeed.QueryAllOracleRequest} message QueryAllOracleRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllOracleRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.market_id = "";
                    object.pagination = null;
                }
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllOracleRequest to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllOracleRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllOracleRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllOracleRequest;
        })();

        pricefeed.QueryAllOracleResponse = (function() {

            /**
             * Properties of a QueryAllOracleResponse.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllOracleResponse
             * @property {Array.<string>|null} [oracles] QueryAllOracleResponse oracles
             * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllOracleResponse pagination
             */

            /**
             * Constructs a new QueryAllOracleResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllOracleResponse.
             * @implements IQueryAllOracleResponse
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllOracleResponse=} [properties] Properties to set
             */
            function QueryAllOracleResponse(properties) {
                this.oracles = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllOracleResponse oracles.
             * @member {Array.<string>} oracles
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @instance
             */
            QueryAllOracleResponse.prototype.oracles = $util.emptyArray;

            /**
             * QueryAllOracleResponse pagination.
             * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @instance
             */
            QueryAllOracleResponse.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllOracleResponse message. Does not implicitly {@link ununifi.pricefeed.QueryAllOracleResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllOracleResponse} message QueryAllOracleResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllOracleResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.oracles != null && message.oracles.length)
                    for (let i = 0; i < message.oracles.length; ++i)
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.oracles[i]);
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllOracleResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllOracleResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllOracleResponse} message QueryAllOracleResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllOracleResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllOracleResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllOracleResponse} QueryAllOracleResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllOracleResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllOracleResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.oracles && message.oracles.length))
                            message.oracles = [];
                        message.oracles.push(reader.string());
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllOracleResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllOracleResponse} QueryAllOracleResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllOracleResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllOracleResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllOracleResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.oracles != null && message.hasOwnProperty("oracles")) {
                    if (!Array.isArray(message.oracles))
                        return "oracles: array expected";
                    for (let i = 0; i < message.oracles.length; ++i)
                        if (!$util.isString(message.oracles[i]))
                            return "oracles: string[] expected";
                }
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllOracleResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllOracleResponse} QueryAllOracleResponse
             */
            QueryAllOracleResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllOracleResponse)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllOracleResponse();
                if (object.oracles) {
                    if (!Array.isArray(object.oracles))
                        throw TypeError(".ununifi.pricefeed.QueryAllOracleResponse.oracles: array expected");
                    message.oracles = [];
                    for (let i = 0; i < object.oracles.length; ++i)
                        message.oracles[i] = String(object.oracles[i]);
                }
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllOracleResponse.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllOracleResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @static
             * @param {ununifi.pricefeed.QueryAllOracleResponse} message QueryAllOracleResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllOracleResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.oracles = [];
                if (options.defaults)
                    object.pagination = null;
                if (message.oracles && message.oracles.length) {
                    object.oracles = [];
                    for (let j = 0; j < message.oracles.length; ++j)
                        object.oracles[j] = message.oracles[j];
                }
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllOracleResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllOracleResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllOracleResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllOracleResponse;
        })();

        pricefeed.QueryGetPriceRequest = (function() {

            /**
             * Properties of a QueryGetPriceRequest.
             * @memberof ununifi.pricefeed
             * @interface IQueryGetPriceRequest
             * @property {string|null} [market_id] QueryGetPriceRequest market_id
             */

            /**
             * Constructs a new QueryGetPriceRequest.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryGetPriceRequest.
             * @implements IQueryGetPriceRequest
             * @constructor
             * @param {ununifi.pricefeed.IQueryGetPriceRequest=} [properties] Properties to set
             */
            function QueryGetPriceRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetPriceRequest market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @instance
             */
            QueryGetPriceRequest.prototype.market_id = "";

            /**
             * Encodes the specified QueryGetPriceRequest message. Does not implicitly {@link ununifi.pricefeed.QueryGetPriceRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {ununifi.pricefeed.IQueryGetPriceRequest} message QueryGetPriceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetPriceRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.market_id);
                return writer;
            };

            /**
             * Encodes the specified QueryGetPriceRequest message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryGetPriceRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {ununifi.pricefeed.IQueryGetPriceRequest} message QueryGetPriceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetPriceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetPriceRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryGetPriceRequest} QueryGetPriceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetPriceRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryGetPriceRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.market_id = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetPriceRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryGetPriceRequest} QueryGetPriceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetPriceRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetPriceRequest message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetPriceRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                return null;
            };

            /**
             * Creates a QueryGetPriceRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryGetPriceRequest} QueryGetPriceRequest
             */
            QueryGetPriceRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryGetPriceRequest)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryGetPriceRequest();
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                return message;
            };

            /**
             * Creates a plain object from a QueryGetPriceRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @static
             * @param {ununifi.pricefeed.QueryGetPriceRequest} message QueryGetPriceRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetPriceRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.market_id = "";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                return object;
            };

            /**
             * Converts this QueryGetPriceRequest to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryGetPriceRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetPriceRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetPriceRequest;
        })();

        pricefeed.QueryGetPriceResponse = (function() {

            /**
             * Properties of a QueryGetPriceResponse.
             * @memberof ununifi.pricefeed
             * @interface IQueryGetPriceResponse
             * @property {ununifi.pricefeed.ICurrentPrice|null} [price] QueryGetPriceResponse price
             */

            /**
             * Constructs a new QueryGetPriceResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryGetPriceResponse.
             * @implements IQueryGetPriceResponse
             * @constructor
             * @param {ununifi.pricefeed.IQueryGetPriceResponse=} [properties] Properties to set
             */
            function QueryGetPriceResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetPriceResponse price.
             * @member {ununifi.pricefeed.ICurrentPrice|null|undefined} price
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @instance
             */
            QueryGetPriceResponse.prototype.price = null;

            /**
             * Encodes the specified QueryGetPriceResponse message. Does not implicitly {@link ununifi.pricefeed.QueryGetPriceResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {ununifi.pricefeed.IQueryGetPriceResponse} message QueryGetPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetPriceResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    $root.ununifi.pricefeed.CurrentPrice.encode(message.price, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryGetPriceResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryGetPriceResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {ununifi.pricefeed.IQueryGetPriceResponse} message QueryGetPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetPriceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetPriceResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryGetPriceResponse} QueryGetPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetPriceResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryGetPriceResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.price = $root.ununifi.pricefeed.CurrentPrice.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetPriceResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryGetPriceResponse} QueryGetPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetPriceResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetPriceResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetPriceResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.price != null && message.hasOwnProperty("price")) {
                    let error = $root.ununifi.pricefeed.CurrentPrice.verify(message.price);
                    if (error)
                        return "price." + error;
                }
                return null;
            };

            /**
             * Creates a QueryGetPriceResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryGetPriceResponse} QueryGetPriceResponse
             */
            QueryGetPriceResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryGetPriceResponse)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryGetPriceResponse();
                if (object.price != null) {
                    if (typeof object.price !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryGetPriceResponse.price: object expected");
                    message.price = $root.ununifi.pricefeed.CurrentPrice.fromObject(object.price);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryGetPriceResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @static
             * @param {ununifi.pricefeed.QueryGetPriceResponse} message QueryGetPriceResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetPriceResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.price = null;
                if (message.price != null && message.hasOwnProperty("price"))
                    object.price = $root.ununifi.pricefeed.CurrentPrice.toObject(message.price, options);
                return object;
            };

            /**
             * Converts this QueryGetPriceResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryGetPriceResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetPriceResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetPriceResponse;
        })();

        pricefeed.QueryAllPriceRequest = (function() {

            /**
             * Properties of a QueryAllPriceRequest.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllPriceRequest
             * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllPriceRequest pagination
             */

            /**
             * Constructs a new QueryAllPriceRequest.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllPriceRequest.
             * @implements IQueryAllPriceRequest
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllPriceRequest=} [properties] Properties to set
             */
            function QueryAllPriceRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllPriceRequest pagination.
             * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @instance
             */
            QueryAllPriceRequest.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllPriceRequest message. Does not implicitly {@link ununifi.pricefeed.QueryAllPriceRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllPriceRequest} message QueryAllPriceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllPriceRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllPriceRequest message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllPriceRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllPriceRequest} message QueryAllPriceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllPriceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllPriceRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllPriceRequest} QueryAllPriceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllPriceRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllPriceRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllPriceRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllPriceRequest} QueryAllPriceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllPriceRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllPriceRequest message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllPriceRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllPriceRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllPriceRequest} QueryAllPriceRequest
             */
            QueryAllPriceRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllPriceRequest)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllPriceRequest();
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllPriceRequest.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllPriceRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @static
             * @param {ununifi.pricefeed.QueryAllPriceRequest} message QueryAllPriceRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllPriceRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.pagination = null;
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllPriceRequest to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllPriceRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllPriceRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllPriceRequest;
        })();

        pricefeed.QueryAllPriceResponse = (function() {

            /**
             * Properties of a QueryAllPriceResponse.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllPriceResponse
             * @property {Array.<ununifi.pricefeed.ICurrentPrice>|null} [prices] QueryAllPriceResponse prices
             * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllPriceResponse pagination
             */

            /**
             * Constructs a new QueryAllPriceResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllPriceResponse.
             * @implements IQueryAllPriceResponse
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllPriceResponse=} [properties] Properties to set
             */
            function QueryAllPriceResponse(properties) {
                this.prices = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllPriceResponse prices.
             * @member {Array.<ununifi.pricefeed.ICurrentPrice>} prices
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @instance
             */
            QueryAllPriceResponse.prototype.prices = $util.emptyArray;

            /**
             * QueryAllPriceResponse pagination.
             * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @instance
             */
            QueryAllPriceResponse.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllPriceResponse message. Does not implicitly {@link ununifi.pricefeed.QueryAllPriceResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllPriceResponse} message QueryAllPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllPriceResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.prices != null && message.prices.length)
                    for (let i = 0; i < message.prices.length; ++i)
                        $root.ununifi.pricefeed.CurrentPrice.encode(message.prices[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllPriceResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllPriceResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllPriceResponse} message QueryAllPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllPriceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllPriceResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllPriceResponse} QueryAllPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllPriceResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllPriceResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.prices && message.prices.length))
                            message.prices = [];
                        message.prices.push($root.ununifi.pricefeed.CurrentPrice.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllPriceResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllPriceResponse} QueryAllPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllPriceResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllPriceResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllPriceResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.prices != null && message.hasOwnProperty("prices")) {
                    if (!Array.isArray(message.prices))
                        return "prices: array expected";
                    for (let i = 0; i < message.prices.length; ++i) {
                        let error = $root.ununifi.pricefeed.CurrentPrice.verify(message.prices[i]);
                        if (error)
                            return "prices." + error;
                    }
                }
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllPriceResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllPriceResponse} QueryAllPriceResponse
             */
            QueryAllPriceResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllPriceResponse)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllPriceResponse();
                if (object.prices) {
                    if (!Array.isArray(object.prices))
                        throw TypeError(".ununifi.pricefeed.QueryAllPriceResponse.prices: array expected");
                    message.prices = [];
                    for (let i = 0; i < object.prices.length; ++i) {
                        if (typeof object.prices[i] !== "object")
                            throw TypeError(".ununifi.pricefeed.QueryAllPriceResponse.prices: object expected");
                        message.prices[i] = $root.ununifi.pricefeed.CurrentPrice.fromObject(object.prices[i]);
                    }
                }
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllPriceResponse.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllPriceResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @static
             * @param {ununifi.pricefeed.QueryAllPriceResponse} message QueryAllPriceResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllPriceResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.prices = [];
                if (options.defaults)
                    object.pagination = null;
                if (message.prices && message.prices.length) {
                    object.prices = [];
                    for (let j = 0; j < message.prices.length; ++j)
                        object.prices[j] = $root.ununifi.pricefeed.CurrentPrice.toObject(message.prices[j], options);
                }
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllPriceResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllPriceResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllPriceResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllPriceResponse;
        })();

        pricefeed.QueryAllRawPriceRequest = (function() {

            /**
             * Properties of a QueryAllRawPriceRequest.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllRawPriceRequest
             * @property {string|null} [market_id] QueryAllRawPriceRequest market_id
             * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllRawPriceRequest pagination
             */

            /**
             * Constructs a new QueryAllRawPriceRequest.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllRawPriceRequest.
             * @implements IQueryAllRawPriceRequest
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllRawPriceRequest=} [properties] Properties to set
             */
            function QueryAllRawPriceRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllRawPriceRequest market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @instance
             */
            QueryAllRawPriceRequest.prototype.market_id = "";

            /**
             * QueryAllRawPriceRequest pagination.
             * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @instance
             */
            QueryAllRawPriceRequest.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllRawPriceRequest message. Does not implicitly {@link ununifi.pricefeed.QueryAllRawPriceRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllRawPriceRequest} message QueryAllRawPriceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllRawPriceRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.market_id);
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllRawPriceRequest message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllRawPriceRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {ununifi.pricefeed.IQueryAllRawPriceRequest} message QueryAllRawPriceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllRawPriceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllRawPriceRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllRawPriceRequest} QueryAllRawPriceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllRawPriceRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllRawPriceRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.market_id = reader.string();
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllRawPriceRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllRawPriceRequest} QueryAllRawPriceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllRawPriceRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllRawPriceRequest message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllRawPriceRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllRawPriceRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllRawPriceRequest} QueryAllRawPriceRequest
             */
            QueryAllRawPriceRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllRawPriceRequest)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllRawPriceRequest();
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllRawPriceRequest.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllRawPriceRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @static
             * @param {ununifi.pricefeed.QueryAllRawPriceRequest} message QueryAllRawPriceRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllRawPriceRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.market_id = "";
                    object.pagination = null;
                }
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllRawPriceRequest to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllRawPriceRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllRawPriceRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllRawPriceRequest;
        })();

        pricefeed.QueryAllRawPriceResponse = (function() {

            /**
             * Properties of a QueryAllRawPriceResponse.
             * @memberof ununifi.pricefeed
             * @interface IQueryAllRawPriceResponse
             * @property {Array.<ununifi.pricefeed.IPostedPrice>|null} [prices] QueryAllRawPriceResponse prices
             * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllRawPriceResponse pagination
             */

            /**
             * Constructs a new QueryAllRawPriceResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a QueryAllRawPriceResponse.
             * @implements IQueryAllRawPriceResponse
             * @constructor
             * @param {ununifi.pricefeed.IQueryAllRawPriceResponse=} [properties] Properties to set
             */
            function QueryAllRawPriceResponse(properties) {
                this.prices = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryAllRawPriceResponse prices.
             * @member {Array.<ununifi.pricefeed.IPostedPrice>} prices
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @instance
             */
            QueryAllRawPriceResponse.prototype.prices = $util.emptyArray;

            /**
             * QueryAllRawPriceResponse pagination.
             * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @instance
             */
            QueryAllRawPriceResponse.prototype.pagination = null;

            /**
             * Encodes the specified QueryAllRawPriceResponse message. Does not implicitly {@link ununifi.pricefeed.QueryAllRawPriceResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllRawPriceResponse} message QueryAllRawPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllRawPriceResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.prices != null && message.prices.length)
                    for (let i = 0; i < message.prices.length; ++i)
                        $root.ununifi.pricefeed.PostedPrice.encode(message.prices[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                    $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryAllRawPriceResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.QueryAllRawPriceResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {ununifi.pricefeed.IQueryAllRawPriceResponse} message QueryAllRawPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryAllRawPriceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryAllRawPriceResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.QueryAllRawPriceResponse} QueryAllRawPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllRawPriceResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.QueryAllRawPriceResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.prices && message.prices.length))
                            message.prices = [];
                        message.prices.push($root.ununifi.pricefeed.PostedPrice.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryAllRawPriceResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.QueryAllRawPriceResponse} QueryAllRawPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryAllRawPriceResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryAllRawPriceResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryAllRawPriceResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.prices != null && message.hasOwnProperty("prices")) {
                    if (!Array.isArray(message.prices))
                        return "prices: array expected";
                    for (let i = 0; i < message.prices.length; ++i) {
                        let error = $root.ununifi.pricefeed.PostedPrice.verify(message.prices[i]);
                        if (error)
                            return "prices." + error;
                    }
                }
                if (message.pagination != null && message.hasOwnProperty("pagination")) {
                    let error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                    if (error)
                        return "pagination." + error;
                }
                return null;
            };

            /**
             * Creates a QueryAllRawPriceResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.QueryAllRawPriceResponse} QueryAllRawPriceResponse
             */
            QueryAllRawPriceResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.QueryAllRawPriceResponse)
                    return object;
                let message = new $root.ununifi.pricefeed.QueryAllRawPriceResponse();
                if (object.prices) {
                    if (!Array.isArray(object.prices))
                        throw TypeError(".ununifi.pricefeed.QueryAllRawPriceResponse.prices: array expected");
                    message.prices = [];
                    for (let i = 0; i < object.prices.length; ++i) {
                        if (typeof object.prices[i] !== "object")
                            throw TypeError(".ununifi.pricefeed.QueryAllRawPriceResponse.prices: object expected");
                        message.prices[i] = $root.ununifi.pricefeed.PostedPrice.fromObject(object.prices[i]);
                    }
                }
                if (object.pagination != null) {
                    if (typeof object.pagination !== "object")
                        throw TypeError(".ununifi.pricefeed.QueryAllRawPriceResponse.pagination: object expected");
                    message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryAllRawPriceResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @static
             * @param {ununifi.pricefeed.QueryAllRawPriceResponse} message QueryAllRawPriceResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryAllRawPriceResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.prices = [];
                if (options.defaults)
                    object.pagination = null;
                if (message.prices && message.prices.length) {
                    object.prices = [];
                    for (let j = 0; j < message.prices.length; ++j)
                        object.prices[j] = $root.ununifi.pricefeed.PostedPrice.toObject(message.prices[j], options);
                }
                if (message.pagination != null && message.hasOwnProperty("pagination"))
                    object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                return object;
            };

            /**
             * Converts this QueryAllRawPriceResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.QueryAllRawPriceResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryAllRawPriceResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryAllRawPriceResponse;
        })();

        pricefeed.Market = (function() {

            /**
             * Properties of a Market.
             * @memberof ununifi.pricefeed
             * @interface IMarket
             * @property {string|null} [market_id] Market market_id
             * @property {string|null} [base_asset] Market base_asset
             * @property {string|null} [quote_asset] Market quote_asset
             * @property {Array.<string>|null} [oracles] Market oracles
             * @property {boolean|null} [active] Market active
             */

            /**
             * Constructs a new Market.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a Market.
             * @implements IMarket
             * @constructor
             * @param {ununifi.pricefeed.IMarket=} [properties] Properties to set
             */
            function Market(properties) {
                this.oracles = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Market market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.Market
             * @instance
             */
            Market.prototype.market_id = "";

            /**
             * Market base_asset.
             * @member {string} base_asset
             * @memberof ununifi.pricefeed.Market
             * @instance
             */
            Market.prototype.base_asset = "";

            /**
             * Market quote_asset.
             * @member {string} quote_asset
             * @memberof ununifi.pricefeed.Market
             * @instance
             */
            Market.prototype.quote_asset = "";

            /**
             * Market oracles.
             * @member {Array.<string>} oracles
             * @memberof ununifi.pricefeed.Market
             * @instance
             */
            Market.prototype.oracles = $util.emptyArray;

            /**
             * Market active.
             * @member {boolean} active
             * @memberof ununifi.pricefeed.Market
             * @instance
             */
            Market.prototype.active = false;

            /**
             * Encodes the specified Market message. Does not implicitly {@link ununifi.pricefeed.Market.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {ununifi.pricefeed.IMarket} message Market message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Market.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.market_id);
                if (message.base_asset != null && Object.hasOwnProperty.call(message, "base_asset"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.base_asset);
                if (message.quote_asset != null && Object.hasOwnProperty.call(message, "quote_asset"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.quote_asset);
                if (message.oracles != null && message.oracles.length)
                    for (let i = 0; i < message.oracles.length; ++i)
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.oracles[i]);
                if (message.active != null && Object.hasOwnProperty.call(message, "active"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.active);
                return writer;
            };

            /**
             * Encodes the specified Market message, length delimited. Does not implicitly {@link ununifi.pricefeed.Market.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {ununifi.pricefeed.IMarket} message Market message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Market.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Market message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.Market} Market
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Market.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.Market();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.market_id = reader.string();
                        break;
                    case 2:
                        message.base_asset = reader.string();
                        break;
                    case 3:
                        message.quote_asset = reader.string();
                        break;
                    case 4:
                        if (!(message.oracles && message.oracles.length))
                            message.oracles = [];
                        message.oracles.push(reader.string());
                        break;
                    case 5:
                        message.active = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Market message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.Market} Market
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Market.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Market message.
             * @function verify
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Market.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                if (message.base_asset != null && message.hasOwnProperty("base_asset"))
                    if (!$util.isString(message.base_asset))
                        return "base_asset: string expected";
                if (message.quote_asset != null && message.hasOwnProperty("quote_asset"))
                    if (!$util.isString(message.quote_asset))
                        return "quote_asset: string expected";
                if (message.oracles != null && message.hasOwnProperty("oracles")) {
                    if (!Array.isArray(message.oracles))
                        return "oracles: array expected";
                    for (let i = 0; i < message.oracles.length; ++i)
                        if (!$util.isString(message.oracles[i]))
                            return "oracles: string[] expected";
                }
                if (message.active != null && message.hasOwnProperty("active"))
                    if (typeof message.active !== "boolean")
                        return "active: boolean expected";
                return null;
            };

            /**
             * Creates a Market message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.Market} Market
             */
            Market.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.Market)
                    return object;
                let message = new $root.ununifi.pricefeed.Market();
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                if (object.base_asset != null)
                    message.base_asset = String(object.base_asset);
                if (object.quote_asset != null)
                    message.quote_asset = String(object.quote_asset);
                if (object.oracles) {
                    if (!Array.isArray(object.oracles))
                        throw TypeError(".ununifi.pricefeed.Market.oracles: array expected");
                    message.oracles = [];
                    for (let i = 0; i < object.oracles.length; ++i)
                        message.oracles[i] = String(object.oracles[i]);
                }
                if (object.active != null)
                    message.active = Boolean(object.active);
                return message;
            };

            /**
             * Creates a plain object from a Market message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.Market
             * @static
             * @param {ununifi.pricefeed.Market} message Market
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Market.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.oracles = [];
                if (options.defaults) {
                    object.market_id = "";
                    object.base_asset = "";
                    object.quote_asset = "";
                    object.active = false;
                }
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                if (message.base_asset != null && message.hasOwnProperty("base_asset"))
                    object.base_asset = message.base_asset;
                if (message.quote_asset != null && message.hasOwnProperty("quote_asset"))
                    object.quote_asset = message.quote_asset;
                if (message.oracles && message.oracles.length) {
                    object.oracles = [];
                    for (let j = 0; j < message.oracles.length; ++j)
                        object.oracles[j] = message.oracles[j];
                }
                if (message.active != null && message.hasOwnProperty("active"))
                    object.active = message.active;
                return object;
            };

            /**
             * Converts this Market to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.Market
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Market.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Market;
        })();

        pricefeed.CurrentPrice = (function() {

            /**
             * Properties of a CurrentPrice.
             * @memberof ununifi.pricefeed
             * @interface ICurrentPrice
             * @property {string|null} [market_id] CurrentPrice market_id
             * @property {string|null} [price] CurrentPrice price
             */

            /**
             * Constructs a new CurrentPrice.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a CurrentPrice.
             * @implements ICurrentPrice
             * @constructor
             * @param {ununifi.pricefeed.ICurrentPrice=} [properties] Properties to set
             */
            function CurrentPrice(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CurrentPrice market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.CurrentPrice
             * @instance
             */
            CurrentPrice.prototype.market_id = "";

            /**
             * CurrentPrice price.
             * @member {string} price
             * @memberof ununifi.pricefeed.CurrentPrice
             * @instance
             */
            CurrentPrice.prototype.price = "";

            /**
             * Encodes the specified CurrentPrice message. Does not implicitly {@link ununifi.pricefeed.CurrentPrice.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {ununifi.pricefeed.ICurrentPrice} message CurrentPrice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CurrentPrice.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.market_id);
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.price);
                return writer;
            };

            /**
             * Encodes the specified CurrentPrice message, length delimited. Does not implicitly {@link ununifi.pricefeed.CurrentPrice.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {ununifi.pricefeed.ICurrentPrice} message CurrentPrice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CurrentPrice.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CurrentPrice message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.CurrentPrice} CurrentPrice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CurrentPrice.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.CurrentPrice();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.market_id = reader.string();
                        break;
                    case 2:
                        message.price = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a CurrentPrice message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.CurrentPrice} CurrentPrice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CurrentPrice.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CurrentPrice message.
             * @function verify
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CurrentPrice.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                if (message.price != null && message.hasOwnProperty("price"))
                    if (!$util.isString(message.price))
                        return "price: string expected";
                return null;
            };

            /**
             * Creates a CurrentPrice message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.CurrentPrice} CurrentPrice
             */
            CurrentPrice.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.CurrentPrice)
                    return object;
                let message = new $root.ununifi.pricefeed.CurrentPrice();
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                if (object.price != null)
                    message.price = String(object.price);
                return message;
            };

            /**
             * Creates a plain object from a CurrentPrice message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.CurrentPrice
             * @static
             * @param {ununifi.pricefeed.CurrentPrice} message CurrentPrice
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CurrentPrice.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.market_id = "";
                    object.price = "";
                }
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                if (message.price != null && message.hasOwnProperty("price"))
                    object.price = message.price;
                return object;
            };

            /**
             * Converts this CurrentPrice to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.CurrentPrice
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CurrentPrice.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return CurrentPrice;
        })();

        pricefeed.PostedPrice = (function() {

            /**
             * Properties of a PostedPrice.
             * @memberof ununifi.pricefeed
             * @interface IPostedPrice
             * @property {string|null} [market_id] PostedPrice market_id
             * @property {string|null} [oracle_address] PostedPrice oracle_address
             * @property {string|null} [price] PostedPrice price
             * @property {google.protobuf.ITimestamp|null} [expiry] PostedPrice expiry
             */

            /**
             * Constructs a new PostedPrice.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a PostedPrice.
             * @implements IPostedPrice
             * @constructor
             * @param {ununifi.pricefeed.IPostedPrice=} [properties] Properties to set
             */
            function PostedPrice(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * PostedPrice market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.PostedPrice
             * @instance
             */
            PostedPrice.prototype.market_id = "";

            /**
             * PostedPrice oracle_address.
             * @member {string} oracle_address
             * @memberof ununifi.pricefeed.PostedPrice
             * @instance
             */
            PostedPrice.prototype.oracle_address = "";

            /**
             * PostedPrice price.
             * @member {string} price
             * @memberof ununifi.pricefeed.PostedPrice
             * @instance
             */
            PostedPrice.prototype.price = "";

            /**
             * PostedPrice expiry.
             * @member {google.protobuf.ITimestamp|null|undefined} expiry
             * @memberof ununifi.pricefeed.PostedPrice
             * @instance
             */
            PostedPrice.prototype.expiry = null;

            /**
             * Encodes the specified PostedPrice message. Does not implicitly {@link ununifi.pricefeed.PostedPrice.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {ununifi.pricefeed.IPostedPrice} message PostedPrice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PostedPrice.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.market_id);
                if (message.oracle_address != null && Object.hasOwnProperty.call(message, "oracle_address"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.oracle_address);
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.price);
                if (message.expiry != null && Object.hasOwnProperty.call(message, "expiry"))
                    $root.google.protobuf.Timestamp.encode(message.expiry, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified PostedPrice message, length delimited. Does not implicitly {@link ununifi.pricefeed.PostedPrice.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {ununifi.pricefeed.IPostedPrice} message PostedPrice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PostedPrice.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a PostedPrice message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.PostedPrice} PostedPrice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PostedPrice.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.PostedPrice();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.market_id = reader.string();
                        break;
                    case 2:
                        message.oracle_address = reader.string();
                        break;
                    case 3:
                        message.price = reader.string();
                        break;
                    case 4:
                        message.expiry = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a PostedPrice message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.PostedPrice} PostedPrice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PostedPrice.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a PostedPrice message.
             * @function verify
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PostedPrice.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                if (message.oracle_address != null && message.hasOwnProperty("oracle_address"))
                    if (!$util.isString(message.oracle_address))
                        return "oracle_address: string expected";
                if (message.price != null && message.hasOwnProperty("price"))
                    if (!$util.isString(message.price))
                        return "price: string expected";
                if (message.expiry != null && message.hasOwnProperty("expiry")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.expiry);
                    if (error)
                        return "expiry." + error;
                }
                return null;
            };

            /**
             * Creates a PostedPrice message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.PostedPrice} PostedPrice
             */
            PostedPrice.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.PostedPrice)
                    return object;
                let message = new $root.ununifi.pricefeed.PostedPrice();
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                if (object.oracle_address != null)
                    message.oracle_address = String(object.oracle_address);
                if (object.price != null)
                    message.price = String(object.price);
                if (object.expiry != null) {
                    if (typeof object.expiry !== "object")
                        throw TypeError(".ununifi.pricefeed.PostedPrice.expiry: object expected");
                    message.expiry = $root.google.protobuf.Timestamp.fromObject(object.expiry);
                }
                return message;
            };

            /**
             * Creates a plain object from a PostedPrice message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.PostedPrice
             * @static
             * @param {ununifi.pricefeed.PostedPrice} message PostedPrice
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PostedPrice.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.market_id = "";
                    object.oracle_address = "";
                    object.price = "";
                    object.expiry = null;
                }
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                if (message.oracle_address != null && message.hasOwnProperty("oracle_address"))
                    object.oracle_address = message.oracle_address;
                if (message.price != null && message.hasOwnProperty("price"))
                    object.price = message.price;
                if (message.expiry != null && message.hasOwnProperty("expiry"))
                    object.expiry = $root.google.protobuf.Timestamp.toObject(message.expiry, options);
                return object;
            };

            /**
             * Converts this PostedPrice to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.PostedPrice
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PostedPrice.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return PostedPrice;
        })();

        pricefeed.Params = (function() {

            /**
             * Properties of a Params.
             * @memberof ununifi.pricefeed
             * @interface IParams
             * @property {Array.<ununifi.pricefeed.IMarket>|null} [markets] Params markets
             */

            /**
             * Constructs a new Params.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a Params.
             * @implements IParams
             * @constructor
             * @param {ununifi.pricefeed.IParams=} [properties] Properties to set
             */
            function Params(properties) {
                this.markets = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Params markets.
             * @member {Array.<ununifi.pricefeed.IMarket>} markets
             * @memberof ununifi.pricefeed.Params
             * @instance
             */
            Params.prototype.markets = $util.emptyArray;

            /**
             * Encodes the specified Params message. Does not implicitly {@link ununifi.pricefeed.Params.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {ununifi.pricefeed.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.markets != null && message.markets.length)
                    for (let i = 0; i < message.markets.length; ++i)
                        $root.ununifi.pricefeed.Market.encode(message.markets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link ununifi.pricefeed.Params.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {ununifi.pricefeed.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.Params();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.markets && message.markets.length))
                            message.markets = [];
                        message.markets.push($root.ununifi.pricefeed.Market.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Params message.
             * @function verify
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Params.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.markets != null && message.hasOwnProperty("markets")) {
                    if (!Array.isArray(message.markets))
                        return "markets: array expected";
                    for (let i = 0; i < message.markets.length; ++i) {
                        let error = $root.ununifi.pricefeed.Market.verify(message.markets[i]);
                        if (error)
                            return "markets." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.Params} Params
             */
            Params.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.Params)
                    return object;
                let message = new $root.ununifi.pricefeed.Params();
                if (object.markets) {
                    if (!Array.isArray(object.markets))
                        throw TypeError(".ununifi.pricefeed.Params.markets: array expected");
                    message.markets = [];
                    for (let i = 0; i < object.markets.length; ++i) {
                        if (typeof object.markets[i] !== "object")
                            throw TypeError(".ununifi.pricefeed.Params.markets: object expected");
                        message.markets[i] = $root.ununifi.pricefeed.Market.fromObject(object.markets[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.Params
             * @static
             * @param {ununifi.pricefeed.Params} message Params
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Params.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.markets = [];
                if (message.markets && message.markets.length) {
                    object.markets = [];
                    for (let j = 0; j < message.markets.length; ++j)
                        object.markets[j] = $root.ununifi.pricefeed.Market.toObject(message.markets[j], options);
                }
                return object;
            };

            /**
             * Converts this Params to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.Params
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Params.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Params;
        })();

        pricefeed.Msg = (function() {

            /**
             * Constructs a new Msg service.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a Msg
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Msg(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Msg.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Msg;

            /**
             * Callback as used by {@link ununifi.pricefeed.Msg#postPrice}.
             * @memberof ununifi.pricefeed.Msg
             * @typedef PostPriceCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.pricefeed.MsgPostPriceResponse} [response] MsgPostPriceResponse
             */

            /**
             * Calls PostPrice.
             * @function postPrice
             * @memberof ununifi.pricefeed.Msg
             * @instance
             * @param {ununifi.pricefeed.IMsgPostPrice} request MsgPostPrice message or plain object
             * @param {ununifi.pricefeed.Msg.PostPriceCallback} callback Node-style callback called with the error, if any, and MsgPostPriceResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Msg.prototype.postPrice = function postPrice(request, callback) {
                return this.rpcCall(postPrice, $root.ununifi.pricefeed.MsgPostPrice, $root.ununifi.pricefeed.MsgPostPriceResponse, request, callback);
            }, "name", { value: "PostPrice" });

            /**
             * Calls PostPrice.
             * @function postPrice
             * @memberof ununifi.pricefeed.Msg
             * @instance
             * @param {ununifi.pricefeed.IMsgPostPrice} request MsgPostPrice message or plain object
             * @returns {Promise<ununifi.pricefeed.MsgPostPriceResponse>} Promise
             * @variation 2
             */

            return Msg;
        })();

        pricefeed.MsgPostPrice = (function() {

            /**
             * Properties of a MsgPostPrice.
             * @memberof ununifi.pricefeed
             * @interface IMsgPostPrice
             * @property {string|null} [from] MsgPostPrice from
             * @property {string|null} [market_id] MsgPostPrice market_id
             * @property {string|null} [price] MsgPostPrice price
             * @property {google.protobuf.ITimestamp|null} [expiry] MsgPostPrice expiry
             */

            /**
             * Constructs a new MsgPostPrice.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a MsgPostPrice.
             * @implements IMsgPostPrice
             * @constructor
             * @param {ununifi.pricefeed.IMsgPostPrice=} [properties] Properties to set
             */
            function MsgPostPrice(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MsgPostPrice from.
             * @member {string} from
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @instance
             */
            MsgPostPrice.prototype.from = "";

            /**
             * MsgPostPrice market_id.
             * @member {string} market_id
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @instance
             */
            MsgPostPrice.prototype.market_id = "";

            /**
             * MsgPostPrice price.
             * @member {string} price
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @instance
             */
            MsgPostPrice.prototype.price = "";

            /**
             * MsgPostPrice expiry.
             * @member {google.protobuf.ITimestamp|null|undefined} expiry
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @instance
             */
            MsgPostPrice.prototype.expiry = null;

            /**
             * Encodes the specified MsgPostPrice message. Does not implicitly {@link ununifi.pricefeed.MsgPostPrice.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {ununifi.pricefeed.IMsgPostPrice} message MsgPostPrice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPostPrice.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.from != null && Object.hasOwnProperty.call(message, "from"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.from);
                if (message.market_id != null && Object.hasOwnProperty.call(message, "market_id"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.market_id);
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.price);
                if (message.expiry != null && Object.hasOwnProperty.call(message, "expiry"))
                    $root.google.protobuf.Timestamp.encode(message.expiry, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified MsgPostPrice message, length delimited. Does not implicitly {@link ununifi.pricefeed.MsgPostPrice.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {ununifi.pricefeed.IMsgPostPrice} message MsgPostPrice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPostPrice.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgPostPrice message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.MsgPostPrice} MsgPostPrice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPostPrice.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.MsgPostPrice();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.from = reader.string();
                        break;
                    case 2:
                        message.market_id = reader.string();
                        break;
                    case 3:
                        message.price = reader.string();
                        break;
                    case 4:
                        message.expiry = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgPostPrice message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.MsgPostPrice} MsgPostPrice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPostPrice.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgPostPrice message.
             * @function verify
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgPostPrice.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.from != null && message.hasOwnProperty("from"))
                    if (!$util.isString(message.from))
                        return "from: string expected";
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    if (!$util.isString(message.market_id))
                        return "market_id: string expected";
                if (message.price != null && message.hasOwnProperty("price"))
                    if (!$util.isString(message.price))
                        return "price: string expected";
                if (message.expiry != null && message.hasOwnProperty("expiry")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.expiry);
                    if (error)
                        return "expiry." + error;
                }
                return null;
            };

            /**
             * Creates a MsgPostPrice message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.MsgPostPrice} MsgPostPrice
             */
            MsgPostPrice.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.MsgPostPrice)
                    return object;
                let message = new $root.ununifi.pricefeed.MsgPostPrice();
                if (object.from != null)
                    message.from = String(object.from);
                if (object.market_id != null)
                    message.market_id = String(object.market_id);
                if (object.price != null)
                    message.price = String(object.price);
                if (object.expiry != null) {
                    if (typeof object.expiry !== "object")
                        throw TypeError(".ununifi.pricefeed.MsgPostPrice.expiry: object expected");
                    message.expiry = $root.google.protobuf.Timestamp.fromObject(object.expiry);
                }
                return message;
            };

            /**
             * Creates a plain object from a MsgPostPrice message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @static
             * @param {ununifi.pricefeed.MsgPostPrice} message MsgPostPrice
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgPostPrice.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.from = "";
                    object.market_id = "";
                    object.price = "";
                    object.expiry = null;
                }
                if (message.from != null && message.hasOwnProperty("from"))
                    object.from = message.from;
                if (message.market_id != null && message.hasOwnProperty("market_id"))
                    object.market_id = message.market_id;
                if (message.price != null && message.hasOwnProperty("price"))
                    object.price = message.price;
                if (message.expiry != null && message.hasOwnProperty("expiry"))
                    object.expiry = $root.google.protobuf.Timestamp.toObject(message.expiry, options);
                return object;
            };

            /**
             * Converts this MsgPostPrice to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.MsgPostPrice
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgPostPrice.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgPostPrice;
        })();

        pricefeed.MsgPostPriceResponse = (function() {

            /**
             * Properties of a MsgPostPriceResponse.
             * @memberof ununifi.pricefeed
             * @interface IMsgPostPriceResponse
             */

            /**
             * Constructs a new MsgPostPriceResponse.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a MsgPostPriceResponse.
             * @implements IMsgPostPriceResponse
             * @constructor
             * @param {ununifi.pricefeed.IMsgPostPriceResponse=} [properties] Properties to set
             */
            function MsgPostPriceResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified MsgPostPriceResponse message. Does not implicitly {@link ununifi.pricefeed.MsgPostPriceResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {ununifi.pricefeed.IMsgPostPriceResponse} message MsgPostPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPostPriceResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MsgPostPriceResponse message, length delimited. Does not implicitly {@link ununifi.pricefeed.MsgPostPriceResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {ununifi.pricefeed.IMsgPostPriceResponse} message MsgPostPriceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MsgPostPriceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MsgPostPriceResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.MsgPostPriceResponse} MsgPostPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPostPriceResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.MsgPostPriceResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MsgPostPriceResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.MsgPostPriceResponse} MsgPostPriceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MsgPostPriceResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MsgPostPriceResponse message.
             * @function verify
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MsgPostPriceResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MsgPostPriceResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.MsgPostPriceResponse} MsgPostPriceResponse
             */
            MsgPostPriceResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.MsgPostPriceResponse)
                    return object;
                return new $root.ununifi.pricefeed.MsgPostPriceResponse();
            };

            /**
             * Creates a plain object from a MsgPostPriceResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @static
             * @param {ununifi.pricefeed.MsgPostPriceResponse} message MsgPostPriceResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MsgPostPriceResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MsgPostPriceResponse to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.MsgPostPriceResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MsgPostPriceResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MsgPostPriceResponse;
        })();

        pricefeed.GenesisState = (function() {

            /**
             * Properties of a GenesisState.
             * @memberof ununifi.pricefeed
             * @interface IGenesisState
             * @property {ununifi.pricefeed.IParams|null} [params] GenesisState params
             * @property {Array.<ununifi.pricefeed.IPostedPrice>|null} [posted_prices] GenesisState posted_prices
             */

            /**
             * Constructs a new GenesisState.
             * @memberof ununifi.pricefeed
             * @classdesc Represents a GenesisState.
             * @implements IGenesisState
             * @constructor
             * @param {ununifi.pricefeed.IGenesisState=} [properties] Properties to set
             */
            function GenesisState(properties) {
                this.posted_prices = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisState params.
             * @member {ununifi.pricefeed.IParams|null|undefined} params
             * @memberof ununifi.pricefeed.GenesisState
             * @instance
             */
            GenesisState.prototype.params = null;

            /**
             * GenesisState posted_prices.
             * @member {Array.<ununifi.pricefeed.IPostedPrice>} posted_prices
             * @memberof ununifi.pricefeed.GenesisState
             * @instance
             */
            GenesisState.prototype.posted_prices = $util.emptyArray;

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link ununifi.pricefeed.GenesisState.verify|verify} messages.
             * @function encode
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {ununifi.pricefeed.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.pricefeed.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.posted_prices != null && message.posted_prices.length)
                    for (let i = 0; i < message.posted_prices.length; ++i)
                        $root.ununifi.pricefeed.PostedPrice.encode(message.posted_prices[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ununifi.pricefeed.GenesisState.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {ununifi.pricefeed.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.pricefeed.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.pricefeed.GenesisState();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.pricefeed.Params.decode(reader, reader.uint32());
                        break;
                    case 2:
                        if (!(message.posted_prices && message.posted_prices.length))
                            message.posted_prices = [];
                        message.posted_prices.push($root.ununifi.pricefeed.PostedPrice.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.pricefeed.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisState message.
             * @function verify
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisState.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.pricefeed.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                if (message.posted_prices != null && message.hasOwnProperty("posted_prices")) {
                    if (!Array.isArray(message.posted_prices))
                        return "posted_prices: array expected";
                    for (let i = 0; i < message.posted_prices.length; ++i) {
                        let error = $root.ununifi.pricefeed.PostedPrice.verify(message.posted_prices[i]);
                        if (error)
                            return "posted_prices." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.pricefeed.GenesisState} GenesisState
             */
            GenesisState.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.pricefeed.GenesisState)
                    return object;
                let message = new $root.ununifi.pricefeed.GenesisState();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.pricefeed.GenesisState.params: object expected");
                    message.params = $root.ununifi.pricefeed.Params.fromObject(object.params);
                }
                if (object.posted_prices) {
                    if (!Array.isArray(object.posted_prices))
                        throw TypeError(".ununifi.pricefeed.GenesisState.posted_prices: array expected");
                    message.posted_prices = [];
                    for (let i = 0; i < object.posted_prices.length; ++i) {
                        if (typeof object.posted_prices[i] !== "object")
                            throw TypeError(".ununifi.pricefeed.GenesisState.posted_prices: object expected");
                        message.posted_prices[i] = $root.ununifi.pricefeed.PostedPrice.fromObject(object.posted_prices[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.pricefeed.GenesisState
             * @static
             * @param {ununifi.pricefeed.GenesisState} message GenesisState
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisState.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.posted_prices = [];
                if (options.defaults)
                    object.params = null;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.pricefeed.Params.toObject(message.params, options);
                if (message.posted_prices && message.posted_prices.length) {
                    object.posted_prices = [];
                    for (let j = 0; j < message.posted_prices.length; ++j)
                        object.posted_prices[j] = $root.ununifi.pricefeed.PostedPrice.toObject(message.posted_prices[j], options);
                }
                return object;
            };

            /**
             * Converts this GenesisState to JSON.
             * @function toJSON
             * @memberof ununifi.pricefeed.GenesisState
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisState.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisState;
        })();

        return pricefeed;
    })();

    ununifi.ununifidist = (function() {

        /**
         * Namespace ununifidist.
         * @memberof ununifi
         * @namespace
         */
        const ununifidist = {};

        ununifidist.Query = (function() {

            /**
             * Constructs a new Query service.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a Query
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function Query(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;

            /**
             * Callback as used by {@link ununifi.ununifidist.Query#params}.
             * @memberof ununifi.ununifidist.Query
             * @typedef ParamsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.ununifidist.QueryParamsResponse} [response] QueryParamsResponse
             */

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.ununifidist.Query
             * @instance
             * @param {ununifi.ununifidist.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @param {ununifi.ununifidist.Query.ParamsCallback} callback Node-style callback called with the error, if any, and QueryParamsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.params = function params(request, callback) {
                return this.rpcCall(params, $root.ununifi.ununifidist.QueryParamsRequest, $root.ununifi.ununifidist.QueryParamsResponse, request, callback);
            }, "name", { value: "Params" });

            /**
             * Calls Params.
             * @function params
             * @memberof ununifi.ununifidist.Query
             * @instance
             * @param {ununifi.ununifidist.IQueryParamsRequest} request QueryParamsRequest message or plain object
             * @returns {Promise<ununifi.ununifidist.QueryParamsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link ununifi.ununifidist.Query#balances}.
             * @memberof ununifi.ununifidist.Query
             * @typedef BalancesCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {ununifi.ununifidist.QueryGetBalancesResponse} [response] QueryGetBalancesResponse
             */

            /**
             * Calls Balances.
             * @function balances
             * @memberof ununifi.ununifidist.Query
             * @instance
             * @param {ununifi.ununifidist.IQueryGetBalancesRequest} request QueryGetBalancesRequest message or plain object
             * @param {ununifi.ununifidist.Query.BalancesCallback} callback Node-style callback called with the error, if any, and QueryGetBalancesResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(Query.prototype.balances = function balances(request, callback) {
                return this.rpcCall(balances, $root.ununifi.ununifidist.QueryGetBalancesRequest, $root.ununifi.ununifidist.QueryGetBalancesResponse, request, callback);
            }, "name", { value: "Balances" });

            /**
             * Calls Balances.
             * @function balances
             * @memberof ununifi.ununifidist.Query
             * @instance
             * @param {ununifi.ununifidist.IQueryGetBalancesRequest} request QueryGetBalancesRequest message or plain object
             * @returns {Promise<ununifi.ununifidist.QueryGetBalancesResponse>} Promise
             * @variation 2
             */

            return Query;
        })();

        ununifidist.QueryParamsRequest = (function() {

            /**
             * Properties of a QueryParamsRequest.
             * @memberof ununifi.ununifidist
             * @interface IQueryParamsRequest
             */

            /**
             * Constructs a new QueryParamsRequest.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a QueryParamsRequest.
             * @implements IQueryParamsRequest
             * @constructor
             * @param {ununifi.ununifidist.IQueryParamsRequest=} [properties] Properties to set
             */
            function QueryParamsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryParamsRequest message. Does not implicitly {@link ununifi.ununifidist.QueryParamsRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {ununifi.ununifidist.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsRequest message, length delimited. Does not implicitly {@link ununifi.ununifidist.QueryParamsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {ununifi.ununifidist.IQueryParamsRequest} message QueryParamsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.QueryParamsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.QueryParamsRequest} QueryParamsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsRequest message.
             * @function verify
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryParamsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.QueryParamsRequest} QueryParamsRequest
             */
            QueryParamsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.QueryParamsRequest)
                    return object;
                return new $root.ununifi.ununifidist.QueryParamsRequest();
            };

            /**
             * Creates a plain object from a QueryParamsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @static
             * @param {ununifi.ununifidist.QueryParamsRequest} message QueryParamsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryParamsRequest to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.QueryParamsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsRequest;
        })();

        ununifidist.QueryParamsResponse = (function() {

            /**
             * Properties of a QueryParamsResponse.
             * @memberof ununifi.ununifidist
             * @interface IQueryParamsResponse
             * @property {ununifi.ununifidist.IParams|null} [params] QueryParamsResponse params
             */

            /**
             * Constructs a new QueryParamsResponse.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a QueryParamsResponse.
             * @implements IQueryParamsResponse
             * @constructor
             * @param {ununifi.ununifidist.IQueryParamsResponse=} [properties] Properties to set
             */
            function QueryParamsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryParamsResponse params.
             * @member {ununifi.ununifidist.IParams|null|undefined} params
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @instance
             */
            QueryParamsResponse.prototype.params = null;

            /**
             * Encodes the specified QueryParamsResponse message. Does not implicitly {@link ununifi.ununifidist.QueryParamsResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {ununifi.ununifidist.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.ununifidist.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryParamsResponse message, length delimited. Does not implicitly {@link ununifi.ununifidist.QueryParamsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {ununifi.ununifidist.IQueryParamsResponse} message QueryParamsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParamsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.QueryParamsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.ununifidist.Params.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryParamsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.QueryParamsResponse} QueryParamsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParamsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryParamsResponse message.
             * @function verify
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParamsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.ununifidist.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                return null;
            };

            /**
             * Creates a QueryParamsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.QueryParamsResponse} QueryParamsResponse
             */
            QueryParamsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.QueryParamsResponse)
                    return object;
                let message = new $root.ununifi.ununifidist.QueryParamsResponse();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.ununifidist.QueryParamsResponse.params: object expected");
                    message.params = $root.ununifi.ununifidist.Params.fromObject(object.params);
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryParamsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @static
             * @param {ununifi.ununifidist.QueryParamsResponse} message QueryParamsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParamsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.params = null;
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.ununifidist.Params.toObject(message.params, options);
                return object;
            };

            /**
             * Converts this QueryParamsResponse to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.QueryParamsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParamsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryParamsResponse;
        })();

        ununifidist.QueryGetBalancesRequest = (function() {

            /**
             * Properties of a QueryGetBalancesRequest.
             * @memberof ununifi.ununifidist
             * @interface IQueryGetBalancesRequest
             */

            /**
             * Constructs a new QueryGetBalancesRequest.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a QueryGetBalancesRequest.
             * @implements IQueryGetBalancesRequest
             * @constructor
             * @param {ununifi.ununifidist.IQueryGetBalancesRequest=} [properties] Properties to set
             */
            function QueryGetBalancesRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Encodes the specified QueryGetBalancesRequest message. Does not implicitly {@link ununifi.ununifidist.QueryGetBalancesRequest.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {ununifi.ununifidist.IQueryGetBalancesRequest} message QueryGetBalancesRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetBalancesRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified QueryGetBalancesRequest message, length delimited. Does not implicitly {@link ununifi.ununifidist.QueryGetBalancesRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {ununifi.ununifidist.IQueryGetBalancesRequest} message QueryGetBalancesRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetBalancesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetBalancesRequest message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.QueryGetBalancesRequest} QueryGetBalancesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetBalancesRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.QueryGetBalancesRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetBalancesRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.QueryGetBalancesRequest} QueryGetBalancesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetBalancesRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetBalancesRequest message.
             * @function verify
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetBalancesRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a QueryGetBalancesRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.QueryGetBalancesRequest} QueryGetBalancesRequest
             */
            QueryGetBalancesRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.QueryGetBalancesRequest)
                    return object;
                return new $root.ununifi.ununifidist.QueryGetBalancesRequest();
            };

            /**
             * Creates a plain object from a QueryGetBalancesRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @static
             * @param {ununifi.ununifidist.QueryGetBalancesRequest} message QueryGetBalancesRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetBalancesRequest.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this QueryGetBalancesRequest to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.QueryGetBalancesRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetBalancesRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetBalancesRequest;
        })();

        ununifidist.QueryGetBalancesResponse = (function() {

            /**
             * Properties of a QueryGetBalancesResponse.
             * @memberof ununifi.ununifidist
             * @interface IQueryGetBalancesResponse
             * @property {Array.<cosmos.base.v1beta1.ICoin>|null} [balances] QueryGetBalancesResponse balances
             */

            /**
             * Constructs a new QueryGetBalancesResponse.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a QueryGetBalancesResponse.
             * @implements IQueryGetBalancesResponse
             * @constructor
             * @param {ununifi.ununifidist.IQueryGetBalancesResponse=} [properties] Properties to set
             */
            function QueryGetBalancesResponse(properties) {
                this.balances = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * QueryGetBalancesResponse balances.
             * @member {Array.<cosmos.base.v1beta1.ICoin>} balances
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @instance
             */
            QueryGetBalancesResponse.prototype.balances = $util.emptyArray;

            /**
             * Encodes the specified QueryGetBalancesResponse message. Does not implicitly {@link ununifi.ununifidist.QueryGetBalancesResponse.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {ununifi.ununifidist.IQueryGetBalancesResponse} message QueryGetBalancesResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetBalancesResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.balances != null && message.balances.length)
                    for (let i = 0; i < message.balances.length; ++i)
                        $root.cosmos.base.v1beta1.Coin.encode(message.balances[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified QueryGetBalancesResponse message, length delimited. Does not implicitly {@link ununifi.ununifidist.QueryGetBalancesResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {ununifi.ununifidist.IQueryGetBalancesResponse} message QueryGetBalancesResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryGetBalancesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a QueryGetBalancesResponse message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.QueryGetBalancesResponse} QueryGetBalancesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetBalancesResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.QueryGetBalancesResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.balances && message.balances.length))
                            message.balances = [];
                        message.balances.push($root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a QueryGetBalancesResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.QueryGetBalancesResponse} QueryGetBalancesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryGetBalancesResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a QueryGetBalancesResponse message.
             * @function verify
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryGetBalancesResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.balances != null && message.hasOwnProperty("balances")) {
                    if (!Array.isArray(message.balances))
                        return "balances: array expected";
                    for (let i = 0; i < message.balances.length; ++i) {
                        let error = $root.cosmos.base.v1beta1.Coin.verify(message.balances[i]);
                        if (error)
                            return "balances." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a QueryGetBalancesResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.QueryGetBalancesResponse} QueryGetBalancesResponse
             */
            QueryGetBalancesResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.QueryGetBalancesResponse)
                    return object;
                let message = new $root.ununifi.ununifidist.QueryGetBalancesResponse();
                if (object.balances) {
                    if (!Array.isArray(object.balances))
                        throw TypeError(".ununifi.ununifidist.QueryGetBalancesResponse.balances: array expected");
                    message.balances = [];
                    for (let i = 0; i < object.balances.length; ++i) {
                        if (typeof object.balances[i] !== "object")
                            throw TypeError(".ununifi.ununifidist.QueryGetBalancesResponse.balances: object expected");
                        message.balances[i] = $root.cosmos.base.v1beta1.Coin.fromObject(object.balances[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a QueryGetBalancesResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @static
             * @param {ununifi.ununifidist.QueryGetBalancesResponse} message QueryGetBalancesResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryGetBalancesResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.balances = [];
                if (message.balances && message.balances.length) {
                    object.balances = [];
                    for (let j = 0; j < message.balances.length; ++j)
                        object.balances[j] = $root.cosmos.base.v1beta1.Coin.toObject(message.balances[j], options);
                }
                return object;
            };

            /**
             * Converts this QueryGetBalancesResponse to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.QueryGetBalancesResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryGetBalancesResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return QueryGetBalancesResponse;
        })();

        ununifidist.Params = (function() {

            /**
             * Properties of a Params.
             * @memberof ununifi.ununifidist
             * @interface IParams
             * @property {boolean|null} [active] Params active
             * @property {Array.<ununifi.ununifidist.IPeriod>|null} [periods] Params periods
             */

            /**
             * Constructs a new Params.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a Params.
             * @implements IParams
             * @constructor
             * @param {ununifi.ununifidist.IParams=} [properties] Properties to set
             */
            function Params(properties) {
                this.periods = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Params active.
             * @member {boolean} active
             * @memberof ununifi.ununifidist.Params
             * @instance
             */
            Params.prototype.active = false;

            /**
             * Params periods.
             * @member {Array.<ununifi.ununifidist.IPeriod>} periods
             * @memberof ununifi.ununifidist.Params
             * @instance
             */
            Params.prototype.periods = $util.emptyArray;

            /**
             * Encodes the specified Params message. Does not implicitly {@link ununifi.ununifidist.Params.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {ununifi.ununifidist.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.active != null && Object.hasOwnProperty.call(message, "active"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.active);
                if (message.periods != null && message.periods.length)
                    for (let i = 0; i < message.periods.length; ++i)
                        $root.ununifi.ununifidist.Period.encode(message.periods[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified Params message, length delimited. Does not implicitly {@link ununifi.ununifidist.Params.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {ununifi.ununifidist.IParams} message Params message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Params.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Params message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.Params();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.active = reader.bool();
                        break;
                    case 2:
                        if (!(message.periods && message.periods.length))
                            message.periods = [];
                        message.periods.push($root.ununifi.ununifidist.Period.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Params message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.Params} Params
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Params.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Params message.
             * @function verify
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Params.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.active != null && message.hasOwnProperty("active"))
                    if (typeof message.active !== "boolean")
                        return "active: boolean expected";
                if (message.periods != null && message.hasOwnProperty("periods")) {
                    if (!Array.isArray(message.periods))
                        return "periods: array expected";
                    for (let i = 0; i < message.periods.length; ++i) {
                        let error = $root.ununifi.ununifidist.Period.verify(message.periods[i]);
                        if (error)
                            return "periods." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a Params message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.Params} Params
             */
            Params.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.Params)
                    return object;
                let message = new $root.ununifi.ununifidist.Params();
                if (object.active != null)
                    message.active = Boolean(object.active);
                if (object.periods) {
                    if (!Array.isArray(object.periods))
                        throw TypeError(".ununifi.ununifidist.Params.periods: array expected");
                    message.periods = [];
                    for (let i = 0; i < object.periods.length; ++i) {
                        if (typeof object.periods[i] !== "object")
                            throw TypeError(".ununifi.ununifidist.Params.periods: object expected");
                        message.periods[i] = $root.ununifi.ununifidist.Period.fromObject(object.periods[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a Params message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.Params
             * @static
             * @param {ununifi.ununifidist.Params} message Params
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Params.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.periods = [];
                if (options.defaults)
                    object.active = false;
                if (message.active != null && message.hasOwnProperty("active"))
                    object.active = message.active;
                if (message.periods && message.periods.length) {
                    object.periods = [];
                    for (let j = 0; j < message.periods.length; ++j)
                        object.periods[j] = $root.ununifi.ununifidist.Period.toObject(message.periods[j], options);
                }
                return object;
            };

            /**
             * Converts this Params to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.Params
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Params.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Params;
        })();

        ununifidist.Period = (function() {

            /**
             * Properties of a Period.
             * @memberof ununifi.ununifidist
             * @interface IPeriod
             * @property {google.protobuf.ITimestamp|null} [start] Period start
             * @property {google.protobuf.ITimestamp|null} [end] Period end
             * @property {string|null} [inflation] Period inflation
             */

            /**
             * Constructs a new Period.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a Period.
             * @implements IPeriod
             * @constructor
             * @param {ununifi.ununifidist.IPeriod=} [properties] Properties to set
             */
            function Period(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Period start.
             * @member {google.protobuf.ITimestamp|null|undefined} start
             * @memberof ununifi.ununifidist.Period
             * @instance
             */
            Period.prototype.start = null;

            /**
             * Period end.
             * @member {google.protobuf.ITimestamp|null|undefined} end
             * @memberof ununifi.ununifidist.Period
             * @instance
             */
            Period.prototype.end = null;

            /**
             * Period inflation.
             * @member {string} inflation
             * @memberof ununifi.ununifidist.Period
             * @instance
             */
            Period.prototype.inflation = "";

            /**
             * Encodes the specified Period message. Does not implicitly {@link ununifi.ununifidist.Period.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {ununifi.ununifidist.IPeriod} message Period message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Period.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                    $root.google.protobuf.Timestamp.encode(message.start, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                    $root.google.protobuf.Timestamp.encode(message.end, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.inflation != null && Object.hasOwnProperty.call(message, "inflation"))
                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.inflation);
                return writer;
            };

            /**
             * Encodes the specified Period message, length delimited. Does not implicitly {@link ununifi.ununifidist.Period.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {ununifi.ununifidist.IPeriod} message Period message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Period.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Period message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.Period} Period
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Period.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.Period();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.start = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 2:
                        message.end = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 11:
                        message.inflation = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Period message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.Period} Period
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Period.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Period message.
             * @function verify
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Period.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.start != null && message.hasOwnProperty("start")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.start);
                    if (error)
                        return "start." + error;
                }
                if (message.end != null && message.hasOwnProperty("end")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.end);
                    if (error)
                        return "end." + error;
                }
                if (message.inflation != null && message.hasOwnProperty("inflation"))
                    if (!$util.isString(message.inflation))
                        return "inflation: string expected";
                return null;
            };

            /**
             * Creates a Period message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.Period} Period
             */
            Period.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.Period)
                    return object;
                let message = new $root.ununifi.ununifidist.Period();
                if (object.start != null) {
                    if (typeof object.start !== "object")
                        throw TypeError(".ununifi.ununifidist.Period.start: object expected");
                    message.start = $root.google.protobuf.Timestamp.fromObject(object.start);
                }
                if (object.end != null) {
                    if (typeof object.end !== "object")
                        throw TypeError(".ununifi.ununifidist.Period.end: object expected");
                    message.end = $root.google.protobuf.Timestamp.fromObject(object.end);
                }
                if (object.inflation != null)
                    message.inflation = String(object.inflation);
                return message;
            };

            /**
             * Creates a plain object from a Period message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.Period
             * @static
             * @param {ununifi.ununifidist.Period} message Period
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Period.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.start = null;
                    object.end = null;
                    object.inflation = "";
                }
                if (message.start != null && message.hasOwnProperty("start"))
                    object.start = $root.google.protobuf.Timestamp.toObject(message.start, options);
                if (message.end != null && message.hasOwnProperty("end"))
                    object.end = $root.google.protobuf.Timestamp.toObject(message.end, options);
                if (message.inflation != null && message.hasOwnProperty("inflation"))
                    object.inflation = message.inflation;
                return object;
            };

            /**
             * Converts this Period to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.Period
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Period.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Period;
        })();

        ununifidist.GenesisState = (function() {

            /**
             * Properties of a GenesisState.
             * @memberof ununifi.ununifidist
             * @interface IGenesisState
             * @property {ununifi.ununifidist.IParams|null} [params] GenesisState params
             * @property {google.protobuf.ITimestamp|null} [previous_block_time] GenesisState previous_block_time
             * @property {string|null} [gov_denom] GenesisState gov_denom
             */

            /**
             * Constructs a new GenesisState.
             * @memberof ununifi.ununifidist
             * @classdesc Represents a GenesisState.
             * @implements IGenesisState
             * @constructor
             * @param {ununifi.ununifidist.IGenesisState=} [properties] Properties to set
             */
            function GenesisState(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GenesisState params.
             * @member {ununifi.ununifidist.IParams|null|undefined} params
             * @memberof ununifi.ununifidist.GenesisState
             * @instance
             */
            GenesisState.prototype.params = null;

            /**
             * GenesisState previous_block_time.
             * @member {google.protobuf.ITimestamp|null|undefined} previous_block_time
             * @memberof ununifi.ununifidist.GenesisState
             * @instance
             */
            GenesisState.prototype.previous_block_time = null;

            /**
             * GenesisState gov_denom.
             * @member {string} gov_denom
             * @memberof ununifi.ununifidist.GenesisState
             * @instance
             */
            GenesisState.prototype.gov_denom = "";

            /**
             * Encodes the specified GenesisState message. Does not implicitly {@link ununifi.ununifidist.GenesisState.verify|verify} messages.
             * @function encode
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {ununifi.ununifidist.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                    $root.ununifi.ununifidist.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.previous_block_time != null && Object.hasOwnProperty.call(message, "previous_block_time"))
                    $root.google.protobuf.Timestamp.encode(message.previous_block_time, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.gov_denom != null && Object.hasOwnProperty.call(message, "gov_denom"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.gov_denom);
                return writer;
            };

            /**
             * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link ununifi.ununifidist.GenesisState.verify|verify} messages.
             * @function encodeDelimited
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {ununifi.ununifidist.IGenesisState} message GenesisState message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GenesisState.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer.
             * @function decode
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {ununifi.ununifidist.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.ununifi.ununifidist.GenesisState();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.params = $root.ununifi.ununifidist.Params.decode(reader, reader.uint32());
                        break;
                    case 2:
                        message.previous_block_time = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                        break;
                    case 3:
                        message.gov_denom = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GenesisState message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {ununifi.ununifidist.GenesisState} GenesisState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GenesisState.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GenesisState message.
             * @function verify
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GenesisState.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.params != null && message.hasOwnProperty("params")) {
                    let error = $root.ununifi.ununifidist.Params.verify(message.params);
                    if (error)
                        return "params." + error;
                }
                if (message.previous_block_time != null && message.hasOwnProperty("previous_block_time")) {
                    let error = $root.google.protobuf.Timestamp.verify(message.previous_block_time);
                    if (error)
                        return "previous_block_time." + error;
                }
                if (message.gov_denom != null && message.hasOwnProperty("gov_denom"))
                    if (!$util.isString(message.gov_denom))
                        return "gov_denom: string expected";
                return null;
            };

            /**
             * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {ununifi.ununifidist.GenesisState} GenesisState
             */
            GenesisState.fromObject = function fromObject(object) {
                if (object instanceof $root.ununifi.ununifidist.GenesisState)
                    return object;
                let message = new $root.ununifi.ununifidist.GenesisState();
                if (object.params != null) {
                    if (typeof object.params !== "object")
                        throw TypeError(".ununifi.ununifidist.GenesisState.params: object expected");
                    message.params = $root.ununifi.ununifidist.Params.fromObject(object.params);
                }
                if (object.previous_block_time != null) {
                    if (typeof object.previous_block_time !== "object")
                        throw TypeError(".ununifi.ununifidist.GenesisState.previous_block_time: object expected");
                    message.previous_block_time = $root.google.protobuf.Timestamp.fromObject(object.previous_block_time);
                }
                if (object.gov_denom != null)
                    message.gov_denom = String(object.gov_denom);
                return message;
            };

            /**
             * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
             * @function toObject
             * @memberof ununifi.ununifidist.GenesisState
             * @static
             * @param {ununifi.ununifidist.GenesisState} message GenesisState
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GenesisState.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.params = null;
                    object.previous_block_time = null;
                    object.gov_denom = "";
                }
                if (message.params != null && message.hasOwnProperty("params"))
                    object.params = $root.ununifi.ununifidist.Params.toObject(message.params, options);
                if (message.previous_block_time != null && message.hasOwnProperty("previous_block_time"))
                    object.previous_block_time = $root.google.protobuf.Timestamp.toObject(message.previous_block_time, options);
                if (message.gov_denom != null && message.hasOwnProperty("gov_denom"))
                    object.gov_denom = message.gov_denom;
                return object;
            };

            /**
             * Converts this GenesisState to JSON.
             * @function toJSON
             * @memberof ununifi.ununifidist.GenesisState
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GenesisState.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return GenesisState;
        })();

        return ununifidist;
    })();

    return ununifi;
})();

export const cosmos = $root.cosmos = (() => {

    /**
     * Namespace cosmos.
     * @exports cosmos
     * @namespace
     */
    const cosmos = {};

    cosmos.base = (function() {

        /**
         * Namespace base.
         * @memberof cosmos
         * @namespace
         */
        const base = {};

        base.query = (function() {

            /**
             * Namespace query.
             * @memberof cosmos.base
             * @namespace
             */
            const query = {};

            query.v1beta1 = (function() {

                /**
                 * Namespace v1beta1.
                 * @memberof cosmos.base.query
                 * @namespace
                 */
                const v1beta1 = {};

                v1beta1.PageRequest = (function() {

                    /**
                     * Properties of a PageRequest.
                     * @memberof cosmos.base.query.v1beta1
                     * @interface IPageRequest
                     * @property {Uint8Array|null} [key] PageRequest key
                     * @property {Long|null} [offset] PageRequest offset
                     * @property {Long|null} [limit] PageRequest limit
                     * @property {boolean|null} [count_total] PageRequest count_total
                     */

                    /**
                     * Constructs a new PageRequest.
                     * @memberof cosmos.base.query.v1beta1
                     * @classdesc Represents a PageRequest.
                     * @implements IPageRequest
                     * @constructor
                     * @param {cosmos.base.query.v1beta1.IPageRequest=} [properties] Properties to set
                     */
                    function PageRequest(properties) {
                        if (properties)
                            for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * PageRequest key.
                     * @member {Uint8Array} key
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @instance
                     */
                    PageRequest.prototype.key = $util.newBuffer([]);

                    /**
                     * PageRequest offset.
                     * @member {Long} offset
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @instance
                     */
                    PageRequest.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

                    /**
                     * PageRequest limit.
                     * @member {Long} limit
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @instance
                     */
                    PageRequest.prototype.limit = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

                    /**
                     * PageRequest count_total.
                     * @member {boolean} count_total
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @instance
                     */
                    PageRequest.prototype.count_total = false;

                    /**
                     * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {cosmos.base.query.v1beta1.IPageRequest} message PageRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PageRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);
                        if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.offset);
                        if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                            writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.limit);
                        if (message.count_total != null && Object.hasOwnProperty.call(message, "count_total"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.count_total);
                        return writer;
                    };

                    /**
                     * Encodes the specified PageRequest message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {cosmos.base.query.v1beta1.IPageRequest} message PageRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmos.base.query.v1beta1.PageRequest} PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PageRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        let end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.query.v1beta1.PageRequest();
                        while (reader.pos < end) {
                            let tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.key = reader.bytes();
                                break;
                            case 2:
                                message.offset = reader.uint64();
                                break;
                            case 3:
                                message.limit = reader.uint64();
                                break;
                            case 4:
                                message.count_total = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a PageRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmos.base.query.v1beta1.PageRequest} PageRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PageRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a PageRequest message.
                     * @function verify
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PageRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.key != null && message.hasOwnProperty("key"))
                            if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
                                return "key: buffer expected";
                        if (message.offset != null && message.hasOwnProperty("offset"))
                            if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                return "offset: integer|Long expected";
                        if (message.limit != null && message.hasOwnProperty("limit"))
                            if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                return "limit: integer|Long expected";
                        if (message.count_total != null && message.hasOwnProperty("count_total"))
                            if (typeof message.count_total !== "boolean")
                                return "count_total: boolean expected";
                        return null;
                    };

                    /**
                     * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmos.base.query.v1beta1.PageRequest} PageRequest
                     */
                    PageRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmos.base.query.v1beta1.PageRequest)
                            return object;
                        let message = new $root.cosmos.base.query.v1beta1.PageRequest();
                        if (object.key != null)
                            if (typeof object.key === "string")
                                $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
                            else if (object.key.length)
                                message.key = object.key;
                        if (object.offset != null)
                            if ($util.Long)
                                (message.offset = $util.Long.fromValue(object.offset)).unsigned = true;
                            else if (typeof object.offset === "string")
                                message.offset = parseInt(object.offset, 10);
                            else if (typeof object.offset === "number")
                                message.offset = object.offset;
                            else if (typeof object.offset === "object")
                                message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber(true);
                        if (object.limit != null)
                            if ($util.Long)
                                (message.limit = $util.Long.fromValue(object.limit)).unsigned = true;
                            else if (typeof object.limit === "string")
                                message.limit = parseInt(object.limit, 10);
                            else if (typeof object.limit === "number")
                                message.limit = object.limit;
                            else if (typeof object.limit === "object")
                                message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber(true);
                        if (object.count_total != null)
                            message.count_total = Boolean(object.count_total);
                        return message;
                    };

                    /**
                     * Creates a plain object from a PageRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @static
                     * @param {cosmos.base.query.v1beta1.PageRequest} message PageRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PageRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        let object = {};
                        if (options.defaults) {
                            if (options.bytes === String)
                                object.key = "";
                            else {
                                object.key = [];
                                if (options.bytes !== Array)
                                    object.key = $util.newBuffer(object.key);
                            }
                            if ($util.Long) {
                                let long = new $util.Long(0, 0, true);
                                object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.offset = options.longs === String ? "0" : 0;
                            if ($util.Long) {
                                let long = new $util.Long(0, 0, true);
                                object.limit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.limit = options.longs === String ? "0" : 0;
                            object.count_total = false;
                        }
                        if (message.key != null && message.hasOwnProperty("key"))
                            object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
                        if (message.offset != null && message.hasOwnProperty("offset"))
                            if (typeof message.offset === "number")
                                object.offset = options.longs === String ? String(message.offset) : message.offset;
                            else
                                object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber(true) : message.offset;
                        if (message.limit != null && message.hasOwnProperty("limit"))
                            if (typeof message.limit === "number")
                                object.limit = options.longs === String ? String(message.limit) : message.limit;
                            else
                                object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber(true) : message.limit;
                        if (message.count_total != null && message.hasOwnProperty("count_total"))
                            object.count_total = message.count_total;
                        return object;
                    };

                    /**
                     * Converts this PageRequest to JSON.
                     * @function toJSON
                     * @memberof cosmos.base.query.v1beta1.PageRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PageRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return PageRequest;
                })();

                v1beta1.PageResponse = (function() {

                    /**
                     * Properties of a PageResponse.
                     * @memberof cosmos.base.query.v1beta1
                     * @interface IPageResponse
                     * @property {Uint8Array|null} [next_key] PageResponse next_key
                     * @property {Long|null} [total] PageResponse total
                     */

                    /**
                     * Constructs a new PageResponse.
                     * @memberof cosmos.base.query.v1beta1
                     * @classdesc Represents a PageResponse.
                     * @implements IPageResponse
                     * @constructor
                     * @param {cosmos.base.query.v1beta1.IPageResponse=} [properties] Properties to set
                     */
                    function PageResponse(properties) {
                        if (properties)
                            for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * PageResponse next_key.
                     * @member {Uint8Array} next_key
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @instance
                     */
                    PageResponse.prototype.next_key = $util.newBuffer([]);

                    /**
                     * PageResponse total.
                     * @member {Long} total
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @instance
                     */
                    PageResponse.prototype.total = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

                    /**
                     * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {cosmos.base.query.v1beta1.IPageResponse} message PageResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PageResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.next_key != null && Object.hasOwnProperty.call(message, "next_key"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.next_key);
                        if (message.total != null && Object.hasOwnProperty.call(message, "total"))
                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.total);
                        return writer;
                    };

                    /**
                     * Encodes the specified PageResponse message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {cosmos.base.query.v1beta1.IPageResponse} message PageResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PageResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmos.base.query.v1beta1.PageResponse} PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PageResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        let end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.query.v1beta1.PageResponse();
                        while (reader.pos < end) {
                            let tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.next_key = reader.bytes();
                                break;
                            case 2:
                                message.total = reader.uint64();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a PageResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmos.base.query.v1beta1.PageResponse} PageResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PageResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a PageResponse message.
                     * @function verify
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PageResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.next_key != null && message.hasOwnProperty("next_key"))
                            if (!(message.next_key && typeof message.next_key.length === "number" || $util.isString(message.next_key)))
                                return "next_key: buffer expected";
                        if (message.total != null && message.hasOwnProperty("total"))
                            if (!$util.isInteger(message.total) && !(message.total && $util.isInteger(message.total.low) && $util.isInteger(message.total.high)))
                                return "total: integer|Long expected";
                        return null;
                    };

                    /**
                     * Creates a PageResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmos.base.query.v1beta1.PageResponse} PageResponse
                     */
                    PageResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmos.base.query.v1beta1.PageResponse)
                            return object;
                        let message = new $root.cosmos.base.query.v1beta1.PageResponse();
                        if (object.next_key != null)
                            if (typeof object.next_key === "string")
                                $util.base64.decode(object.next_key, message.next_key = $util.newBuffer($util.base64.length(object.next_key)), 0);
                            else if (object.next_key.length)
                                message.next_key = object.next_key;
                        if (object.total != null)
                            if ($util.Long)
                                (message.total = $util.Long.fromValue(object.total)).unsigned = true;
                            else if (typeof object.total === "string")
                                message.total = parseInt(object.total, 10);
                            else if (typeof object.total === "number")
                                message.total = object.total;
                            else if (typeof object.total === "object")
                                message.total = new $util.LongBits(object.total.low >>> 0, object.total.high >>> 0).toNumber(true);
                        return message;
                    };

                    /**
                     * Creates a plain object from a PageResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @static
                     * @param {cosmos.base.query.v1beta1.PageResponse} message PageResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PageResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        let object = {};
                        if (options.defaults) {
                            if (options.bytes === String)
                                object.next_key = "";
                            else {
                                object.next_key = [];
                                if (options.bytes !== Array)
                                    object.next_key = $util.newBuffer(object.next_key);
                            }
                            if ($util.Long) {
                                let long = new $util.Long(0, 0, true);
                                object.total = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.total = options.longs === String ? "0" : 0;
                        }
                        if (message.next_key != null && message.hasOwnProperty("next_key"))
                            object.next_key = options.bytes === String ? $util.base64.encode(message.next_key, 0, message.next_key.length) : options.bytes === Array ? Array.prototype.slice.call(message.next_key) : message.next_key;
                        if (message.total != null && message.hasOwnProperty("total"))
                            if (typeof message.total === "number")
                                object.total = options.longs === String ? String(message.total) : message.total;
                            else
                                object.total = options.longs === String ? $util.Long.prototype.toString.call(message.total) : options.longs === Number ? new $util.LongBits(message.total.low >>> 0, message.total.high >>> 0).toNumber(true) : message.total;
                        return object;
                    };

                    /**
                     * Converts this PageResponse to JSON.
                     * @function toJSON
                     * @memberof cosmos.base.query.v1beta1.PageResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PageResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return PageResponse;
                })();

                return v1beta1;
            })();

            return query;
        })();

        base.v1beta1 = (function() {

            /**
             * Namespace v1beta1.
             * @memberof cosmos.base
             * @namespace
             */
            const v1beta1 = {};

            v1beta1.Coin = (function() {

                /**
                 * Properties of a Coin.
                 * @memberof cosmos.base.v1beta1
                 * @interface ICoin
                 * @property {string|null} [denom] Coin denom
                 * @property {string|null} [amount] Coin amount
                 */

                /**
                 * Constructs a new Coin.
                 * @memberof cosmos.base.v1beta1
                 * @classdesc Represents a Coin.
                 * @implements ICoin
                 * @constructor
                 * @param {cosmos.base.v1beta1.ICoin=} [properties] Properties to set
                 */
                function Coin(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Coin denom.
                 * @member {string} denom
                 * @memberof cosmos.base.v1beta1.Coin
                 * @instance
                 */
                Coin.prototype.denom = "";

                /**
                 * Coin amount.
                 * @member {string} amount
                 * @memberof cosmos.base.v1beta1.Coin
                 * @instance
                 */
                Coin.prototype.amount = "";

                /**
                 * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @function encode
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {cosmos.base.v1beta1.ICoin} message Coin message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Coin.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.denom != null && Object.hasOwnProperty.call(message, "denom"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.denom);
                    if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.amount);
                    return writer;
                };

                /**
                 * Encodes the specified Coin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {cosmos.base.v1beta1.ICoin} message Coin message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Coin.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Coin message from the specified reader or buffer.
                 * @function decode
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {cosmos.base.v1beta1.Coin} Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Coin.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.Coin();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.denom = reader.string();
                            break;
                        case 2:
                            message.amount = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Coin message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {cosmos.base.v1beta1.Coin} Coin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Coin.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Coin message.
                 * @function verify
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Coin.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.denom != null && message.hasOwnProperty("denom"))
                        if (!$util.isString(message.denom))
                            return "denom: string expected";
                    if (message.amount != null && message.hasOwnProperty("amount"))
                        if (!$util.isString(message.amount))
                            return "amount: string expected";
                    return null;
                };

                /**
                 * Creates a Coin message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {cosmos.base.v1beta1.Coin} Coin
                 */
                Coin.fromObject = function fromObject(object) {
                    if (object instanceof $root.cosmos.base.v1beta1.Coin)
                        return object;
                    let message = new $root.cosmos.base.v1beta1.Coin();
                    if (object.denom != null)
                        message.denom = String(object.denom);
                    if (object.amount != null)
                        message.amount = String(object.amount);
                    return message;
                };

                /**
                 * Creates a plain object from a Coin message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof cosmos.base.v1beta1.Coin
                 * @static
                 * @param {cosmos.base.v1beta1.Coin} message Coin
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Coin.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.denom = "";
                        object.amount = "";
                    }
                    if (message.denom != null && message.hasOwnProperty("denom"))
                        object.denom = message.denom;
                    if (message.amount != null && message.hasOwnProperty("amount"))
                        object.amount = message.amount;
                    return object;
                };

                /**
                 * Converts this Coin to JSON.
                 * @function toJSON
                 * @memberof cosmos.base.v1beta1.Coin
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Coin.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Coin;
            })();

            v1beta1.DecCoin = (function() {

                /**
                 * Properties of a DecCoin.
                 * @memberof cosmos.base.v1beta1
                 * @interface IDecCoin
                 * @property {string|null} [denom] DecCoin denom
                 * @property {string|null} [amount] DecCoin amount
                 */

                /**
                 * Constructs a new DecCoin.
                 * @memberof cosmos.base.v1beta1
                 * @classdesc Represents a DecCoin.
                 * @implements IDecCoin
                 * @constructor
                 * @param {cosmos.base.v1beta1.IDecCoin=} [properties] Properties to set
                 */
                function DecCoin(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * DecCoin denom.
                 * @member {string} denom
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @instance
                 */
                DecCoin.prototype.denom = "";

                /**
                 * DecCoin amount.
                 * @member {string} amount
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @instance
                 */
                DecCoin.prototype.amount = "";

                /**
                 * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @function encode
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {cosmos.base.v1beta1.IDecCoin} message DecCoin message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DecCoin.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.denom != null && Object.hasOwnProperty.call(message, "denom"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.denom);
                    if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.amount);
                    return writer;
                };

                /**
                 * Encodes the specified DecCoin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {cosmos.base.v1beta1.IDecCoin} message DecCoin message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DecCoin.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DecCoin message from the specified reader or buffer.
                 * @function decode
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {cosmos.base.v1beta1.DecCoin} DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DecCoin.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.DecCoin();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.denom = reader.string();
                            break;
                        case 2:
                            message.amount = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DecCoin message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {cosmos.base.v1beta1.DecCoin} DecCoin
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DecCoin.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DecCoin message.
                 * @function verify
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DecCoin.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.denom != null && message.hasOwnProperty("denom"))
                        if (!$util.isString(message.denom))
                            return "denom: string expected";
                    if (message.amount != null && message.hasOwnProperty("amount"))
                        if (!$util.isString(message.amount))
                            return "amount: string expected";
                    return null;
                };

                /**
                 * Creates a DecCoin message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {cosmos.base.v1beta1.DecCoin} DecCoin
                 */
                DecCoin.fromObject = function fromObject(object) {
                    if (object instanceof $root.cosmos.base.v1beta1.DecCoin)
                        return object;
                    let message = new $root.cosmos.base.v1beta1.DecCoin();
                    if (object.denom != null)
                        message.denom = String(object.denom);
                    if (object.amount != null)
                        message.amount = String(object.amount);
                    return message;
                };

                /**
                 * Creates a plain object from a DecCoin message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @static
                 * @param {cosmos.base.v1beta1.DecCoin} message DecCoin
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DecCoin.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.denom = "";
                        object.amount = "";
                    }
                    if (message.denom != null && message.hasOwnProperty("denom"))
                        object.denom = message.denom;
                    if (message.amount != null && message.hasOwnProperty("amount"))
                        object.amount = message.amount;
                    return object;
                };

                /**
                 * Converts this DecCoin to JSON.
                 * @function toJSON
                 * @memberof cosmos.base.v1beta1.DecCoin
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DecCoin.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return DecCoin;
            })();

            v1beta1.IntProto = (function() {

                /**
                 * Properties of an IntProto.
                 * @memberof cosmos.base.v1beta1
                 * @interface IIntProto
                 * @property {string|null} [int] IntProto int
                 */

                /**
                 * Constructs a new IntProto.
                 * @memberof cosmos.base.v1beta1
                 * @classdesc Represents an IntProto.
                 * @implements IIntProto
                 * @constructor
                 * @param {cosmos.base.v1beta1.IIntProto=} [properties] Properties to set
                 */
                function IntProto(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * IntProto int.
                 * @member {string} int
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @instance
                 */
                IntProto.prototype.int = "";

                /**
                 * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @function encode
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {cosmos.base.v1beta1.IIntProto} message IntProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                IntProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.int != null && Object.hasOwnProperty.call(message, "int"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.int);
                    return writer;
                };

                /**
                 * Encodes the specified IntProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {cosmos.base.v1beta1.IIntProto} message IntProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                IntProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an IntProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {cosmos.base.v1beta1.IntProto} IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                IntProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.IntProto();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.int = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes an IntProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {cosmos.base.v1beta1.IntProto} IntProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                IntProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an IntProto message.
                 * @function verify
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                IntProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.int != null && message.hasOwnProperty("int"))
                        if (!$util.isString(message.int))
                            return "int: string expected";
                    return null;
                };

                /**
                 * Creates an IntProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {cosmos.base.v1beta1.IntProto} IntProto
                 */
                IntProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.cosmos.base.v1beta1.IntProto)
                        return object;
                    let message = new $root.cosmos.base.v1beta1.IntProto();
                    if (object.int != null)
                        message.int = String(object.int);
                    return message;
                };

                /**
                 * Creates a plain object from an IntProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @static
                 * @param {cosmos.base.v1beta1.IntProto} message IntProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                IntProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults)
                        object.int = "";
                    if (message.int != null && message.hasOwnProperty("int"))
                        object.int = message.int;
                    return object;
                };

                /**
                 * Converts this IntProto to JSON.
                 * @function toJSON
                 * @memberof cosmos.base.v1beta1.IntProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                IntProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return IntProto;
            })();

            v1beta1.DecProto = (function() {

                /**
                 * Properties of a DecProto.
                 * @memberof cosmos.base.v1beta1
                 * @interface IDecProto
                 * @property {string|null} [dec] DecProto dec
                 */

                /**
                 * Constructs a new DecProto.
                 * @memberof cosmos.base.v1beta1
                 * @classdesc Represents a DecProto.
                 * @implements IDecProto
                 * @constructor
                 * @param {cosmos.base.v1beta1.IDecProto=} [properties] Properties to set
                 */
                function DecProto(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * DecProto dec.
                 * @member {string} dec
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @instance
                 */
                DecProto.prototype.dec = "";

                /**
                 * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @function encode
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {cosmos.base.v1beta1.IDecProto} message DecProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DecProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.dec != null && Object.hasOwnProperty.call(message, "dec"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.dec);
                    return writer;
                };

                /**
                 * Encodes the specified DecProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {cosmos.base.v1beta1.IDecProto} message DecProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DecProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DecProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {cosmos.base.v1beta1.DecProto} DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DecProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.DecProto();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.dec = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DecProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {cosmos.base.v1beta1.DecProto} DecProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DecProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DecProto message.
                 * @function verify
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DecProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.dec != null && message.hasOwnProperty("dec"))
                        if (!$util.isString(message.dec))
                            return "dec: string expected";
                    return null;
                };

                /**
                 * Creates a DecProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {cosmos.base.v1beta1.DecProto} DecProto
                 */
                DecProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.cosmos.base.v1beta1.DecProto)
                        return object;
                    let message = new $root.cosmos.base.v1beta1.DecProto();
                    if (object.dec != null)
                        message.dec = String(object.dec);
                    return message;
                };

                /**
                 * Creates a plain object from a DecProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @static
                 * @param {cosmos.base.v1beta1.DecProto} message DecProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DecProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults)
                        object.dec = "";
                    if (message.dec != null && message.hasOwnProperty("dec"))
                        object.dec = message.dec;
                    return object;
                };

                /**
                 * Converts this DecProto to JSON.
                 * @function toJSON
                 * @memberof cosmos.base.v1beta1.DecProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DecProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return DecProto;
            })();

            return v1beta1;
        })();

        return base;
    })();

    return cosmos;
})();

export const cosmos_proto = $root.cosmos_proto = (() => {

    /**
     * Namespace cosmos_proto.
     * @exports cosmos_proto
     * @namespace
     */
    const cosmos_proto = {};

    return cosmos_proto;
})();

export const gogoproto = $root.gogoproto = (() => {

    /**
     * Namespace gogoproto.
     * @exports gogoproto
     * @namespace
     */
    const gogoproto = {};

    return gogoproto;
})();

export const google = $root.google = (() => {

    /**
     * Namespace google.
     * @exports google
     * @namespace
     */
    const google = {};

    google.api = (function() {

        /**
         * Namespace api.
         * @memberof google
         * @namespace
         */
        const api = {};

        api.Http = (function() {

            /**
             * Properties of a Http.
             * @memberof google.api
             * @interface IHttp
             * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
             * @property {boolean|null} [fully_decode_reserved_expansion] Http fully_decode_reserved_expansion
             */

            /**
             * Constructs a new Http.
             * @memberof google.api
             * @classdesc Represents a Http.
             * @implements IHttp
             * @constructor
             * @param {google.api.IHttp=} [properties] Properties to set
             */
            function Http(properties) {
                this.rules = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Http rules.
             * @member {Array.<google.api.IHttpRule>} rules
             * @memberof google.api.Http
             * @instance
             */
            Http.prototype.rules = $util.emptyArray;

            /**
             * Http fully_decode_reserved_expansion.
             * @member {boolean} fully_decode_reserved_expansion
             * @memberof google.api.Http
             * @instance
             */
            Http.prototype.fully_decode_reserved_expansion = false;

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @function encode
             * @memberof google.api.Http
             * @static
             * @param {google.api.IHttp} message Http message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Http.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.rules != null && message.rules.length)
                    for (let i = 0; i < message.rules.length; ++i)
                        $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.fully_decode_reserved_expansion != null && Object.hasOwnProperty.call(message, "fully_decode_reserved_expansion"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fully_decode_reserved_expansion);
                return writer;
            };

            /**
             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.api.Http
             * @static
             * @param {google.api.IHttp} message Http message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Http.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @function decode
             * @memberof google.api.Http
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.api.Http} Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Http.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.rules && message.rules.length))
                            message.rules = [];
                        message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                        break;
                    case 2:
                        message.fully_decode_reserved_expansion = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Http message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.api.Http
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.api.Http} Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Http.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Http message.
             * @function verify
             * @memberof google.api.Http
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Http.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.rules != null && message.hasOwnProperty("rules")) {
                    if (!Array.isArray(message.rules))
                        return "rules: array expected";
                    for (let i = 0; i < message.rules.length; ++i) {
                        let error = $root.google.api.HttpRule.verify(message.rules[i]);
                        if (error)
                            return "rules." + error;
                    }
                }
                if (message.fully_decode_reserved_expansion != null && message.hasOwnProperty("fully_decode_reserved_expansion"))
                    if (typeof message.fully_decode_reserved_expansion !== "boolean")
                        return "fully_decode_reserved_expansion: boolean expected";
                return null;
            };

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.api.Http
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.api.Http} Http
             */
            Http.fromObject = function fromObject(object) {
                if (object instanceof $root.google.api.Http)
                    return object;
                let message = new $root.google.api.Http();
                if (object.rules) {
                    if (!Array.isArray(object.rules))
                        throw TypeError(".google.api.Http.rules: array expected");
                    message.rules = [];
                    for (let i = 0; i < object.rules.length; ++i) {
                        if (typeof object.rules[i] !== "object")
                            throw TypeError(".google.api.Http.rules: object expected");
                        message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                    }
                }
                if (object.fully_decode_reserved_expansion != null)
                    message.fully_decode_reserved_expansion = Boolean(object.fully_decode_reserved_expansion);
                return message;
            };

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.api.Http
             * @static
             * @param {google.api.Http} message Http
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Http.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.rules = [];
                if (options.defaults)
                    object.fully_decode_reserved_expansion = false;
                if (message.rules && message.rules.length) {
                    object.rules = [];
                    for (let j = 0; j < message.rules.length; ++j)
                        object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                }
                if (message.fully_decode_reserved_expansion != null && message.hasOwnProperty("fully_decode_reserved_expansion"))
                    object.fully_decode_reserved_expansion = message.fully_decode_reserved_expansion;
                return object;
            };

            /**
             * Converts this Http to JSON.
             * @function toJSON
             * @memberof google.api.Http
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Http.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Http;
        })();

        api.HttpRule = (function() {

            /**
             * Properties of a HttpRule.
             * @memberof google.api
             * @interface IHttpRule
             * @property {string|null} [selector] HttpRule selector
             * @property {string|null} [get] HttpRule get
             * @property {string|null} [put] HttpRule put
             * @property {string|null} [post] HttpRule post
             * @property {string|null} ["delete"] HttpRule delete
             * @property {string|null} [patch] HttpRule patch
             * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
             * @property {string|null} [body] HttpRule body
             * @property {string|null} [response_body] HttpRule response_body
             * @property {Array.<google.api.IHttpRule>|null} [additional_bindings] HttpRule additional_bindings
             */

            /**
             * Constructs a new HttpRule.
             * @memberof google.api
             * @classdesc Represents a HttpRule.
             * @implements IHttpRule
             * @constructor
             * @param {google.api.IHttpRule=} [properties] Properties to set
             */
            function HttpRule(properties) {
                this.additional_bindings = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * HttpRule selector.
             * @member {string} selector
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.selector = "";

            /**
             * HttpRule get.
             * @member {string|null|undefined} get
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.get = null;

            /**
             * HttpRule put.
             * @member {string|null|undefined} put
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.put = null;

            /**
             * HttpRule post.
             * @member {string|null|undefined} post
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.post = null;

            /**
             * HttpRule delete.
             * @member {string|null|undefined} delete
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype["delete"] = null;

            /**
             * HttpRule patch.
             * @member {string|null|undefined} patch
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.patch = null;

            /**
             * HttpRule custom.
             * @member {google.api.ICustomHttpPattern|null|undefined} custom
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.custom = null;

            /**
             * HttpRule body.
             * @member {string} body
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.body = "";

            /**
             * HttpRule response_body.
             * @member {string} response_body
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.response_body = "";

            /**
             * HttpRule additional_bindings.
             * @member {Array.<google.api.IHttpRule>} additional_bindings
             * @memberof google.api.HttpRule
             * @instance
             */
            HttpRule.prototype.additional_bindings = $util.emptyArray;

            // OneOf field names bound to virtual getters and setters
            let $oneOfFields;

            /**
             * HttpRule pattern.
             * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
             * @memberof google.api.HttpRule
             * @instance
             */
            Object.defineProperty(HttpRule.prototype, "pattern", {
                get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @function encode
             * @memberof google.api.HttpRule
             * @static
             * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            HttpRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                    $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.additional_bindings != null && message.additional_bindings.length)
                    for (let i = 0; i < message.additional_bindings.length; ++i)
                        $root.google.api.HttpRule.encode(message.additional_bindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                if (message.response_body != null && Object.hasOwnProperty.call(message, "response_body"))
                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.response_body);
                return writer;
            };

            /**
             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.api.HttpRule
             * @static
             * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @function decode
             * @memberof google.api.HttpRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.api.HttpRule} HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            HttpRule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.selector = reader.string();
                        break;
                    case 2:
                        message.get = reader.string();
                        break;
                    case 3:
                        message.put = reader.string();
                        break;
                    case 4:
                        message.post = reader.string();
                        break;
                    case 5:
                        message["delete"] = reader.string();
                        break;
                    case 6:
                        message.patch = reader.string();
                        break;
                    case 8:
                        message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                        break;
                    case 7:
                        message.body = reader.string();
                        break;
                    case 12:
                        message.response_body = reader.string();
                        break;
                    case 11:
                        if (!(message.additional_bindings && message.additional_bindings.length))
                            message.additional_bindings = [];
                        message.additional_bindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a HttpRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.api.HttpRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.api.HttpRule} HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            HttpRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a HttpRule message.
             * @function verify
             * @memberof google.api.HttpRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            HttpRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                let properties = {};
                if (message.selector != null && message.hasOwnProperty("selector"))
                    if (!$util.isString(message.selector))
                        return "selector: string expected";
                if (message.get != null && message.hasOwnProperty("get")) {
                    properties.pattern = 1;
                    if (!$util.isString(message.get))
                        return "get: string expected";
                }
                if (message.put != null && message.hasOwnProperty("put")) {
                    if (properties.pattern === 1)
                        return "pattern: multiple values";
                    properties.pattern = 1;
                    if (!$util.isString(message.put))
                        return "put: string expected";
                }
                if (message.post != null && message.hasOwnProperty("post")) {
                    if (properties.pattern === 1)
                        return "pattern: multiple values";
                    properties.pattern = 1;
                    if (!$util.isString(message.post))
                        return "post: string expected";
                }
                if (message["delete"] != null && message.hasOwnProperty("delete")) {
                    if (properties.pattern === 1)
                        return "pattern: multiple values";
                    properties.pattern = 1;
                    if (!$util.isString(message["delete"]))
                        return "delete: string expected";
                }
                if (message.patch != null && message.hasOwnProperty("patch")) {
                    if (properties.pattern === 1)
                        return "pattern: multiple values";
                    properties.pattern = 1;
                    if (!$util.isString(message.patch))
                        return "patch: string expected";
                }
                if (message.custom != null && message.hasOwnProperty("custom")) {
                    if (properties.pattern === 1)
                        return "pattern: multiple values";
                    properties.pattern = 1;
                    {
                        let error = $root.google.api.CustomHttpPattern.verify(message.custom);
                        if (error)
                            return "custom." + error;
                    }
                }
                if (message.body != null && message.hasOwnProperty("body"))
                    if (!$util.isString(message.body))
                        return "body: string expected";
                if (message.response_body != null && message.hasOwnProperty("response_body"))
                    if (!$util.isString(message.response_body))
                        return "response_body: string expected";
                if (message.additional_bindings != null && message.hasOwnProperty("additional_bindings")) {
                    if (!Array.isArray(message.additional_bindings))
                        return "additional_bindings: array expected";
                    for (let i = 0; i < message.additional_bindings.length; ++i) {
                        let error = $root.google.api.HttpRule.verify(message.additional_bindings[i]);
                        if (error)
                            return "additional_bindings." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.api.HttpRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.api.HttpRule} HttpRule
             */
            HttpRule.fromObject = function fromObject(object) {
                if (object instanceof $root.google.api.HttpRule)
                    return object;
                let message = new $root.google.api.HttpRule();
                if (object.selector != null)
                    message.selector = String(object.selector);
                if (object.get != null)
                    message.get = String(object.get);
                if (object.put != null)
                    message.put = String(object.put);
                if (object.post != null)
                    message.post = String(object.post);
                if (object["delete"] != null)
                    message["delete"] = String(object["delete"]);
                if (object.patch != null)
                    message.patch = String(object.patch);
                if (object.custom != null) {
                    if (typeof object.custom !== "object")
                        throw TypeError(".google.api.HttpRule.custom: object expected");
                    message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                }
                if (object.body != null)
                    message.body = String(object.body);
                if (object.response_body != null)
                    message.response_body = String(object.response_body);
                if (object.additional_bindings) {
                    if (!Array.isArray(object.additional_bindings))
                        throw TypeError(".google.api.HttpRule.additional_bindings: array expected");
                    message.additional_bindings = [];
                    for (let i = 0; i < object.additional_bindings.length; ++i) {
                        if (typeof object.additional_bindings[i] !== "object")
                            throw TypeError(".google.api.HttpRule.additional_bindings: object expected");
                        message.additional_bindings[i] = $root.google.api.HttpRule.fromObject(object.additional_bindings[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.api.HttpRule
             * @static
             * @param {google.api.HttpRule} message HttpRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            HttpRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.additional_bindings = [];
                if (options.defaults) {
                    object.selector = "";
                    object.body = "";
                    object.response_body = "";
                }
                if (message.selector != null && message.hasOwnProperty("selector"))
                    object.selector = message.selector;
                if (message.get != null && message.hasOwnProperty("get")) {
                    object.get = message.get;
                    if (options.oneofs)
                        object.pattern = "get";
                }
                if (message.put != null && message.hasOwnProperty("put")) {
                    object.put = message.put;
                    if (options.oneofs)
                        object.pattern = "put";
                }
                if (message.post != null && message.hasOwnProperty("post")) {
                    object.post = message.post;
                    if (options.oneofs)
                        object.pattern = "post";
                }
                if (message["delete"] != null && message.hasOwnProperty("delete")) {
                    object["delete"] = message["delete"];
                    if (options.oneofs)
                        object.pattern = "delete";
                }
                if (message.patch != null && message.hasOwnProperty("patch")) {
                    object.patch = message.patch;
                    if (options.oneofs)
                        object.pattern = "patch";
                }
                if (message.body != null && message.hasOwnProperty("body"))
                    object.body = message.body;
                if (message.custom != null && message.hasOwnProperty("custom")) {
                    object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                    if (options.oneofs)
                        object.pattern = "custom";
                }
                if (message.additional_bindings && message.additional_bindings.length) {
                    object.additional_bindings = [];
                    for (let j = 0; j < message.additional_bindings.length; ++j)
                        object.additional_bindings[j] = $root.google.api.HttpRule.toObject(message.additional_bindings[j], options);
                }
                if (message.response_body != null && message.hasOwnProperty("response_body"))
                    object.response_body = message.response_body;
                return object;
            };

            /**
             * Converts this HttpRule to JSON.
             * @function toJSON
             * @memberof google.api.HttpRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            HttpRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return HttpRule;
        })();

        api.CustomHttpPattern = (function() {

            /**
             * Properties of a CustomHttpPattern.
             * @memberof google.api
             * @interface ICustomHttpPattern
             * @property {string|null} [kind] CustomHttpPattern kind
             * @property {string|null} [path] CustomHttpPattern path
             */

            /**
             * Constructs a new CustomHttpPattern.
             * @memberof google.api
             * @classdesc Represents a CustomHttpPattern.
             * @implements ICustomHttpPattern
             * @constructor
             * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
             */
            function CustomHttpPattern(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CustomHttpPattern kind.
             * @member {string} kind
             * @memberof google.api.CustomHttpPattern
             * @instance
             */
            CustomHttpPattern.prototype.kind = "";

            /**
             * CustomHttpPattern path.
             * @member {string} path
             * @memberof google.api.CustomHttpPattern
             * @instance
             */
            CustomHttpPattern.prototype.path = "";

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @function encode
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CustomHttpPattern.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                return writer;
            };

            /**
             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @function decode
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.api.CustomHttpPattern} CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CustomHttpPattern.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.kind = reader.string();
                        break;
                    case 2:
                        message.path = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.api.CustomHttpPattern} CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CustomHttpPattern message.
             * @function verify
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CustomHttpPattern.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.kind != null && message.hasOwnProperty("kind"))
                    if (!$util.isString(message.kind))
                        return "kind: string expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.api.CustomHttpPattern} CustomHttpPattern
             */
            CustomHttpPattern.fromObject = function fromObject(object) {
                if (object instanceof $root.google.api.CustomHttpPattern)
                    return object;
                let message = new $root.google.api.CustomHttpPattern();
                if (object.kind != null)
                    message.kind = String(object.kind);
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.api.CustomHttpPattern
             * @static
             * @param {google.api.CustomHttpPattern} message CustomHttpPattern
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CustomHttpPattern.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.kind = "";
                    object.path = "";
                }
                if (message.kind != null && message.hasOwnProperty("kind"))
                    object.kind = message.kind;
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @function toJSON
             * @memberof google.api.CustomHttpPattern
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CustomHttpPattern.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return CustomHttpPattern;
        })();

        return api;
    })();

    google.protobuf = (function() {

        /**
         * Namespace protobuf.
         * @memberof google
         * @namespace
         */
        const protobuf = {};

        protobuf.FileDescriptorSet = (function() {

            /**
             * Properties of a FileDescriptorSet.
             * @memberof google.protobuf
             * @interface IFileDescriptorSet
             * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
             */

            /**
             * Constructs a new FileDescriptorSet.
             * @memberof google.protobuf
             * @classdesc Represents a FileDescriptorSet.
             * @implements IFileDescriptorSet
             * @constructor
             * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
             */
            function FileDescriptorSet(properties) {
                this.file = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FileDescriptorSet file.
             * @member {Array.<google.protobuf.IFileDescriptorProto>} file
             * @memberof google.protobuf.FileDescriptorSet
             * @instance
             */
            FileDescriptorSet.prototype.file = $util.emptyArray;

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileDescriptorSet.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.file != null && message.file.length)
                    for (let i = 0; i < message.file.length; ++i)
                        $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileDescriptorSet.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.file && message.file.length))
                            message.file = [];
                        message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FileDescriptorSet message.
             * @function verify
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FileDescriptorSet.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.file != null && message.hasOwnProperty("file")) {
                    if (!Array.isArray(message.file))
                        return "file: array expected";
                    for (let i = 0; i < message.file.length; ++i) {
                        let error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                        if (error)
                            return "file." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
             */
            FileDescriptorSet.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.FileDescriptorSet)
                    return object;
                let message = new $root.google.protobuf.FileDescriptorSet();
                if (object.file) {
                    if (!Array.isArray(object.file))
                        throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                    message.file = [];
                    for (let i = 0; i < object.file.length; ++i) {
                        if (typeof object.file[i] !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                        message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.FileDescriptorSet
             * @static
             * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FileDescriptorSet.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.file = [];
                if (message.file && message.file.length) {
                    object.file = [];
                    for (let j = 0; j < message.file.length; ++j)
                        object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                }
                return object;
            };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @function toJSON
             * @memberof google.protobuf.FileDescriptorSet
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FileDescriptorSet.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return FileDescriptorSet;
        })();

        protobuf.FileDescriptorProto = (function() {

            /**
             * Properties of a FileDescriptorProto.
             * @memberof google.protobuf
             * @interface IFileDescriptorProto
             * @property {string|null} [name] FileDescriptorProto name
             * @property {string|null} ["package"] FileDescriptorProto package
             * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
             * @property {Array.<number>|null} [public_dependency] FileDescriptorProto public_dependency
             * @property {Array.<number>|null} [weak_dependency] FileDescriptorProto weak_dependency
             * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
             * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
             * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
             * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
             * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
             * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
             * @property {string|null} [syntax] FileDescriptorProto syntax
             */

            /**
             * Constructs a new FileDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents a FileDescriptorProto.
             * @implements IFileDescriptorProto
             * @constructor
             * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
             */
            function FileDescriptorProto(properties) {
                this.dependency = [];
                this.public_dependency = [];
                this.weak_dependency = [];
                this.message_type = [];
                this.enum_type = [];
                this.service = [];
                this.extension = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FileDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.name = "";

            /**
             * FileDescriptorProto package.
             * @member {string} package
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype["package"] = "";

            /**
             * FileDescriptorProto dependency.
             * @member {Array.<string>} dependency
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.dependency = $util.emptyArray;

            /**
             * FileDescriptorProto public_dependency.
             * @member {Array.<number>} public_dependency
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.public_dependency = $util.emptyArray;

            /**
             * FileDescriptorProto weak_dependency.
             * @member {Array.<number>} weak_dependency
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.weak_dependency = $util.emptyArray;

            /**
             * FileDescriptorProto message_type.
             * @member {Array.<google.protobuf.IDescriptorProto>} message_type
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.message_type = $util.emptyArray;

            /**
             * FileDescriptorProto enum_type.
             * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.enum_type = $util.emptyArray;

            /**
             * FileDescriptorProto service.
             * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.service = $util.emptyArray;

            /**
             * FileDescriptorProto extension.
             * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.extension = $util.emptyArray;

            /**
             * FileDescriptorProto options.
             * @member {google.protobuf.IFileOptions|null|undefined} options
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.options = null;

            /**
             * FileDescriptorProto source_code_info.
             * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.source_code_info = null;

            /**
             * FileDescriptorProto syntax.
             * @member {string} syntax
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             */
            FileDescriptorProto.prototype.syntax = "";

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                if (message.dependency != null && message.dependency.length)
                    for (let i = 0; i < message.dependency.length; ++i)
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                if (message.message_type != null && message.message_type.length)
                    for (let i = 0; i < message.message_type.length; ++i)
                        $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.enum_type != null && message.enum_type.length)
                    for (let i = 0; i < message.enum_type.length; ++i)
                        $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.service != null && message.service.length)
                    for (let i = 0; i < message.service.length; ++i)
                        $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.extension != null && message.extension.length)
                    for (let i = 0; i < message.extension.length; ++i)
                        $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.source_code_info != null && Object.hasOwnProperty.call(message, "source_code_info"))
                    $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                if (message.public_dependency != null && message.public_dependency.length)
                    for (let i = 0; i < message.public_dependency.length; ++i)
                        writer.uint32(/* id 10, wireType 0 =*/80).int32(message.public_dependency[i]);
                if (message.weak_dependency != null && message.weak_dependency.length)
                    for (let i = 0; i < message.weak_dependency.length; ++i)
                        writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weak_dependency[i]);
                if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                return writer;
            };

            /**
             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        message["package"] = reader.string();
                        break;
                    case 3:
                        if (!(message.dependency && message.dependency.length))
                            message.dependency = [];
                        message.dependency.push(reader.string());
                        break;
                    case 10:
                        if (!(message.public_dependency && message.public_dependency.length))
                            message.public_dependency = [];
                        if ((tag & 7) === 2) {
                            let end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.public_dependency.push(reader.int32());
                        } else
                            message.public_dependency.push(reader.int32());
                        break;
                    case 11:
                        if (!(message.weak_dependency && message.weak_dependency.length))
                            message.weak_dependency = [];
                        if ((tag & 7) === 2) {
                            let end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.weak_dependency.push(reader.int32());
                        } else
                            message.weak_dependency.push(reader.int32());
                        break;
                    case 4:
                        if (!(message.message_type && message.message_type.length))
                            message.message_type = [];
                        message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 5:
                        if (!(message.enum_type && message.enum_type.length))
                            message.enum_type = [];
                        message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 6:
                        if (!(message.service && message.service.length))
                            message.service = [];
                        message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 7:
                        if (!(message.extension && message.extension.length))
                            message.extension = [];
                        message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 8:
                        message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                        break;
                    case 9:
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                        break;
                    case 12:
                        message.syntax = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FileDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FileDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message["package"] != null && message.hasOwnProperty("package"))
                    if (!$util.isString(message["package"]))
                        return "package: string expected";
                if (message.dependency != null && message.hasOwnProperty("dependency")) {
                    if (!Array.isArray(message.dependency))
                        return "dependency: array expected";
                    for (let i = 0; i < message.dependency.length; ++i)
                        if (!$util.isString(message.dependency[i]))
                            return "dependency: string[] expected";
                }
                if (message.public_dependency != null && message.hasOwnProperty("public_dependency")) {
                    if (!Array.isArray(message.public_dependency))
                        return "public_dependency: array expected";
                    for (let i = 0; i < message.public_dependency.length; ++i)
                        if (!$util.isInteger(message.public_dependency[i]))
                            return "public_dependency: integer[] expected";
                }
                if (message.weak_dependency != null && message.hasOwnProperty("weak_dependency")) {
                    if (!Array.isArray(message.weak_dependency))
                        return "weak_dependency: array expected";
                    for (let i = 0; i < message.weak_dependency.length; ++i)
                        if (!$util.isInteger(message.weak_dependency[i]))
                            return "weak_dependency: integer[] expected";
                }
                if (message.message_type != null && message.hasOwnProperty("message_type")) {
                    if (!Array.isArray(message.message_type))
                        return "message_type: array expected";
                    for (let i = 0; i < message.message_type.length; ++i) {
                        let error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                        if (error)
                            return "message_type." + error;
                    }
                }
                if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                    if (!Array.isArray(message.enum_type))
                        return "enum_type: array expected";
                    for (let i = 0; i < message.enum_type.length; ++i) {
                        let error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                        if (error)
                            return "enum_type." + error;
                    }
                }
                if (message.service != null && message.hasOwnProperty("service")) {
                    if (!Array.isArray(message.service))
                        return "service: array expected";
                    for (let i = 0; i < message.service.length; ++i) {
                        let error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                        if (error)
                            return "service." + error;
                    }
                }
                if (message.extension != null && message.hasOwnProperty("extension")) {
                    if (!Array.isArray(message.extension))
                        return "extension: array expected";
                    for (let i = 0; i < message.extension.length; ++i) {
                        let error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                        if (error)
                            return "extension." + error;
                    }
                }
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.FileOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                    let error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                    if (error)
                        return "source_code_info." + error;
                }
                if (message.syntax != null && message.hasOwnProperty("syntax"))
                    if (!$util.isString(message.syntax))
                        return "syntax: string expected";
                return null;
            };

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
             */
            FileDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.FileDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.FileDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object["package"] != null)
                    message["package"] = String(object["package"]);
                if (object.dependency) {
                    if (!Array.isArray(object.dependency))
                        throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                    message.dependency = [];
                    for (let i = 0; i < object.dependency.length; ++i)
                        message.dependency[i] = String(object.dependency[i]);
                }
                if (object.public_dependency) {
                    if (!Array.isArray(object.public_dependency))
                        throw TypeError(".google.protobuf.FileDescriptorProto.public_dependency: array expected");
                    message.public_dependency = [];
                    for (let i = 0; i < object.public_dependency.length; ++i)
                        message.public_dependency[i] = object.public_dependency[i] | 0;
                }
                if (object.weak_dependency) {
                    if (!Array.isArray(object.weak_dependency))
                        throw TypeError(".google.protobuf.FileDescriptorProto.weak_dependency: array expected");
                    message.weak_dependency = [];
                    for (let i = 0; i < object.weak_dependency.length; ++i)
                        message.weak_dependency[i] = object.weak_dependency[i] | 0;
                }
                if (object.message_type) {
                    if (!Array.isArray(object.message_type))
                        throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                    message.message_type = [];
                    for (let i = 0; i < object.message_type.length; ++i) {
                        if (typeof object.message_type[i] !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                        message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                    }
                }
                if (object.enum_type) {
                    if (!Array.isArray(object.enum_type))
                        throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                    message.enum_type = [];
                    for (let i = 0; i < object.enum_type.length; ++i) {
                        if (typeof object.enum_type[i] !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                        message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                    }
                }
                if (object.service) {
                    if (!Array.isArray(object.service))
                        throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                    message.service = [];
                    for (let i = 0; i < object.service.length; ++i) {
                        if (typeof object.service[i] !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                        message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                    }
                }
                if (object.extension) {
                    if (!Array.isArray(object.extension))
                        throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                    message.extension = [];
                    for (let i = 0; i < object.extension.length; ++i) {
                        if (typeof object.extension[i] !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                        message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                    }
                }
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                }
                if (object.source_code_info != null) {
                    if (typeof object.source_code_info !== "object")
                        throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                    message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                }
                if (object.syntax != null)
                    message.syntax = String(object.syntax);
                return message;
            };

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.FileDescriptorProto
             * @static
             * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FileDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.dependency = [];
                    object.message_type = [];
                    object.enum_type = [];
                    object.service = [];
                    object.extension = [];
                    object.public_dependency = [];
                    object.weak_dependency = [];
                }
                if (options.defaults) {
                    object.name = "";
                    object["package"] = "";
                    object.options = null;
                    object.source_code_info = null;
                    object.syntax = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message["package"] != null && message.hasOwnProperty("package"))
                    object["package"] = message["package"];
                if (message.dependency && message.dependency.length) {
                    object.dependency = [];
                    for (let j = 0; j < message.dependency.length; ++j)
                        object.dependency[j] = message.dependency[j];
                }
                if (message.message_type && message.message_type.length) {
                    object.message_type = [];
                    for (let j = 0; j < message.message_type.length; ++j)
                        object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                }
                if (message.enum_type && message.enum_type.length) {
                    object.enum_type = [];
                    for (let j = 0; j < message.enum_type.length; ++j)
                        object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                }
                if (message.service && message.service.length) {
                    object.service = [];
                    for (let j = 0; j < message.service.length; ++j)
                        object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                }
                if (message.extension && message.extension.length) {
                    object.extension = [];
                    for (let j = 0; j < message.extension.length; ++j)
                        object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                }
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                    object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                if (message.public_dependency && message.public_dependency.length) {
                    object.public_dependency = [];
                    for (let j = 0; j < message.public_dependency.length; ++j)
                        object.public_dependency[j] = message.public_dependency[j];
                }
                if (message.weak_dependency && message.weak_dependency.length) {
                    object.weak_dependency = [];
                    for (let j = 0; j < message.weak_dependency.length; ++j)
                        object.weak_dependency[j] = message.weak_dependency[j];
                }
                if (message.syntax != null && message.hasOwnProperty("syntax"))
                    object.syntax = message.syntax;
                return object;
            };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.FileDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FileDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return FileDescriptorProto;
        })();

        protobuf.DescriptorProto = (function() {

            /**
             * Properties of a DescriptorProto.
             * @memberof google.protobuf
             * @interface IDescriptorProto
             * @property {string|null} [name] DescriptorProto name
             * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
             * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
             * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
             * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
             * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
             * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneof_decl] DescriptorProto oneof_decl
             * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
             * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reserved_range] DescriptorProto reserved_range
             * @property {Array.<string>|null} [reserved_name] DescriptorProto reserved_name
             */

            /**
             * Constructs a new DescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents a DescriptorProto.
             * @implements IDescriptorProto
             * @constructor
             * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
             */
            function DescriptorProto(properties) {
                this.field = [];
                this.extension = [];
                this.nested_type = [];
                this.enum_type = [];
                this.extension_range = [];
                this.oneof_decl = [];
                this.reserved_range = [];
                this.reserved_name = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.name = "";

            /**
             * DescriptorProto field.
             * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.field = $util.emptyArray;

            /**
             * DescriptorProto extension.
             * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.extension = $util.emptyArray;

            /**
             * DescriptorProto nested_type.
             * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.nested_type = $util.emptyArray;

            /**
             * DescriptorProto enum_type.
             * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.enum_type = $util.emptyArray;

            /**
             * DescriptorProto extension_range.
             * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.extension_range = $util.emptyArray;

            /**
             * DescriptorProto oneof_decl.
             * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneof_decl
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.oneof_decl = $util.emptyArray;

            /**
             * DescriptorProto options.
             * @member {google.protobuf.IMessageOptions|null|undefined} options
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.options = null;

            /**
             * DescriptorProto reserved_range.
             * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reserved_range
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.reserved_range = $util.emptyArray;

            /**
             * DescriptorProto reserved_name.
             * @member {Array.<string>} reserved_name
             * @memberof google.protobuf.DescriptorProto
             * @instance
             */
            DescriptorProto.prototype.reserved_name = $util.emptyArray;

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.field != null && message.field.length)
                    for (let i = 0; i < message.field.length; ++i)
                        $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.nested_type != null && message.nested_type.length)
                    for (let i = 0; i < message.nested_type.length; ++i)
                        $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.enum_type != null && message.enum_type.length)
                    for (let i = 0; i < message.enum_type.length; ++i)
                        $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.extension_range != null && message.extension_range.length)
                    for (let i = 0; i < message.extension_range.length; ++i)
                        $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.extension != null && message.extension.length)
                    for (let i = 0; i < message.extension.length; ++i)
                        $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.oneof_decl != null && message.oneof_decl.length)
                    for (let i = 0; i < message.oneof_decl.length; ++i)
                        $root.google.protobuf.OneofDescriptorProto.encode(message.oneof_decl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.reserved_range != null && message.reserved_range.length)
                    for (let i = 0; i < message.reserved_range.length; ++i)
                        $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reserved_range[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                if (message.reserved_name != null && message.reserved_name.length)
                    for (let i = 0; i < message.reserved_name.length; ++i)
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.reserved_name[i]);
                return writer;
            };

            /**
             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.DescriptorProto} DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        if (!(message.field && message.field.length))
                            message.field = [];
                        message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 6:
                        if (!(message.extension && message.extension.length))
                            message.extension = [];
                        message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        if (!(message.nested_type && message.nested_type.length))
                            message.nested_type = [];
                        message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 4:
                        if (!(message.enum_type && message.enum_type.length))
                            message.enum_type = [];
                        message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 5:
                        if (!(message.extension_range && message.extension_range.length))
                            message.extension_range = [];
                        message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                        break;
                    case 8:
                        if (!(message.oneof_decl && message.oneof_decl.length))
                            message.oneof_decl = [];
                        message.oneof_decl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 7:
                        message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                        break;
                    case 9:
                        if (!(message.reserved_range && message.reserved_range.length))
                            message.reserved_range = [];
                        message.reserved_range.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                        break;
                    case 10:
                        if (!(message.reserved_name && message.reserved_name.length))
                            message.reserved_name = [];
                        message.reserved_name.push(reader.string());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.DescriptorProto} DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DescriptorProto message.
             * @function verify
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.field != null && message.hasOwnProperty("field")) {
                    if (!Array.isArray(message.field))
                        return "field: array expected";
                    for (let i = 0; i < message.field.length; ++i) {
                        let error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                        if (error)
                            return "field." + error;
                    }
                }
                if (message.extension != null && message.hasOwnProperty("extension")) {
                    if (!Array.isArray(message.extension))
                        return "extension: array expected";
                    for (let i = 0; i < message.extension.length; ++i) {
                        let error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                        if (error)
                            return "extension." + error;
                    }
                }
                if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                    if (!Array.isArray(message.nested_type))
                        return "nested_type: array expected";
                    for (let i = 0; i < message.nested_type.length; ++i) {
                        let error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                        if (error)
                            return "nested_type." + error;
                    }
                }
                if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                    if (!Array.isArray(message.enum_type))
                        return "enum_type: array expected";
                    for (let i = 0; i < message.enum_type.length; ++i) {
                        let error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                        if (error)
                            return "enum_type." + error;
                    }
                }
                if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                    if (!Array.isArray(message.extension_range))
                        return "extension_range: array expected";
                    for (let i = 0; i < message.extension_range.length; ++i) {
                        let error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                        if (error)
                            return "extension_range." + error;
                    }
                }
                if (message.oneof_decl != null && message.hasOwnProperty("oneof_decl")) {
                    if (!Array.isArray(message.oneof_decl))
                        return "oneof_decl: array expected";
                    for (let i = 0; i < message.oneof_decl.length; ++i) {
                        let error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneof_decl[i]);
                        if (error)
                            return "oneof_decl." + error;
                    }
                }
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.MessageOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                if (message.reserved_range != null && message.hasOwnProperty("reserved_range")) {
                    if (!Array.isArray(message.reserved_range))
                        return "reserved_range: array expected";
                    for (let i = 0; i < message.reserved_range.length; ++i) {
                        let error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reserved_range[i]);
                        if (error)
                            return "reserved_range." + error;
                    }
                }
                if (message.reserved_name != null && message.hasOwnProperty("reserved_name")) {
                    if (!Array.isArray(message.reserved_name))
                        return "reserved_name: array expected";
                    for (let i = 0; i < message.reserved_name.length; ++i)
                        if (!$util.isString(message.reserved_name[i]))
                            return "reserved_name: string[] expected";
                }
                return null;
            };

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.DescriptorProto} DescriptorProto
             */
            DescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.DescriptorProto)
                    return object;
                let message = new $root.google.protobuf.DescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.field) {
                    if (!Array.isArray(object.field))
                        throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                    message.field = [];
                    for (let i = 0; i < object.field.length; ++i) {
                        if (typeof object.field[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                        message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                    }
                }
                if (object.extension) {
                    if (!Array.isArray(object.extension))
                        throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                    message.extension = [];
                    for (let i = 0; i < object.extension.length; ++i) {
                        if (typeof object.extension[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                        message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                    }
                }
                if (object.nested_type) {
                    if (!Array.isArray(object.nested_type))
                        throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                    message.nested_type = [];
                    for (let i = 0; i < object.nested_type.length; ++i) {
                        if (typeof object.nested_type[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                        message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                    }
                }
                if (object.enum_type) {
                    if (!Array.isArray(object.enum_type))
                        throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                    message.enum_type = [];
                    for (let i = 0; i < object.enum_type.length; ++i) {
                        if (typeof object.enum_type[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                        message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                    }
                }
                if (object.extension_range) {
                    if (!Array.isArray(object.extension_range))
                        throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                    message.extension_range = [];
                    for (let i = 0; i < object.extension_range.length; ++i) {
                        if (typeof object.extension_range[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                        message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                    }
                }
                if (object.oneof_decl) {
                    if (!Array.isArray(object.oneof_decl))
                        throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: array expected");
                    message.oneof_decl = [];
                    for (let i = 0; i < object.oneof_decl.length; ++i) {
                        if (typeof object.oneof_decl[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: object expected");
                        message.oneof_decl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneof_decl[i]);
                    }
                }
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                }
                if (object.reserved_range) {
                    if (!Array.isArray(object.reserved_range))
                        throw TypeError(".google.protobuf.DescriptorProto.reserved_range: array expected");
                    message.reserved_range = [];
                    for (let i = 0; i < object.reserved_range.length; ++i) {
                        if (typeof object.reserved_range[i] !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_range: object expected");
                        message.reserved_range[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reserved_range[i]);
                    }
                }
                if (object.reserved_name) {
                    if (!Array.isArray(object.reserved_name))
                        throw TypeError(".google.protobuf.DescriptorProto.reserved_name: array expected");
                    message.reserved_name = [];
                    for (let i = 0; i < object.reserved_name.length; ++i)
                        message.reserved_name[i] = String(object.reserved_name[i]);
                }
                return message;
            };

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.DescriptorProto
             * @static
             * @param {google.protobuf.DescriptorProto} message DescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.field = [];
                    object.nested_type = [];
                    object.enum_type = [];
                    object.extension_range = [];
                    object.extension = [];
                    object.oneof_decl = [];
                    object.reserved_range = [];
                    object.reserved_name = [];
                }
                if (options.defaults) {
                    object.name = "";
                    object.options = null;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.field && message.field.length) {
                    object.field = [];
                    for (let j = 0; j < message.field.length; ++j)
                        object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                }
                if (message.nested_type && message.nested_type.length) {
                    object.nested_type = [];
                    for (let j = 0; j < message.nested_type.length; ++j)
                        object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                }
                if (message.enum_type && message.enum_type.length) {
                    object.enum_type = [];
                    for (let j = 0; j < message.enum_type.length; ++j)
                        object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                }
                if (message.extension_range && message.extension_range.length) {
                    object.extension_range = [];
                    for (let j = 0; j < message.extension_range.length; ++j)
                        object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                }
                if (message.extension && message.extension.length) {
                    object.extension = [];
                    for (let j = 0; j < message.extension.length; ++j)
                        object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                }
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                if (message.oneof_decl && message.oneof_decl.length) {
                    object.oneof_decl = [];
                    for (let j = 0; j < message.oneof_decl.length; ++j)
                        object.oneof_decl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneof_decl[j], options);
                }
                if (message.reserved_range && message.reserved_range.length) {
                    object.reserved_range = [];
                    for (let j = 0; j < message.reserved_range.length; ++j)
                        object.reserved_range[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reserved_range[j], options);
                }
                if (message.reserved_name && message.reserved_name.length) {
                    object.reserved_name = [];
                    for (let j = 0; j < message.reserved_name.length; ++j)
                        object.reserved_name[j] = message.reserved_name[j];
                }
                return object;
            };

            /**
             * Converts this DescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.DescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            DescriptorProto.ExtensionRange = (function() {

                /**
                 * Properties of an ExtensionRange.
                 * @memberof google.protobuf.DescriptorProto
                 * @interface IExtensionRange
                 * @property {number|null} [start] ExtensionRange start
                 * @property {number|null} [end] ExtensionRange end
                 */

                /**
                 * Constructs a new ExtensionRange.
                 * @memberof google.protobuf.DescriptorProto
                 * @classdesc Represents an ExtensionRange.
                 * @implements IExtensionRange
                 * @constructor
                 * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                 */
                function ExtensionRange(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ExtensionRange start.
                 * @member {number} start
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @instance
                 */
                ExtensionRange.prototype.start = 0;

                /**
                 * ExtensionRange end.
                 * @member {number} end
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @instance
                 */
                ExtensionRange.prototype.end = 0;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRange.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                    if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                    return writer;
                };

                /**
                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRange.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.start = reader.int32();
                            break;
                        case 2:
                            message.end = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an ExtensionRange message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRange.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.start != null && message.hasOwnProperty("start"))
                        if (!$util.isInteger(message.start))
                            return "start: integer expected";
                    if (message.end != null && message.hasOwnProperty("end"))
                        if (!$util.isInteger(message.end))
                            return "end: integer expected";
                    return null;
                };

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                 */
                ExtensionRange.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                        return object;
                    let message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                    if (object.start != null)
                        message.start = object.start | 0;
                    if (object.end != null)
                        message.end = object.end | 0;
                    return message;
                };

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @static
                 * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRange.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.start = 0;
                        object.end = 0;
                    }
                    if (message.start != null && message.hasOwnProperty("start"))
                        object.start = message.start;
                    if (message.end != null && message.hasOwnProperty("end"))
                        object.end = message.end;
                    return object;
                };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto.ExtensionRange
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRange.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ExtensionRange;
            })();

            DescriptorProto.ReservedRange = (function() {

                /**
                 * Properties of a ReservedRange.
                 * @memberof google.protobuf.DescriptorProto
                 * @interface IReservedRange
                 * @property {number|null} [start] ReservedRange start
                 * @property {number|null} [end] ReservedRange end
                 */

                /**
                 * Constructs a new ReservedRange.
                 * @memberof google.protobuf.DescriptorProto
                 * @classdesc Represents a ReservedRange.
                 * @implements IReservedRange
                 * @constructor
                 * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                 */
                function ReservedRange(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ReservedRange start.
                 * @member {number} start
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @instance
                 */
                ReservedRange.prototype.start = 0;

                /**
                 * ReservedRange end.
                 * @member {number} end
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @instance
                 */
                ReservedRange.prototype.end = 0;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ReservedRange.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                    if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                    return writer;
                };

                /**
                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ReservedRange.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.start = reader.int32();
                            break;
                        case 2:
                            message.end = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ReservedRange message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ReservedRange.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.start != null && message.hasOwnProperty("start"))
                        if (!$util.isInteger(message.start))
                            return "start: integer expected";
                    if (message.end != null && message.hasOwnProperty("end"))
                        if (!$util.isInteger(message.end))
                            return "end: integer expected";
                    return null;
                };

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                 */
                ReservedRange.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                        return object;
                    let message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                    if (object.start != null)
                        message.start = object.start | 0;
                    if (object.end != null)
                        message.end = object.end | 0;
                    return message;
                };

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @static
                 * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ReservedRange.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.start = 0;
                        object.end = 0;
                    }
                    if (message.start != null && message.hasOwnProperty("start"))
                        object.start = message.start;
                    if (message.end != null && message.hasOwnProperty("end"))
                        object.end = message.end;
                    return object;
                };

                /**
                 * Converts this ReservedRange to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto.ReservedRange
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ReservedRange.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ReservedRange;
            })();

            return DescriptorProto;
        })();

        protobuf.FieldDescriptorProto = (function() {

            /**
             * Properties of a FieldDescriptorProto.
             * @memberof google.protobuf
             * @interface IFieldDescriptorProto
             * @property {string|null} [name] FieldDescriptorProto name
             * @property {number|null} [number] FieldDescriptorProto number
             * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
             * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
             * @property {string|null} [type_name] FieldDescriptorProto type_name
             * @property {string|null} [extendee] FieldDescriptorProto extendee
             * @property {string|null} [default_value] FieldDescriptorProto default_value
             * @property {number|null} [oneof_index] FieldDescriptorProto oneof_index
             * @property {string|null} [json_name] FieldDescriptorProto json_name
             * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
             */

            /**
             * Constructs a new FieldDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents a FieldDescriptorProto.
             * @implements IFieldDescriptorProto
             * @constructor
             * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
             */
            function FieldDescriptorProto(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FieldDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.name = "";

            /**
             * FieldDescriptorProto number.
             * @member {number} number
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.number = 0;

            /**
             * FieldDescriptorProto label.
             * @member {google.protobuf.FieldDescriptorProto.Label} label
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.label = 1;

            /**
             * FieldDescriptorProto type.
             * @member {google.protobuf.FieldDescriptorProto.Type} type
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.type = 1;

            /**
             * FieldDescriptorProto type_name.
             * @member {string} type_name
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.type_name = "";

            /**
             * FieldDescriptorProto extendee.
             * @member {string} extendee
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.extendee = "";

            /**
             * FieldDescriptorProto default_value.
             * @member {string} default_value
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.default_value = "";

            /**
             * FieldDescriptorProto oneof_index.
             * @member {number} oneof_index
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.oneof_index = 0;

            /**
             * FieldDescriptorProto json_name.
             * @member {string} json_name
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.json_name = "";

            /**
             * FieldDescriptorProto options.
             * @member {google.protobuf.IFieldOptions|null|undefined} options
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             */
            FieldDescriptorProto.prototype.options = null;

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FieldDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                if (message.type_name != null && Object.hasOwnProperty.call(message, "type_name"))
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                if (message.default_value != null && Object.hasOwnProperty.call(message, "default_value"))
                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.oneof_index != null && Object.hasOwnProperty.call(message, "oneof_index"))
                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneof_index);
                if (message.json_name != null && Object.hasOwnProperty.call(message, "json_name"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.json_name);
                return writer;
            };

            /**
             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FieldDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 3:
                        message.number = reader.int32();
                        break;
                    case 4:
                        message.label = reader.int32();
                        break;
                    case 5:
                        message.type = reader.int32();
                        break;
                    case 6:
                        message.type_name = reader.string();
                        break;
                    case 2:
                        message.extendee = reader.string();
                        break;
                    case 7:
                        message.default_value = reader.string();
                        break;
                    case 9:
                        message.oneof_index = reader.int32();
                        break;
                    case 10:
                        message.json_name = reader.string();
                        break;
                    case 8:
                        message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FieldDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FieldDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.number != null && message.hasOwnProperty("number"))
                    if (!$util.isInteger(message.number))
                        return "number: integer expected";
                if (message.label != null && message.hasOwnProperty("label"))
                    switch (message.label) {
                    default:
                        return "label: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                if (message.type != null && message.hasOwnProperty("type"))
                    switch (message.type) {
                    default:
                        return "type: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                        break;
                    }
                if (message.type_name != null && message.hasOwnProperty("type_name"))
                    if (!$util.isString(message.type_name))
                        return "type_name: string expected";
                if (message.extendee != null && message.hasOwnProperty("extendee"))
                    if (!$util.isString(message.extendee))
                        return "extendee: string expected";
                if (message.default_value != null && message.hasOwnProperty("default_value"))
                    if (!$util.isString(message.default_value))
                        return "default_value: string expected";
                if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                    if (!$util.isInteger(message.oneof_index))
                        return "oneof_index: integer expected";
                if (message.json_name != null && message.hasOwnProperty("json_name"))
                    if (!$util.isString(message.json_name))
                        return "json_name: string expected";
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.FieldOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                return null;
            };

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
             */
            FieldDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.FieldDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.number != null)
                    message.number = object.number | 0;
                switch (object.label) {
                case "LABEL_OPTIONAL":
                case 1:
                    message.label = 1;
                    break;
                case "LABEL_REQUIRED":
                case 2:
                    message.label = 2;
                    break;
                case "LABEL_REPEATED":
                case 3:
                    message.label = 3;
                    break;
                }
                switch (object.type) {
                case "TYPE_DOUBLE":
                case 1:
                    message.type = 1;
                    break;
                case "TYPE_FLOAT":
                case 2:
                    message.type = 2;
                    break;
                case "TYPE_INT64":
                case 3:
                    message.type = 3;
                    break;
                case "TYPE_UINT64":
                case 4:
                    message.type = 4;
                    break;
                case "TYPE_INT32":
                case 5:
                    message.type = 5;
                    break;
                case "TYPE_FIXED64":
                case 6:
                    message.type = 6;
                    break;
                case "TYPE_FIXED32":
                case 7:
                    message.type = 7;
                    break;
                case "TYPE_BOOL":
                case 8:
                    message.type = 8;
                    break;
                case "TYPE_STRING":
                case 9:
                    message.type = 9;
                    break;
                case "TYPE_GROUP":
                case 10:
                    message.type = 10;
                    break;
                case "TYPE_MESSAGE":
                case 11:
                    message.type = 11;
                    break;
                case "TYPE_BYTES":
                case 12:
                    message.type = 12;
                    break;
                case "TYPE_UINT32":
                case 13:
                    message.type = 13;
                    break;
                case "TYPE_ENUM":
                case 14:
                    message.type = 14;
                    break;
                case "TYPE_SFIXED32":
                case 15:
                    message.type = 15;
                    break;
                case "TYPE_SFIXED64":
                case 16:
                    message.type = 16;
                    break;
                case "TYPE_SINT32":
                case 17:
                    message.type = 17;
                    break;
                case "TYPE_SINT64":
                case 18:
                    message.type = 18;
                    break;
                }
                if (object.type_name != null)
                    message.type_name = String(object.type_name);
                if (object.extendee != null)
                    message.extendee = String(object.extendee);
                if (object.default_value != null)
                    message.default_value = String(object.default_value);
                if (object.oneof_index != null)
                    message.oneof_index = object.oneof_index | 0;
                if (object.json_name != null)
                    message.json_name = String(object.json_name);
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                }
                return message;
            };

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.FieldDescriptorProto
             * @static
             * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FieldDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    object.extendee = "";
                    object.number = 0;
                    object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                    object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                    object.type_name = "";
                    object.default_value = "";
                    object.options = null;
                    object.oneof_index = 0;
                    object.json_name = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.extendee != null && message.hasOwnProperty("extendee"))
                    object.extendee = message.extendee;
                if (message.number != null && message.hasOwnProperty("number"))
                    object.number = message.number;
                if (message.label != null && message.hasOwnProperty("label"))
                    object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                if (message.type_name != null && message.hasOwnProperty("type_name"))
                    object.type_name = message.type_name;
                if (message.default_value != null && message.hasOwnProperty("default_value"))
                    object.default_value = message.default_value;
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                    object.oneof_index = message.oneof_index;
                if (message.json_name != null && message.hasOwnProperty("json_name"))
                    object.json_name = message.json_name;
                return object;
            };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.FieldDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FieldDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Type enum.
             * @name google.protobuf.FieldDescriptorProto.Type
             * @enum {number}
             * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
             * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
             * @property {number} TYPE_INT64=3 TYPE_INT64 value
             * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
             * @property {number} TYPE_INT32=5 TYPE_INT32 value
             * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
             * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
             * @property {number} TYPE_BOOL=8 TYPE_BOOL value
             * @property {number} TYPE_STRING=9 TYPE_STRING value
             * @property {number} TYPE_GROUP=10 TYPE_GROUP value
             * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
             * @property {number} TYPE_BYTES=12 TYPE_BYTES value
             * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
             * @property {number} TYPE_ENUM=14 TYPE_ENUM value
             * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
             * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
             * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
             * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
             */
            FieldDescriptorProto.Type = (function() {
                const valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                values[valuesById[2] = "TYPE_FLOAT"] = 2;
                values[valuesById[3] = "TYPE_INT64"] = 3;
                values[valuesById[4] = "TYPE_UINT64"] = 4;
                values[valuesById[5] = "TYPE_INT32"] = 5;
                values[valuesById[6] = "TYPE_FIXED64"] = 6;
                values[valuesById[7] = "TYPE_FIXED32"] = 7;
                values[valuesById[8] = "TYPE_BOOL"] = 8;
                values[valuesById[9] = "TYPE_STRING"] = 9;
                values[valuesById[10] = "TYPE_GROUP"] = 10;
                values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                values[valuesById[12] = "TYPE_BYTES"] = 12;
                values[valuesById[13] = "TYPE_UINT32"] = 13;
                values[valuesById[14] = "TYPE_ENUM"] = 14;
                values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                values[valuesById[17] = "TYPE_SINT32"] = 17;
                values[valuesById[18] = "TYPE_SINT64"] = 18;
                return values;
            })();

            /**
             * Label enum.
             * @name google.protobuf.FieldDescriptorProto.Label
             * @enum {number}
             * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
             * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
             * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
             */
            FieldDescriptorProto.Label = (function() {
                const valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                values[valuesById[3] = "LABEL_REPEATED"] = 3;
                return values;
            })();

            return FieldDescriptorProto;
        })();

        protobuf.OneofDescriptorProto = (function() {

            /**
             * Properties of an OneofDescriptorProto.
             * @memberof google.protobuf
             * @interface IOneofDescriptorProto
             * @property {string|null} [name] OneofDescriptorProto name
             * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
             */

            /**
             * Constructs a new OneofDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents an OneofDescriptorProto.
             * @implements IOneofDescriptorProto
             * @constructor
             * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
             */
            function OneofDescriptorProto(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * OneofDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.OneofDescriptorProto
             * @instance
             */
            OneofDescriptorProto.prototype.name = "";

            /**
             * OneofDescriptorProto options.
             * @member {google.protobuf.IOneofOptions|null|undefined} options
             * @memberof google.protobuf.OneofDescriptorProto
             * @instance
             */
            OneofDescriptorProto.prototype.options = null;

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            OneofDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            OneofDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an OneofDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            OneofDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.OneofOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                return null;
            };

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
             */
            OneofDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.OneofDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                }
                return message;
            };

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.OneofDescriptorProto
             * @static
             * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            OneofDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    object.options = null;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                return object;
            };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.OneofDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            OneofDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return OneofDescriptorProto;
        })();

        protobuf.EnumDescriptorProto = (function() {

            /**
             * Properties of an EnumDescriptorProto.
             * @memberof google.protobuf
             * @interface IEnumDescriptorProto
             * @property {string|null} [name] EnumDescriptorProto name
             * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
             * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
             */

            /**
             * Constructs a new EnumDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents an EnumDescriptorProto.
             * @implements IEnumDescriptorProto
             * @constructor
             * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
             */
            function EnumDescriptorProto(properties) {
                this.value = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * EnumDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.EnumDescriptorProto
             * @instance
             */
            EnumDescriptorProto.prototype.name = "";

            /**
             * EnumDescriptorProto value.
             * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
             * @memberof google.protobuf.EnumDescriptorProto
             * @instance
             */
            EnumDescriptorProto.prototype.value = $util.emptyArray;

            /**
             * EnumDescriptorProto options.
             * @member {google.protobuf.IEnumOptions|null|undefined} options
             * @memberof google.protobuf.EnumDescriptorProto
             * @instance
             */
            EnumDescriptorProto.prototype.options = null;

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && message.value.length)
                    for (let i = 0; i < message.value.length; ++i)
                        $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        if (!(message.value && message.value.length))
                            message.value = [];
                        message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an EnumDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            EnumDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value")) {
                    if (!Array.isArray(message.value))
                        return "value: array expected";
                    for (let i = 0; i < message.value.length; ++i) {
                        let error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                        if (error)
                            return "value." + error;
                    }
                }
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.EnumOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                return null;
            };

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
             */
            EnumDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.EnumDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value) {
                    if (!Array.isArray(object.value))
                        throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                    message.value = [];
                    for (let i = 0; i < object.value.length; ++i) {
                        if (typeof object.value[i] !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                        message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                    }
                }
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                }
                return message;
            };

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.EnumDescriptorProto
             * @static
             * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            EnumDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.value = [];
                if (options.defaults) {
                    object.name = "";
                    object.options = null;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value && message.value.length) {
                    object.value = [];
                    for (let j = 0; j < message.value.length; ++j)
                        object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                }
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                return object;
            };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.EnumDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            EnumDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return EnumDescriptorProto;
        })();

        protobuf.EnumValueDescriptorProto = (function() {

            /**
             * Properties of an EnumValueDescriptorProto.
             * @memberof google.protobuf
             * @interface IEnumValueDescriptorProto
             * @property {string|null} [name] EnumValueDescriptorProto name
             * @property {number|null} [number] EnumValueDescriptorProto number
             * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
             */

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents an EnumValueDescriptorProto.
             * @implements IEnumValueDescriptorProto
             * @constructor
             * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
             */
            function EnumValueDescriptorProto(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * EnumValueDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @instance
             */
            EnumValueDescriptorProto.prototype.name = "";

            /**
             * EnumValueDescriptorProto number.
             * @member {number} number
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @instance
             */
            EnumValueDescriptorProto.prototype.number = 0;

            /**
             * EnumValueDescriptorProto options.
             * @member {google.protobuf.IEnumValueOptions|null|undefined} options
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @instance
             */
            EnumValueDescriptorProto.prototype.options = null;

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumValueDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumValueDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        message.number = reader.int32();
                        break;
                    case 3:
                        message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            EnumValueDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.number != null && message.hasOwnProperty("number"))
                    if (!$util.isInteger(message.number))
                        return "number: integer expected";
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                return null;
            };

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
             */
            EnumValueDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.EnumValueDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.number != null)
                    message.number = object.number | 0;
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                }
                return message;
            };

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @static
             * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            EnumValueDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    object.number = 0;
                    object.options = null;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.number != null && message.hasOwnProperty("number"))
                    object.number = message.number;
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                return object;
            };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.EnumValueDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return EnumValueDescriptorProto;
        })();

        protobuf.ServiceDescriptorProto = (function() {

            /**
             * Properties of a ServiceDescriptorProto.
             * @memberof google.protobuf
             * @interface IServiceDescriptorProto
             * @property {string|null} [name] ServiceDescriptorProto name
             * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
             * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
             */

            /**
             * Constructs a new ServiceDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents a ServiceDescriptorProto.
             * @implements IServiceDescriptorProto
             * @constructor
             * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
             */
            function ServiceDescriptorProto(properties) {
                this.method = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ServiceDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.ServiceDescriptorProto
             * @instance
             */
            ServiceDescriptorProto.prototype.name = "";

            /**
             * ServiceDescriptorProto method.
             * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
             * @memberof google.protobuf.ServiceDescriptorProto
             * @instance
             */
            ServiceDescriptorProto.prototype.method = $util.emptyArray;

            /**
             * ServiceDescriptorProto options.
             * @member {google.protobuf.IServiceOptions|null|undefined} options
             * @memberof google.protobuf.ServiceDescriptorProto
             * @instance
             */
            ServiceDescriptorProto.prototype.options = null;

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ServiceDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.method != null && message.method.length)
                    for (let i = 0; i < message.method.length; ++i)
                        $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ServiceDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        if (!(message.method && message.method.length))
                            message.method = [];
                        message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ServiceDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ServiceDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.method != null && message.hasOwnProperty("method")) {
                    if (!Array.isArray(message.method))
                        return "method: array expected";
                    for (let i = 0; i < message.method.length; ++i) {
                        let error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                        if (error)
                            return "method." + error;
                    }
                }
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.ServiceOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                return null;
            };

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
             */
            ServiceDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.ServiceDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.method) {
                    if (!Array.isArray(object.method))
                        throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                    message.method = [];
                    for (let i = 0; i < object.method.length; ++i) {
                        if (typeof object.method[i] !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                        message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                    }
                }
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                }
                return message;
            };

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.ServiceDescriptorProto
             * @static
             * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ServiceDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.method = [];
                if (options.defaults) {
                    object.name = "";
                    object.options = null;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.method && message.method.length) {
                    object.method = [];
                    for (let j = 0; j < message.method.length; ++j)
                        object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                }
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                return object;
            };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.ServiceDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return ServiceDescriptorProto;
        })();

        protobuf.MethodDescriptorProto = (function() {

            /**
             * Properties of a MethodDescriptorProto.
             * @memberof google.protobuf
             * @interface IMethodDescriptorProto
             * @property {string|null} [name] MethodDescriptorProto name
             * @property {string|null} [input_type] MethodDescriptorProto input_type
             * @property {string|null} [output_type] MethodDescriptorProto output_type
             * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
             * @property {boolean|null} [client_streaming] MethodDescriptorProto client_streaming
             * @property {boolean|null} [server_streaming] MethodDescriptorProto server_streaming
             */

            /**
             * Constructs a new MethodDescriptorProto.
             * @memberof google.protobuf
             * @classdesc Represents a MethodDescriptorProto.
             * @implements IMethodDescriptorProto
             * @constructor
             * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
             */
            function MethodDescriptorProto(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MethodDescriptorProto name.
             * @member {string} name
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             */
            MethodDescriptorProto.prototype.name = "";

            /**
             * MethodDescriptorProto input_type.
             * @member {string} input_type
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             */
            MethodDescriptorProto.prototype.input_type = "";

            /**
             * MethodDescriptorProto output_type.
             * @member {string} output_type
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             */
            MethodDescriptorProto.prototype.output_type = "";

            /**
             * MethodDescriptorProto options.
             * @member {google.protobuf.IMethodOptions|null|undefined} options
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             */
            MethodDescriptorProto.prototype.options = null;

            /**
             * MethodDescriptorProto client_streaming.
             * @member {boolean} client_streaming
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             */
            MethodDescriptorProto.prototype.client_streaming = false;

            /**
             * MethodDescriptorProto server_streaming.
             * @member {boolean} server_streaming
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             */
            MethodDescriptorProto.prototype.server_streaming = false;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MethodDescriptorProto.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.input_type != null && Object.hasOwnProperty.call(message, "input_type"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                if (message.output_type != null && Object.hasOwnProperty.call(message, "output_type"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                    $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.client_streaming != null && Object.hasOwnProperty.call(message, "client_streaming"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.client_streaming);
                if (message.server_streaming != null && Object.hasOwnProperty.call(message, "server_streaming"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.server_streaming);
                return writer;
            };

            /**
             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MethodDescriptorProto.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.name = reader.string();
                        break;
                    case 2:
                        message.input_type = reader.string();
                        break;
                    case 3:
                        message.output_type = reader.string();
                        break;
                    case 4:
                        message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                        break;
                    case 5:
                        message.client_streaming = reader.bool();
                        break;
                    case 6:
                        message.server_streaming = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MethodDescriptorProto message.
             * @function verify
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MethodDescriptorProto.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.input_type != null && message.hasOwnProperty("input_type"))
                    if (!$util.isString(message.input_type))
                        return "input_type: string expected";
                if (message.output_type != null && message.hasOwnProperty("output_type"))
                    if (!$util.isString(message.output_type))
                        return "output_type: string expected";
                if (message.options != null && message.hasOwnProperty("options")) {
                    let error = $root.google.protobuf.MethodOptions.verify(message.options);
                    if (error)
                        return "options." + error;
                }
                if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                    if (typeof message.client_streaming !== "boolean")
                        return "client_streaming: boolean expected";
                if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                    if (typeof message.server_streaming !== "boolean")
                        return "server_streaming: boolean expected";
                return null;
            };

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
             */
            MethodDescriptorProto.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                    return object;
                let message = new $root.google.protobuf.MethodDescriptorProto();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.input_type != null)
                    message.input_type = String(object.input_type);
                if (object.output_type != null)
                    message.output_type = String(object.output_type);
                if (object.options != null) {
                    if (typeof object.options !== "object")
                        throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                    message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                }
                if (object.client_streaming != null)
                    message.client_streaming = Boolean(object.client_streaming);
                if (object.server_streaming != null)
                    message.server_streaming = Boolean(object.server_streaming);
                return message;
            };

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.MethodDescriptorProto
             * @static
             * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MethodDescriptorProto.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    object.input_type = "";
                    object.output_type = "";
                    object.options = null;
                    object.client_streaming = false;
                    object.server_streaming = false;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.input_type != null && message.hasOwnProperty("input_type"))
                    object.input_type = message.input_type;
                if (message.output_type != null && message.hasOwnProperty("output_type"))
                    object.output_type = message.output_type;
                if (message.options != null && message.hasOwnProperty("options"))
                    object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                    object.client_streaming = message.client_streaming;
                if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                    object.server_streaming = message.server_streaming;
                return object;
            };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @function toJSON
             * @memberof google.protobuf.MethodDescriptorProto
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MethodDescriptorProto.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MethodDescriptorProto;
        })();

        protobuf.FileOptions = (function() {

            /**
             * Properties of a FileOptions.
             * @memberof google.protobuf
             * @interface IFileOptions
             * @property {string|null} [java_package] FileOptions java_package
             * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
             * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
             * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
             * @property {boolean|null} [java_string_check_utf8] FileOptions java_string_check_utf8
             * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
             * @property {string|null} [go_package] FileOptions go_package
             * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
             * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
             * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
             * @property {boolean|null} [deprecated] FileOptions deprecated
             * @property {boolean|null} [cc_enable_arenas] FileOptions cc_enable_arenas
             * @property {string|null} [objc_class_prefix] FileOptions objc_class_prefix
             * @property {string|null} [csharp_namespace] FileOptions csharp_namespace
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
             * @property {boolean|null} [".gogoproto.goproto_getters_all"] FileOptions .gogoproto.goproto_getters_all
             * @property {boolean|null} [".gogoproto.goproto_enum_prefix_all"] FileOptions .gogoproto.goproto_enum_prefix_all
             * @property {boolean|null} [".gogoproto.goproto_stringer_all"] FileOptions .gogoproto.goproto_stringer_all
             * @property {boolean|null} [".gogoproto.verbose_equal_all"] FileOptions .gogoproto.verbose_equal_all
             * @property {boolean|null} [".gogoproto.face_all"] FileOptions .gogoproto.face_all
             * @property {boolean|null} [".gogoproto.gostring_all"] FileOptions .gogoproto.gostring_all
             * @property {boolean|null} [".gogoproto.populate_all"] FileOptions .gogoproto.populate_all
             * @property {boolean|null} [".gogoproto.stringer_all"] FileOptions .gogoproto.stringer_all
             * @property {boolean|null} [".gogoproto.onlyone_all"] FileOptions .gogoproto.onlyone_all
             * @property {boolean|null} [".gogoproto.equal_all"] FileOptions .gogoproto.equal_all
             * @property {boolean|null} [".gogoproto.description_all"] FileOptions .gogoproto.description_all
             * @property {boolean|null} [".gogoproto.testgen_all"] FileOptions .gogoproto.testgen_all
             * @property {boolean|null} [".gogoproto.benchgen_all"] FileOptions .gogoproto.benchgen_all
             * @property {boolean|null} [".gogoproto.marshaler_all"] FileOptions .gogoproto.marshaler_all
             * @property {boolean|null} [".gogoproto.unmarshaler_all"] FileOptions .gogoproto.unmarshaler_all
             * @property {boolean|null} [".gogoproto.stable_marshaler_all"] FileOptions .gogoproto.stable_marshaler_all
             * @property {boolean|null} [".gogoproto.sizer_all"] FileOptions .gogoproto.sizer_all
             * @property {boolean|null} [".gogoproto.goproto_enum_stringer_all"] FileOptions .gogoproto.goproto_enum_stringer_all
             * @property {boolean|null} [".gogoproto.enum_stringer_all"] FileOptions .gogoproto.enum_stringer_all
             * @property {boolean|null} [".gogoproto.unsafe_marshaler_all"] FileOptions .gogoproto.unsafe_marshaler_all
             * @property {boolean|null} [".gogoproto.unsafe_unmarshaler_all"] FileOptions .gogoproto.unsafe_unmarshaler_all
             * @property {boolean|null} [".gogoproto.goproto_extensions_map_all"] FileOptions .gogoproto.goproto_extensions_map_all
             * @property {boolean|null} [".gogoproto.goproto_unrecognized_all"] FileOptions .gogoproto.goproto_unrecognized_all
             * @property {boolean|null} [".gogoproto.gogoproto_import"] FileOptions .gogoproto.gogoproto_import
             * @property {boolean|null} [".gogoproto.protosizer_all"] FileOptions .gogoproto.protosizer_all
             * @property {boolean|null} [".gogoproto.compare_all"] FileOptions .gogoproto.compare_all
             * @property {boolean|null} [".gogoproto.typedecl_all"] FileOptions .gogoproto.typedecl_all
             * @property {boolean|null} [".gogoproto.enumdecl_all"] FileOptions .gogoproto.enumdecl_all
             * @property {boolean|null} [".gogoproto.goproto_registration"] FileOptions .gogoproto.goproto_registration
             * @property {boolean|null} [".gogoproto.messagename_all"] FileOptions .gogoproto.messagename_all
             * @property {boolean|null} [".gogoproto.goproto_sizecache_all"] FileOptions .gogoproto.goproto_sizecache_all
             * @property {boolean|null} [".gogoproto.goproto_unkeyed_all"] FileOptions .gogoproto.goproto_unkeyed_all
             */

            /**
             * Constructs a new FileOptions.
             * @memberof google.protobuf
             * @classdesc Represents a FileOptions.
             * @implements IFileOptions
             * @constructor
             * @param {google.protobuf.IFileOptions=} [properties] Properties to set
             */
            function FileOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FileOptions java_package.
             * @member {string} java_package
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.java_package = "";

            /**
             * FileOptions java_outer_classname.
             * @member {string} java_outer_classname
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.java_outer_classname = "";

            /**
             * FileOptions java_multiple_files.
             * @member {boolean} java_multiple_files
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.java_multiple_files = false;

            /**
             * FileOptions java_generate_equals_and_hash.
             * @member {boolean} java_generate_equals_and_hash
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.java_generate_equals_and_hash = false;

            /**
             * FileOptions java_string_check_utf8.
             * @member {boolean} java_string_check_utf8
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.java_string_check_utf8 = false;

            /**
             * FileOptions optimize_for.
             * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.optimize_for = 1;

            /**
             * FileOptions go_package.
             * @member {string} go_package
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.go_package = "";

            /**
             * FileOptions cc_generic_services.
             * @member {boolean} cc_generic_services
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.cc_generic_services = false;

            /**
             * FileOptions java_generic_services.
             * @member {boolean} java_generic_services
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.java_generic_services = false;

            /**
             * FileOptions py_generic_services.
             * @member {boolean} py_generic_services
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.py_generic_services = false;

            /**
             * FileOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.deprecated = false;

            /**
             * FileOptions cc_enable_arenas.
             * @member {boolean} cc_enable_arenas
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.cc_enable_arenas = false;

            /**
             * FileOptions objc_class_prefix.
             * @member {string} objc_class_prefix
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.objc_class_prefix = "";

            /**
             * FileOptions csharp_namespace.
             * @member {string} csharp_namespace
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.csharp_namespace = "";

            /**
             * FileOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * FileOptions .gogoproto.goproto_getters_all.
             * @member {boolean} .gogoproto.goproto_getters_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_getters_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_enum_prefix_all.
             * @member {boolean} .gogoproto.goproto_enum_prefix_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_enum_prefix_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_stringer_all.
             * @member {boolean} .gogoproto.goproto_stringer_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_stringer_all"] = false;

            /**
             * FileOptions .gogoproto.verbose_equal_all.
             * @member {boolean} .gogoproto.verbose_equal_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.verbose_equal_all"] = false;

            /**
             * FileOptions .gogoproto.face_all.
             * @member {boolean} .gogoproto.face_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.face_all"] = false;

            /**
             * FileOptions .gogoproto.gostring_all.
             * @member {boolean} .gogoproto.gostring_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.gostring_all"] = false;

            /**
             * FileOptions .gogoproto.populate_all.
             * @member {boolean} .gogoproto.populate_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.populate_all"] = false;

            /**
             * FileOptions .gogoproto.stringer_all.
             * @member {boolean} .gogoproto.stringer_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.stringer_all"] = false;

            /**
             * FileOptions .gogoproto.onlyone_all.
             * @member {boolean} .gogoproto.onlyone_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.onlyone_all"] = false;

            /**
             * FileOptions .gogoproto.equal_all.
             * @member {boolean} .gogoproto.equal_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.equal_all"] = false;

            /**
             * FileOptions .gogoproto.description_all.
             * @member {boolean} .gogoproto.description_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.description_all"] = false;

            /**
             * FileOptions .gogoproto.testgen_all.
             * @member {boolean} .gogoproto.testgen_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.testgen_all"] = false;

            /**
             * FileOptions .gogoproto.benchgen_all.
             * @member {boolean} .gogoproto.benchgen_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.benchgen_all"] = false;

            /**
             * FileOptions .gogoproto.marshaler_all.
             * @member {boolean} .gogoproto.marshaler_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.marshaler_all"] = false;

            /**
             * FileOptions .gogoproto.unmarshaler_all.
             * @member {boolean} .gogoproto.unmarshaler_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.unmarshaler_all"] = false;

            /**
             * FileOptions .gogoproto.stable_marshaler_all.
             * @member {boolean} .gogoproto.stable_marshaler_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.stable_marshaler_all"] = false;

            /**
             * FileOptions .gogoproto.sizer_all.
             * @member {boolean} .gogoproto.sizer_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.sizer_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_enum_stringer_all.
             * @member {boolean} .gogoproto.goproto_enum_stringer_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_enum_stringer_all"] = false;

            /**
             * FileOptions .gogoproto.enum_stringer_all.
             * @member {boolean} .gogoproto.enum_stringer_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.enum_stringer_all"] = false;

            /**
             * FileOptions .gogoproto.unsafe_marshaler_all.
             * @member {boolean} .gogoproto.unsafe_marshaler_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.unsafe_marshaler_all"] = false;

            /**
             * FileOptions .gogoproto.unsafe_unmarshaler_all.
             * @member {boolean} .gogoproto.unsafe_unmarshaler_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.unsafe_unmarshaler_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_extensions_map_all.
             * @member {boolean} .gogoproto.goproto_extensions_map_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_extensions_map_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_unrecognized_all.
             * @member {boolean} .gogoproto.goproto_unrecognized_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_unrecognized_all"] = false;

            /**
             * FileOptions .gogoproto.gogoproto_import.
             * @member {boolean} .gogoproto.gogoproto_import
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.gogoproto_import"] = false;

            /**
             * FileOptions .gogoproto.protosizer_all.
             * @member {boolean} .gogoproto.protosizer_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.protosizer_all"] = false;

            /**
             * FileOptions .gogoproto.compare_all.
             * @member {boolean} .gogoproto.compare_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.compare_all"] = false;

            /**
             * FileOptions .gogoproto.typedecl_all.
             * @member {boolean} .gogoproto.typedecl_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.typedecl_all"] = false;

            /**
             * FileOptions .gogoproto.enumdecl_all.
             * @member {boolean} .gogoproto.enumdecl_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.enumdecl_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_registration.
             * @member {boolean} .gogoproto.goproto_registration
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_registration"] = false;

            /**
             * FileOptions .gogoproto.messagename_all.
             * @member {boolean} .gogoproto.messagename_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.messagename_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_sizecache_all.
             * @member {boolean} .gogoproto.goproto_sizecache_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_sizecache_all"] = false;

            /**
             * FileOptions .gogoproto.goproto_unkeyed_all.
             * @member {boolean} .gogoproto.goproto_unkeyed_all
             * @memberof google.protobuf.FileOptions
             * @instance
             */
            FileOptions.prototype[".gogoproto.goproto_unkeyed_all"] = false;

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.java_package != null && Object.hasOwnProperty.call(message, "java_package"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                if (message.java_outer_classname != null && Object.hasOwnProperty.call(message, "java_outer_classname"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                if (message.optimize_for != null && Object.hasOwnProperty.call(message, "optimize_for"))
                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                if (message.java_multiple_files != null && Object.hasOwnProperty.call(message, "java_multiple_files"))
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                if (message.go_package != null && Object.hasOwnProperty.call(message, "go_package"))
                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.go_package);
                if (message.cc_generic_services != null && Object.hasOwnProperty.call(message, "cc_generic_services"))
                    writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                if (message.java_generic_services != null && Object.hasOwnProperty.call(message, "java_generic_services"))
                    writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                if (message.py_generic_services != null && Object.hasOwnProperty.call(message, "py_generic_services"))
                    writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                if (message.java_generate_equals_and_hash != null && Object.hasOwnProperty.call(message, "java_generate_equals_and_hash"))
                    writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                if (message.java_string_check_utf8 != null && Object.hasOwnProperty.call(message, "java_string_check_utf8"))
                    writer.uint32(/* id 27, wireType 0 =*/216).bool(message.java_string_check_utf8);
                if (message.cc_enable_arenas != null && Object.hasOwnProperty.call(message, "cc_enable_arenas"))
                    writer.uint32(/* id 31, wireType 0 =*/248).bool(message.cc_enable_arenas);
                if (message.objc_class_prefix != null && Object.hasOwnProperty.call(message, "objc_class_prefix"))
                    writer.uint32(/* id 36, wireType 2 =*/290).string(message.objc_class_prefix);
                if (message.csharp_namespace != null && Object.hasOwnProperty.call(message, "csharp_namespace"))
                    writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharp_namespace);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                if (message[".gogoproto.goproto_getters_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_getters_all"))
                    writer.uint32(/* id 63001, wireType 0 =*/504008).bool(message[".gogoproto.goproto_getters_all"]);
                if (message[".gogoproto.goproto_enum_prefix_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_prefix_all"))
                    writer.uint32(/* id 63002, wireType 0 =*/504016).bool(message[".gogoproto.goproto_enum_prefix_all"]);
                if (message[".gogoproto.goproto_stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_stringer_all"))
                    writer.uint32(/* id 63003, wireType 0 =*/504024).bool(message[".gogoproto.goproto_stringer_all"]);
                if (message[".gogoproto.verbose_equal_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.verbose_equal_all"))
                    writer.uint32(/* id 63004, wireType 0 =*/504032).bool(message[".gogoproto.verbose_equal_all"]);
                if (message[".gogoproto.face_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.face_all"))
                    writer.uint32(/* id 63005, wireType 0 =*/504040).bool(message[".gogoproto.face_all"]);
                if (message[".gogoproto.gostring_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.gostring_all"))
                    writer.uint32(/* id 63006, wireType 0 =*/504048).bool(message[".gogoproto.gostring_all"]);
                if (message[".gogoproto.populate_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.populate_all"))
                    writer.uint32(/* id 63007, wireType 0 =*/504056).bool(message[".gogoproto.populate_all"]);
                if (message[".gogoproto.stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stringer_all"))
                    writer.uint32(/* id 63008, wireType 0 =*/504064).bool(message[".gogoproto.stringer_all"]);
                if (message[".gogoproto.onlyone_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.onlyone_all"))
                    writer.uint32(/* id 63009, wireType 0 =*/504072).bool(message[".gogoproto.onlyone_all"]);
                if (message[".gogoproto.equal_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.equal_all"))
                    writer.uint32(/* id 63013, wireType 0 =*/504104).bool(message[".gogoproto.equal_all"]);
                if (message[".gogoproto.description_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.description_all"))
                    writer.uint32(/* id 63014, wireType 0 =*/504112).bool(message[".gogoproto.description_all"]);
                if (message[".gogoproto.testgen_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.testgen_all"))
                    writer.uint32(/* id 63015, wireType 0 =*/504120).bool(message[".gogoproto.testgen_all"]);
                if (message[".gogoproto.benchgen_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.benchgen_all"))
                    writer.uint32(/* id 63016, wireType 0 =*/504128).bool(message[".gogoproto.benchgen_all"]);
                if (message[".gogoproto.marshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.marshaler_all"))
                    writer.uint32(/* id 63017, wireType 0 =*/504136).bool(message[".gogoproto.marshaler_all"]);
                if (message[".gogoproto.unmarshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unmarshaler_all"))
                    writer.uint32(/* id 63018, wireType 0 =*/504144).bool(message[".gogoproto.unmarshaler_all"]);
                if (message[".gogoproto.stable_marshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stable_marshaler_all"))
                    writer.uint32(/* id 63019, wireType 0 =*/504152).bool(message[".gogoproto.stable_marshaler_all"]);
                if (message[".gogoproto.sizer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.sizer_all"))
                    writer.uint32(/* id 63020, wireType 0 =*/504160).bool(message[".gogoproto.sizer_all"]);
                if (message[".gogoproto.goproto_enum_stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_stringer_all"))
                    writer.uint32(/* id 63021, wireType 0 =*/504168).bool(message[".gogoproto.goproto_enum_stringer_all"]);
                if (message[".gogoproto.enum_stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enum_stringer_all"))
                    writer.uint32(/* id 63022, wireType 0 =*/504176).bool(message[".gogoproto.enum_stringer_all"]);
                if (message[".gogoproto.unsafe_marshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_marshaler_all"))
                    writer.uint32(/* id 63023, wireType 0 =*/504184).bool(message[".gogoproto.unsafe_marshaler_all"]);
                if (message[".gogoproto.unsafe_unmarshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_unmarshaler_all"))
                    writer.uint32(/* id 63024, wireType 0 =*/504192).bool(message[".gogoproto.unsafe_unmarshaler_all"]);
                if (message[".gogoproto.goproto_extensions_map_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_extensions_map_all"))
                    writer.uint32(/* id 63025, wireType 0 =*/504200).bool(message[".gogoproto.goproto_extensions_map_all"]);
                if (message[".gogoproto.goproto_unrecognized_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unrecognized_all"))
                    writer.uint32(/* id 63026, wireType 0 =*/504208).bool(message[".gogoproto.goproto_unrecognized_all"]);
                if (message[".gogoproto.gogoproto_import"] != null && Object.hasOwnProperty.call(message, ".gogoproto.gogoproto_import"))
                    writer.uint32(/* id 63027, wireType 0 =*/504216).bool(message[".gogoproto.gogoproto_import"]);
                if (message[".gogoproto.protosizer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.protosizer_all"))
                    writer.uint32(/* id 63028, wireType 0 =*/504224).bool(message[".gogoproto.protosizer_all"]);
                if (message[".gogoproto.compare_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.compare_all"))
                    writer.uint32(/* id 63029, wireType 0 =*/504232).bool(message[".gogoproto.compare_all"]);
                if (message[".gogoproto.typedecl_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.typedecl_all"))
                    writer.uint32(/* id 63030, wireType 0 =*/504240).bool(message[".gogoproto.typedecl_all"]);
                if (message[".gogoproto.enumdecl_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enumdecl_all"))
                    writer.uint32(/* id 63031, wireType 0 =*/504248).bool(message[".gogoproto.enumdecl_all"]);
                if (message[".gogoproto.goproto_registration"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_registration"))
                    writer.uint32(/* id 63032, wireType 0 =*/504256).bool(message[".gogoproto.goproto_registration"]);
                if (message[".gogoproto.messagename_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.messagename_all"))
                    writer.uint32(/* id 63033, wireType 0 =*/504264).bool(message[".gogoproto.messagename_all"]);
                if (message[".gogoproto.goproto_sizecache_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_sizecache_all"))
                    writer.uint32(/* id 63034, wireType 0 =*/504272).bool(message[".gogoproto.goproto_sizecache_all"]);
                if (message[".gogoproto.goproto_unkeyed_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unkeyed_all"))
                    writer.uint32(/* id 63035, wireType 0 =*/504280).bool(message[".gogoproto.goproto_unkeyed_all"]);
                return writer;
            };

            /**
             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.FileOptions} FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.java_package = reader.string();
                        break;
                    case 8:
                        message.java_outer_classname = reader.string();
                        break;
                    case 10:
                        message.java_multiple_files = reader.bool();
                        break;
                    case 20:
                        message.java_generate_equals_and_hash = reader.bool();
                        break;
                    case 27:
                        message.java_string_check_utf8 = reader.bool();
                        break;
                    case 9:
                        message.optimize_for = reader.int32();
                        break;
                    case 11:
                        message.go_package = reader.string();
                        break;
                    case 16:
                        message.cc_generic_services = reader.bool();
                        break;
                    case 17:
                        message.java_generic_services = reader.bool();
                        break;
                    case 18:
                        message.py_generic_services = reader.bool();
                        break;
                    case 23:
                        message.deprecated = reader.bool();
                        break;
                    case 31:
                        message.cc_enable_arenas = reader.bool();
                        break;
                    case 36:
                        message.objc_class_prefix = reader.string();
                        break;
                    case 37:
                        message.csharp_namespace = reader.string();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    case 63001:
                        message[".gogoproto.goproto_getters_all"] = reader.bool();
                        break;
                    case 63002:
                        message[".gogoproto.goproto_enum_prefix_all"] = reader.bool();
                        break;
                    case 63003:
                        message[".gogoproto.goproto_stringer_all"] = reader.bool();
                        break;
                    case 63004:
                        message[".gogoproto.verbose_equal_all"] = reader.bool();
                        break;
                    case 63005:
                        message[".gogoproto.face_all"] = reader.bool();
                        break;
                    case 63006:
                        message[".gogoproto.gostring_all"] = reader.bool();
                        break;
                    case 63007:
                        message[".gogoproto.populate_all"] = reader.bool();
                        break;
                    case 63008:
                        message[".gogoproto.stringer_all"] = reader.bool();
                        break;
                    case 63009:
                        message[".gogoproto.onlyone_all"] = reader.bool();
                        break;
                    case 63013:
                        message[".gogoproto.equal_all"] = reader.bool();
                        break;
                    case 63014:
                        message[".gogoproto.description_all"] = reader.bool();
                        break;
                    case 63015:
                        message[".gogoproto.testgen_all"] = reader.bool();
                        break;
                    case 63016:
                        message[".gogoproto.benchgen_all"] = reader.bool();
                        break;
                    case 63017:
                        message[".gogoproto.marshaler_all"] = reader.bool();
                        break;
                    case 63018:
                        message[".gogoproto.unmarshaler_all"] = reader.bool();
                        break;
                    case 63019:
                        message[".gogoproto.stable_marshaler_all"] = reader.bool();
                        break;
                    case 63020:
                        message[".gogoproto.sizer_all"] = reader.bool();
                        break;
                    case 63021:
                        message[".gogoproto.goproto_enum_stringer_all"] = reader.bool();
                        break;
                    case 63022:
                        message[".gogoproto.enum_stringer_all"] = reader.bool();
                        break;
                    case 63023:
                        message[".gogoproto.unsafe_marshaler_all"] = reader.bool();
                        break;
                    case 63024:
                        message[".gogoproto.unsafe_unmarshaler_all"] = reader.bool();
                        break;
                    case 63025:
                        message[".gogoproto.goproto_extensions_map_all"] = reader.bool();
                        break;
                    case 63026:
                        message[".gogoproto.goproto_unrecognized_all"] = reader.bool();
                        break;
                    case 63027:
                        message[".gogoproto.gogoproto_import"] = reader.bool();
                        break;
                    case 63028:
                        message[".gogoproto.protosizer_all"] = reader.bool();
                        break;
                    case 63029:
                        message[".gogoproto.compare_all"] = reader.bool();
                        break;
                    case 63030:
                        message[".gogoproto.typedecl_all"] = reader.bool();
                        break;
                    case 63031:
                        message[".gogoproto.enumdecl_all"] = reader.bool();
                        break;
                    case 63032:
                        message[".gogoproto.goproto_registration"] = reader.bool();
                        break;
                    case 63033:
                        message[".gogoproto.messagename_all"] = reader.bool();
                        break;
                    case 63034:
                        message[".gogoproto.goproto_sizecache_all"] = reader.bool();
                        break;
                    case 63035:
                        message[".gogoproto.goproto_unkeyed_all"] = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FileOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.FileOptions} FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FileOptions message.
             * @function verify
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FileOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.java_package != null && message.hasOwnProperty("java_package"))
                    if (!$util.isString(message.java_package))
                        return "java_package: string expected";
                if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                    if (!$util.isString(message.java_outer_classname))
                        return "java_outer_classname: string expected";
                if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                    if (typeof message.java_multiple_files !== "boolean")
                        return "java_multiple_files: boolean expected";
                if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                    if (typeof message.java_generate_equals_and_hash !== "boolean")
                        return "java_generate_equals_and_hash: boolean expected";
                if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                    if (typeof message.java_string_check_utf8 !== "boolean")
                        return "java_string_check_utf8: boolean expected";
                if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                    switch (message.optimize_for) {
                    default:
                        return "optimize_for: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                if (message.go_package != null && message.hasOwnProperty("go_package"))
                    if (!$util.isString(message.go_package))
                        return "go_package: string expected";
                if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                    if (typeof message.cc_generic_services !== "boolean")
                        return "cc_generic_services: boolean expected";
                if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                    if (typeof message.java_generic_services !== "boolean")
                        return "java_generic_services: boolean expected";
                if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                    if (typeof message.py_generic_services !== "boolean")
                        return "py_generic_services: boolean expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                    if (typeof message.cc_enable_arenas !== "boolean")
                        return "cc_enable_arenas: boolean expected";
                if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                    if (!$util.isString(message.objc_class_prefix))
                        return "objc_class_prefix: string expected";
                if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                    if (!$util.isString(message.csharp_namespace))
                        return "csharp_namespace: string expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                if (message[".gogoproto.goproto_getters_all"] != null && message.hasOwnProperty(".gogoproto.goproto_getters_all"))
                    if (typeof message[".gogoproto.goproto_getters_all"] !== "boolean")
                        return ".gogoproto.goproto_getters_all: boolean expected";
                if (message[".gogoproto.goproto_enum_prefix_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix_all"))
                    if (typeof message[".gogoproto.goproto_enum_prefix_all"] !== "boolean")
                        return ".gogoproto.goproto_enum_prefix_all: boolean expected";
                if (message[".gogoproto.goproto_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer_all"))
                    if (typeof message[".gogoproto.goproto_stringer_all"] !== "boolean")
                        return ".gogoproto.goproto_stringer_all: boolean expected";
                if (message[".gogoproto.verbose_equal_all"] != null && message.hasOwnProperty(".gogoproto.verbose_equal_all"))
                    if (typeof message[".gogoproto.verbose_equal_all"] !== "boolean")
                        return ".gogoproto.verbose_equal_all: boolean expected";
                if (message[".gogoproto.face_all"] != null && message.hasOwnProperty(".gogoproto.face_all"))
                    if (typeof message[".gogoproto.face_all"] !== "boolean")
                        return ".gogoproto.face_all: boolean expected";
                if (message[".gogoproto.gostring_all"] != null && message.hasOwnProperty(".gogoproto.gostring_all"))
                    if (typeof message[".gogoproto.gostring_all"] !== "boolean")
                        return ".gogoproto.gostring_all: boolean expected";
                if (message[".gogoproto.populate_all"] != null && message.hasOwnProperty(".gogoproto.populate_all"))
                    if (typeof message[".gogoproto.populate_all"] !== "boolean")
                        return ".gogoproto.populate_all: boolean expected";
                if (message[".gogoproto.stringer_all"] != null && message.hasOwnProperty(".gogoproto.stringer_all"))
                    if (typeof message[".gogoproto.stringer_all"] !== "boolean")
                        return ".gogoproto.stringer_all: boolean expected";
                if (message[".gogoproto.onlyone_all"] != null && message.hasOwnProperty(".gogoproto.onlyone_all"))
                    if (typeof message[".gogoproto.onlyone_all"] !== "boolean")
                        return ".gogoproto.onlyone_all: boolean expected";
                if (message[".gogoproto.equal_all"] != null && message.hasOwnProperty(".gogoproto.equal_all"))
                    if (typeof message[".gogoproto.equal_all"] !== "boolean")
                        return ".gogoproto.equal_all: boolean expected";
                if (message[".gogoproto.description_all"] != null && message.hasOwnProperty(".gogoproto.description_all"))
                    if (typeof message[".gogoproto.description_all"] !== "boolean")
                        return ".gogoproto.description_all: boolean expected";
                if (message[".gogoproto.testgen_all"] != null && message.hasOwnProperty(".gogoproto.testgen_all"))
                    if (typeof message[".gogoproto.testgen_all"] !== "boolean")
                        return ".gogoproto.testgen_all: boolean expected";
                if (message[".gogoproto.benchgen_all"] != null && message.hasOwnProperty(".gogoproto.benchgen_all"))
                    if (typeof message[".gogoproto.benchgen_all"] !== "boolean")
                        return ".gogoproto.benchgen_all: boolean expected";
                if (message[".gogoproto.marshaler_all"] != null && message.hasOwnProperty(".gogoproto.marshaler_all"))
                    if (typeof message[".gogoproto.marshaler_all"] !== "boolean")
                        return ".gogoproto.marshaler_all: boolean expected";
                if (message[".gogoproto.unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unmarshaler_all"))
                    if (typeof message[".gogoproto.unmarshaler_all"] !== "boolean")
                        return ".gogoproto.unmarshaler_all: boolean expected";
                if (message[".gogoproto.stable_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler_all"))
                    if (typeof message[".gogoproto.stable_marshaler_all"] !== "boolean")
                        return ".gogoproto.stable_marshaler_all: boolean expected";
                if (message[".gogoproto.sizer_all"] != null && message.hasOwnProperty(".gogoproto.sizer_all"))
                    if (typeof message[".gogoproto.sizer_all"] !== "boolean")
                        return ".gogoproto.sizer_all: boolean expected";
                if (message[".gogoproto.goproto_enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer_all"))
                    if (typeof message[".gogoproto.goproto_enum_stringer_all"] !== "boolean")
                        return ".gogoproto.goproto_enum_stringer_all: boolean expected";
                if (message[".gogoproto.enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.enum_stringer_all"))
                    if (typeof message[".gogoproto.enum_stringer_all"] !== "boolean")
                        return ".gogoproto.enum_stringer_all: boolean expected";
                if (message[".gogoproto.unsafe_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler_all"))
                    if (typeof message[".gogoproto.unsafe_marshaler_all"] !== "boolean")
                        return ".gogoproto.unsafe_marshaler_all: boolean expected";
                if (message[".gogoproto.unsafe_unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler_all"))
                    if (typeof message[".gogoproto.unsafe_unmarshaler_all"] !== "boolean")
                        return ".gogoproto.unsafe_unmarshaler_all: boolean expected";
                if (message[".gogoproto.goproto_extensions_map_all"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map_all"))
                    if (typeof message[".gogoproto.goproto_extensions_map_all"] !== "boolean")
                        return ".gogoproto.goproto_extensions_map_all: boolean expected";
                if (message[".gogoproto.goproto_unrecognized_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized_all"))
                    if (typeof message[".gogoproto.goproto_unrecognized_all"] !== "boolean")
                        return ".gogoproto.goproto_unrecognized_all: boolean expected";
                if (message[".gogoproto.gogoproto_import"] != null && message.hasOwnProperty(".gogoproto.gogoproto_import"))
                    if (typeof message[".gogoproto.gogoproto_import"] !== "boolean")
                        return ".gogoproto.gogoproto_import: boolean expected";
                if (message[".gogoproto.protosizer_all"] != null && message.hasOwnProperty(".gogoproto.protosizer_all"))
                    if (typeof message[".gogoproto.protosizer_all"] !== "boolean")
                        return ".gogoproto.protosizer_all: boolean expected";
                if (message[".gogoproto.compare_all"] != null && message.hasOwnProperty(".gogoproto.compare_all"))
                    if (typeof message[".gogoproto.compare_all"] !== "boolean")
                        return ".gogoproto.compare_all: boolean expected";
                if (message[".gogoproto.typedecl_all"] != null && message.hasOwnProperty(".gogoproto.typedecl_all"))
                    if (typeof message[".gogoproto.typedecl_all"] !== "boolean")
                        return ".gogoproto.typedecl_all: boolean expected";
                if (message[".gogoproto.enumdecl_all"] != null && message.hasOwnProperty(".gogoproto.enumdecl_all"))
                    if (typeof message[".gogoproto.enumdecl_all"] !== "boolean")
                        return ".gogoproto.enumdecl_all: boolean expected";
                if (message[".gogoproto.goproto_registration"] != null && message.hasOwnProperty(".gogoproto.goproto_registration"))
                    if (typeof message[".gogoproto.goproto_registration"] !== "boolean")
                        return ".gogoproto.goproto_registration: boolean expected";
                if (message[".gogoproto.messagename_all"] != null && message.hasOwnProperty(".gogoproto.messagename_all"))
                    if (typeof message[".gogoproto.messagename_all"] !== "boolean")
                        return ".gogoproto.messagename_all: boolean expected";
                if (message[".gogoproto.goproto_sizecache_all"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache_all"))
                    if (typeof message[".gogoproto.goproto_sizecache_all"] !== "boolean")
                        return ".gogoproto.goproto_sizecache_all: boolean expected";
                if (message[".gogoproto.goproto_unkeyed_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed_all"))
                    if (typeof message[".gogoproto.goproto_unkeyed_all"] !== "boolean")
                        return ".gogoproto.goproto_unkeyed_all: boolean expected";
                return null;
            };

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.FileOptions} FileOptions
             */
            FileOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.FileOptions)
                    return object;
                let message = new $root.google.protobuf.FileOptions();
                if (object.java_package != null)
                    message.java_package = String(object.java_package);
                if (object.java_outer_classname != null)
                    message.java_outer_classname = String(object.java_outer_classname);
                if (object.java_multiple_files != null)
                    message.java_multiple_files = Boolean(object.java_multiple_files);
                if (object.java_generate_equals_and_hash != null)
                    message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                if (object.java_string_check_utf8 != null)
                    message.java_string_check_utf8 = Boolean(object.java_string_check_utf8);
                switch (object.optimize_for) {
                case "SPEED":
                case 1:
                    message.optimize_for = 1;
                    break;
                case "CODE_SIZE":
                case 2:
                    message.optimize_for = 2;
                    break;
                case "LITE_RUNTIME":
                case 3:
                    message.optimize_for = 3;
                    break;
                }
                if (object.go_package != null)
                    message.go_package = String(object.go_package);
                if (object.cc_generic_services != null)
                    message.cc_generic_services = Boolean(object.cc_generic_services);
                if (object.java_generic_services != null)
                    message.java_generic_services = Boolean(object.java_generic_services);
                if (object.py_generic_services != null)
                    message.py_generic_services = Boolean(object.py_generic_services);
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.cc_enable_arenas != null)
                    message.cc_enable_arenas = Boolean(object.cc_enable_arenas);
                if (object.objc_class_prefix != null)
                    message.objc_class_prefix = String(object.objc_class_prefix);
                if (object.csharp_namespace != null)
                    message.csharp_namespace = String(object.csharp_namespace);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                if (object[".gogoproto.goproto_getters_all"] != null)
                    message[".gogoproto.goproto_getters_all"] = Boolean(object[".gogoproto.goproto_getters_all"]);
                if (object[".gogoproto.goproto_enum_prefix_all"] != null)
                    message[".gogoproto.goproto_enum_prefix_all"] = Boolean(object[".gogoproto.goproto_enum_prefix_all"]);
                if (object[".gogoproto.goproto_stringer_all"] != null)
                    message[".gogoproto.goproto_stringer_all"] = Boolean(object[".gogoproto.goproto_stringer_all"]);
                if (object[".gogoproto.verbose_equal_all"] != null)
                    message[".gogoproto.verbose_equal_all"] = Boolean(object[".gogoproto.verbose_equal_all"]);
                if (object[".gogoproto.face_all"] != null)
                    message[".gogoproto.face_all"] = Boolean(object[".gogoproto.face_all"]);
                if (object[".gogoproto.gostring_all"] != null)
                    message[".gogoproto.gostring_all"] = Boolean(object[".gogoproto.gostring_all"]);
                if (object[".gogoproto.populate_all"] != null)
                    message[".gogoproto.populate_all"] = Boolean(object[".gogoproto.populate_all"]);
                if (object[".gogoproto.stringer_all"] != null)
                    message[".gogoproto.stringer_all"] = Boolean(object[".gogoproto.stringer_all"]);
                if (object[".gogoproto.onlyone_all"] != null)
                    message[".gogoproto.onlyone_all"] = Boolean(object[".gogoproto.onlyone_all"]);
                if (object[".gogoproto.equal_all"] != null)
                    message[".gogoproto.equal_all"] = Boolean(object[".gogoproto.equal_all"]);
                if (object[".gogoproto.description_all"] != null)
                    message[".gogoproto.description_all"] = Boolean(object[".gogoproto.description_all"]);
                if (object[".gogoproto.testgen_all"] != null)
                    message[".gogoproto.testgen_all"] = Boolean(object[".gogoproto.testgen_all"]);
                if (object[".gogoproto.benchgen_all"] != null)
                    message[".gogoproto.benchgen_all"] = Boolean(object[".gogoproto.benchgen_all"]);
                if (object[".gogoproto.marshaler_all"] != null)
                    message[".gogoproto.marshaler_all"] = Boolean(object[".gogoproto.marshaler_all"]);
                if (object[".gogoproto.unmarshaler_all"] != null)
                    message[".gogoproto.unmarshaler_all"] = Boolean(object[".gogoproto.unmarshaler_all"]);
                if (object[".gogoproto.stable_marshaler_all"] != null)
                    message[".gogoproto.stable_marshaler_all"] = Boolean(object[".gogoproto.stable_marshaler_all"]);
                if (object[".gogoproto.sizer_all"] != null)
                    message[".gogoproto.sizer_all"] = Boolean(object[".gogoproto.sizer_all"]);
                if (object[".gogoproto.goproto_enum_stringer_all"] != null)
                    message[".gogoproto.goproto_enum_stringer_all"] = Boolean(object[".gogoproto.goproto_enum_stringer_all"]);
                if (object[".gogoproto.enum_stringer_all"] != null)
                    message[".gogoproto.enum_stringer_all"] = Boolean(object[".gogoproto.enum_stringer_all"]);
                if (object[".gogoproto.unsafe_marshaler_all"] != null)
                    message[".gogoproto.unsafe_marshaler_all"] = Boolean(object[".gogoproto.unsafe_marshaler_all"]);
                if (object[".gogoproto.unsafe_unmarshaler_all"] != null)
                    message[".gogoproto.unsafe_unmarshaler_all"] = Boolean(object[".gogoproto.unsafe_unmarshaler_all"]);
                if (object[".gogoproto.goproto_extensions_map_all"] != null)
                    message[".gogoproto.goproto_extensions_map_all"] = Boolean(object[".gogoproto.goproto_extensions_map_all"]);
                if (object[".gogoproto.goproto_unrecognized_all"] != null)
                    message[".gogoproto.goproto_unrecognized_all"] = Boolean(object[".gogoproto.goproto_unrecognized_all"]);
                if (object[".gogoproto.gogoproto_import"] != null)
                    message[".gogoproto.gogoproto_import"] = Boolean(object[".gogoproto.gogoproto_import"]);
                if (object[".gogoproto.protosizer_all"] != null)
                    message[".gogoproto.protosizer_all"] = Boolean(object[".gogoproto.protosizer_all"]);
                if (object[".gogoproto.compare_all"] != null)
                    message[".gogoproto.compare_all"] = Boolean(object[".gogoproto.compare_all"]);
                if (object[".gogoproto.typedecl_all"] != null)
                    message[".gogoproto.typedecl_all"] = Boolean(object[".gogoproto.typedecl_all"]);
                if (object[".gogoproto.enumdecl_all"] != null)
                    message[".gogoproto.enumdecl_all"] = Boolean(object[".gogoproto.enumdecl_all"]);
                if (object[".gogoproto.goproto_registration"] != null)
                    message[".gogoproto.goproto_registration"] = Boolean(object[".gogoproto.goproto_registration"]);
                if (object[".gogoproto.messagename_all"] != null)
                    message[".gogoproto.messagename_all"] = Boolean(object[".gogoproto.messagename_all"]);
                if (object[".gogoproto.goproto_sizecache_all"] != null)
                    message[".gogoproto.goproto_sizecache_all"] = Boolean(object[".gogoproto.goproto_sizecache_all"]);
                if (object[".gogoproto.goproto_unkeyed_all"] != null)
                    message[".gogoproto.goproto_unkeyed_all"] = Boolean(object[".gogoproto.goproto_unkeyed_all"]);
                return message;
            };

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.FileOptions
             * @static
             * @param {google.protobuf.FileOptions} message FileOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FileOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults) {
                    object.java_package = "";
                    object.java_outer_classname = "";
                    object.optimize_for = options.enums === String ? "SPEED" : 1;
                    object.java_multiple_files = false;
                    object.go_package = "";
                    object.cc_generic_services = false;
                    object.java_generic_services = false;
                    object.py_generic_services = false;
                    object.java_generate_equals_and_hash = false;
                    object.deprecated = false;
                    object.java_string_check_utf8 = false;
                    object.cc_enable_arenas = false;
                    object.objc_class_prefix = "";
                    object.csharp_namespace = "";
                    object[".gogoproto.goproto_getters_all"] = false;
                    object[".gogoproto.goproto_enum_prefix_all"] = false;
                    object[".gogoproto.goproto_stringer_all"] = false;
                    object[".gogoproto.verbose_equal_all"] = false;
                    object[".gogoproto.face_all"] = false;
                    object[".gogoproto.gostring_all"] = false;
                    object[".gogoproto.populate_all"] = false;
                    object[".gogoproto.stringer_all"] = false;
                    object[".gogoproto.onlyone_all"] = false;
                    object[".gogoproto.equal_all"] = false;
                    object[".gogoproto.description_all"] = false;
                    object[".gogoproto.testgen_all"] = false;
                    object[".gogoproto.benchgen_all"] = false;
                    object[".gogoproto.marshaler_all"] = false;
                    object[".gogoproto.unmarshaler_all"] = false;
                    object[".gogoproto.stable_marshaler_all"] = false;
                    object[".gogoproto.sizer_all"] = false;
                    object[".gogoproto.goproto_enum_stringer_all"] = false;
                    object[".gogoproto.enum_stringer_all"] = false;
                    object[".gogoproto.unsafe_marshaler_all"] = false;
                    object[".gogoproto.unsafe_unmarshaler_all"] = false;
                    object[".gogoproto.goproto_extensions_map_all"] = false;
                    object[".gogoproto.goproto_unrecognized_all"] = false;
                    object[".gogoproto.gogoproto_import"] = false;
                    object[".gogoproto.protosizer_all"] = false;
                    object[".gogoproto.compare_all"] = false;
                    object[".gogoproto.typedecl_all"] = false;
                    object[".gogoproto.enumdecl_all"] = false;
                    object[".gogoproto.goproto_registration"] = false;
                    object[".gogoproto.messagename_all"] = false;
                    object[".gogoproto.goproto_sizecache_all"] = false;
                    object[".gogoproto.goproto_unkeyed_all"] = false;
                }
                if (message.java_package != null && message.hasOwnProperty("java_package"))
                    object.java_package = message.java_package;
                if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                    object.java_outer_classname = message.java_outer_classname;
                if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                    object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                    object.java_multiple_files = message.java_multiple_files;
                if (message.go_package != null && message.hasOwnProperty("go_package"))
                    object.go_package = message.go_package;
                if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                    object.cc_generic_services = message.cc_generic_services;
                if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                    object.java_generic_services = message.java_generic_services;
                if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                    object.py_generic_services = message.py_generic_services;
                if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                    object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                    object.java_string_check_utf8 = message.java_string_check_utf8;
                if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                    object.cc_enable_arenas = message.cc_enable_arenas;
                if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                    object.objc_class_prefix = message.objc_class_prefix;
                if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                    object.csharp_namespace = message.csharp_namespace;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                if (message[".gogoproto.goproto_getters_all"] != null && message.hasOwnProperty(".gogoproto.goproto_getters_all"))
                    object[".gogoproto.goproto_getters_all"] = message[".gogoproto.goproto_getters_all"];
                if (message[".gogoproto.goproto_enum_prefix_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix_all"))
                    object[".gogoproto.goproto_enum_prefix_all"] = message[".gogoproto.goproto_enum_prefix_all"];
                if (message[".gogoproto.goproto_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer_all"))
                    object[".gogoproto.goproto_stringer_all"] = message[".gogoproto.goproto_stringer_all"];
                if (message[".gogoproto.verbose_equal_all"] != null && message.hasOwnProperty(".gogoproto.verbose_equal_all"))
                    object[".gogoproto.verbose_equal_all"] = message[".gogoproto.verbose_equal_all"];
                if (message[".gogoproto.face_all"] != null && message.hasOwnProperty(".gogoproto.face_all"))
                    object[".gogoproto.face_all"] = message[".gogoproto.face_all"];
                if (message[".gogoproto.gostring_all"] != null && message.hasOwnProperty(".gogoproto.gostring_all"))
                    object[".gogoproto.gostring_all"] = message[".gogoproto.gostring_all"];
                if (message[".gogoproto.populate_all"] != null && message.hasOwnProperty(".gogoproto.populate_all"))
                    object[".gogoproto.populate_all"] = message[".gogoproto.populate_all"];
                if (message[".gogoproto.stringer_all"] != null && message.hasOwnProperty(".gogoproto.stringer_all"))
                    object[".gogoproto.stringer_all"] = message[".gogoproto.stringer_all"];
                if (message[".gogoproto.onlyone_all"] != null && message.hasOwnProperty(".gogoproto.onlyone_all"))
                    object[".gogoproto.onlyone_all"] = message[".gogoproto.onlyone_all"];
                if (message[".gogoproto.equal_all"] != null && message.hasOwnProperty(".gogoproto.equal_all"))
                    object[".gogoproto.equal_all"] = message[".gogoproto.equal_all"];
                if (message[".gogoproto.description_all"] != null && message.hasOwnProperty(".gogoproto.description_all"))
                    object[".gogoproto.description_all"] = message[".gogoproto.description_all"];
                if (message[".gogoproto.testgen_all"] != null && message.hasOwnProperty(".gogoproto.testgen_all"))
                    object[".gogoproto.testgen_all"] = message[".gogoproto.testgen_all"];
                if (message[".gogoproto.benchgen_all"] != null && message.hasOwnProperty(".gogoproto.benchgen_all"))
                    object[".gogoproto.benchgen_all"] = message[".gogoproto.benchgen_all"];
                if (message[".gogoproto.marshaler_all"] != null && message.hasOwnProperty(".gogoproto.marshaler_all"))
                    object[".gogoproto.marshaler_all"] = message[".gogoproto.marshaler_all"];
                if (message[".gogoproto.unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unmarshaler_all"))
                    object[".gogoproto.unmarshaler_all"] = message[".gogoproto.unmarshaler_all"];
                if (message[".gogoproto.stable_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler_all"))
                    object[".gogoproto.stable_marshaler_all"] = message[".gogoproto.stable_marshaler_all"];
                if (message[".gogoproto.sizer_all"] != null && message.hasOwnProperty(".gogoproto.sizer_all"))
                    object[".gogoproto.sizer_all"] = message[".gogoproto.sizer_all"];
                if (message[".gogoproto.goproto_enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer_all"))
                    object[".gogoproto.goproto_enum_stringer_all"] = message[".gogoproto.goproto_enum_stringer_all"];
                if (message[".gogoproto.enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.enum_stringer_all"))
                    object[".gogoproto.enum_stringer_all"] = message[".gogoproto.enum_stringer_all"];
                if (message[".gogoproto.unsafe_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler_all"))
                    object[".gogoproto.unsafe_marshaler_all"] = message[".gogoproto.unsafe_marshaler_all"];
                if (message[".gogoproto.unsafe_unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler_all"))
                    object[".gogoproto.unsafe_unmarshaler_all"] = message[".gogoproto.unsafe_unmarshaler_all"];
                if (message[".gogoproto.goproto_extensions_map_all"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map_all"))
                    object[".gogoproto.goproto_extensions_map_all"] = message[".gogoproto.goproto_extensions_map_all"];
                if (message[".gogoproto.goproto_unrecognized_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized_all"))
                    object[".gogoproto.goproto_unrecognized_all"] = message[".gogoproto.goproto_unrecognized_all"];
                if (message[".gogoproto.gogoproto_import"] != null && message.hasOwnProperty(".gogoproto.gogoproto_import"))
                    object[".gogoproto.gogoproto_import"] = message[".gogoproto.gogoproto_import"];
                if (message[".gogoproto.protosizer_all"] != null && message.hasOwnProperty(".gogoproto.protosizer_all"))
                    object[".gogoproto.protosizer_all"] = message[".gogoproto.protosizer_all"];
                if (message[".gogoproto.compare_all"] != null && message.hasOwnProperty(".gogoproto.compare_all"))
                    object[".gogoproto.compare_all"] = message[".gogoproto.compare_all"];
                if (message[".gogoproto.typedecl_all"] != null && message.hasOwnProperty(".gogoproto.typedecl_all"))
                    object[".gogoproto.typedecl_all"] = message[".gogoproto.typedecl_all"];
                if (message[".gogoproto.enumdecl_all"] != null && message.hasOwnProperty(".gogoproto.enumdecl_all"))
                    object[".gogoproto.enumdecl_all"] = message[".gogoproto.enumdecl_all"];
                if (message[".gogoproto.goproto_registration"] != null && message.hasOwnProperty(".gogoproto.goproto_registration"))
                    object[".gogoproto.goproto_registration"] = message[".gogoproto.goproto_registration"];
                if (message[".gogoproto.messagename_all"] != null && message.hasOwnProperty(".gogoproto.messagename_all"))
                    object[".gogoproto.messagename_all"] = message[".gogoproto.messagename_all"];
                if (message[".gogoproto.goproto_sizecache_all"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache_all"))
                    object[".gogoproto.goproto_sizecache_all"] = message[".gogoproto.goproto_sizecache_all"];
                if (message[".gogoproto.goproto_unkeyed_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed_all"))
                    object[".gogoproto.goproto_unkeyed_all"] = message[".gogoproto.goproto_unkeyed_all"];
                return object;
            };

            /**
             * Converts this FileOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.FileOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FileOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * OptimizeMode enum.
             * @name google.protobuf.FileOptions.OptimizeMode
             * @enum {number}
             * @property {number} SPEED=1 SPEED value
             * @property {number} CODE_SIZE=2 CODE_SIZE value
             * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
             */
            FileOptions.OptimizeMode = (function() {
                const valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "SPEED"] = 1;
                values[valuesById[2] = "CODE_SIZE"] = 2;
                values[valuesById[3] = "LITE_RUNTIME"] = 3;
                return values;
            })();

            return FileOptions;
        })();

        protobuf.MessageOptions = (function() {

            /**
             * Properties of a MessageOptions.
             * @memberof google.protobuf
             * @interface IMessageOptions
             * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
             * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
             * @property {boolean|null} [deprecated] MessageOptions deprecated
             * @property {boolean|null} [map_entry] MessageOptions map_entry
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
             * @property {string|null} [".cosmos_proto.interface_type"] MessageOptions .cosmos_proto.interface_type
             * @property {string|null} [".cosmos_proto.implements_interface"] MessageOptions .cosmos_proto.implements_interface
             * @property {boolean|null} [".gogoproto.goproto_getters"] MessageOptions .gogoproto.goproto_getters
             * @property {boolean|null} [".gogoproto.goproto_stringer"] MessageOptions .gogoproto.goproto_stringer
             * @property {boolean|null} [".gogoproto.verbose_equal"] MessageOptions .gogoproto.verbose_equal
             * @property {boolean|null} [".gogoproto.face"] MessageOptions .gogoproto.face
             * @property {boolean|null} [".gogoproto.gostring"] MessageOptions .gogoproto.gostring
             * @property {boolean|null} [".gogoproto.populate"] MessageOptions .gogoproto.populate
             * @property {boolean|null} [".gogoproto.stringer"] MessageOptions .gogoproto.stringer
             * @property {boolean|null} [".gogoproto.onlyone"] MessageOptions .gogoproto.onlyone
             * @property {boolean|null} [".gogoproto.equal"] MessageOptions .gogoproto.equal
             * @property {boolean|null} [".gogoproto.description"] MessageOptions .gogoproto.description
             * @property {boolean|null} [".gogoproto.testgen"] MessageOptions .gogoproto.testgen
             * @property {boolean|null} [".gogoproto.benchgen"] MessageOptions .gogoproto.benchgen
             * @property {boolean|null} [".gogoproto.marshaler"] MessageOptions .gogoproto.marshaler
             * @property {boolean|null} [".gogoproto.unmarshaler"] MessageOptions .gogoproto.unmarshaler
             * @property {boolean|null} [".gogoproto.stable_marshaler"] MessageOptions .gogoproto.stable_marshaler
             * @property {boolean|null} [".gogoproto.sizer"] MessageOptions .gogoproto.sizer
             * @property {boolean|null} [".gogoproto.unsafe_marshaler"] MessageOptions .gogoproto.unsafe_marshaler
             * @property {boolean|null} [".gogoproto.unsafe_unmarshaler"] MessageOptions .gogoproto.unsafe_unmarshaler
             * @property {boolean|null} [".gogoproto.goproto_extensions_map"] MessageOptions .gogoproto.goproto_extensions_map
             * @property {boolean|null} [".gogoproto.goproto_unrecognized"] MessageOptions .gogoproto.goproto_unrecognized
             * @property {boolean|null} [".gogoproto.protosizer"] MessageOptions .gogoproto.protosizer
             * @property {boolean|null} [".gogoproto.compare"] MessageOptions .gogoproto.compare
             * @property {boolean|null} [".gogoproto.typedecl"] MessageOptions .gogoproto.typedecl
             * @property {boolean|null} [".gogoproto.messagename"] MessageOptions .gogoproto.messagename
             * @property {boolean|null} [".gogoproto.goproto_sizecache"] MessageOptions .gogoproto.goproto_sizecache
             * @property {boolean|null} [".gogoproto.goproto_unkeyed"] MessageOptions .gogoproto.goproto_unkeyed
             */

            /**
             * Constructs a new MessageOptions.
             * @memberof google.protobuf
             * @classdesc Represents a MessageOptions.
             * @implements IMessageOptions
             * @constructor
             * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
             */
            function MessageOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MessageOptions message_set_wire_format.
             * @member {boolean} message_set_wire_format
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype.message_set_wire_format = false;

            /**
             * MessageOptions no_standard_descriptor_accessor.
             * @member {boolean} no_standard_descriptor_accessor
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype.no_standard_descriptor_accessor = false;

            /**
             * MessageOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype.deprecated = false;

            /**
             * MessageOptions map_entry.
             * @member {boolean} map_entry
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype.map_entry = false;

            /**
             * MessageOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * MessageOptions .cosmos_proto.interface_type.
             * @member {string} .cosmos_proto.interface_type
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".cosmos_proto.interface_type"] = "";

            /**
             * MessageOptions .cosmos_proto.implements_interface.
             * @member {string} .cosmos_proto.implements_interface
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".cosmos_proto.implements_interface"] = "";

            /**
             * MessageOptions .gogoproto.goproto_getters.
             * @member {boolean} .gogoproto.goproto_getters
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.goproto_getters"] = false;

            /**
             * MessageOptions .gogoproto.goproto_stringer.
             * @member {boolean} .gogoproto.goproto_stringer
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.goproto_stringer"] = false;

            /**
             * MessageOptions .gogoproto.verbose_equal.
             * @member {boolean} .gogoproto.verbose_equal
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.verbose_equal"] = false;

            /**
             * MessageOptions .gogoproto.face.
             * @member {boolean} .gogoproto.face
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.face"] = false;

            /**
             * MessageOptions .gogoproto.gostring.
             * @member {boolean} .gogoproto.gostring
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.gostring"] = false;

            /**
             * MessageOptions .gogoproto.populate.
             * @member {boolean} .gogoproto.populate
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.populate"] = false;

            /**
             * MessageOptions .gogoproto.stringer.
             * @member {boolean} .gogoproto.stringer
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.stringer"] = false;

            /**
             * MessageOptions .gogoproto.onlyone.
             * @member {boolean} .gogoproto.onlyone
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.onlyone"] = false;

            /**
             * MessageOptions .gogoproto.equal.
             * @member {boolean} .gogoproto.equal
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.equal"] = false;

            /**
             * MessageOptions .gogoproto.description.
             * @member {boolean} .gogoproto.description
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.description"] = false;

            /**
             * MessageOptions .gogoproto.testgen.
             * @member {boolean} .gogoproto.testgen
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.testgen"] = false;

            /**
             * MessageOptions .gogoproto.benchgen.
             * @member {boolean} .gogoproto.benchgen
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.benchgen"] = false;

            /**
             * MessageOptions .gogoproto.marshaler.
             * @member {boolean} .gogoproto.marshaler
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.marshaler"] = false;

            /**
             * MessageOptions .gogoproto.unmarshaler.
             * @member {boolean} .gogoproto.unmarshaler
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.unmarshaler"] = false;

            /**
             * MessageOptions .gogoproto.stable_marshaler.
             * @member {boolean} .gogoproto.stable_marshaler
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.stable_marshaler"] = false;

            /**
             * MessageOptions .gogoproto.sizer.
             * @member {boolean} .gogoproto.sizer
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.sizer"] = false;

            /**
             * MessageOptions .gogoproto.unsafe_marshaler.
             * @member {boolean} .gogoproto.unsafe_marshaler
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.unsafe_marshaler"] = false;

            /**
             * MessageOptions .gogoproto.unsafe_unmarshaler.
             * @member {boolean} .gogoproto.unsafe_unmarshaler
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.unsafe_unmarshaler"] = false;

            /**
             * MessageOptions .gogoproto.goproto_extensions_map.
             * @member {boolean} .gogoproto.goproto_extensions_map
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.goproto_extensions_map"] = false;

            /**
             * MessageOptions .gogoproto.goproto_unrecognized.
             * @member {boolean} .gogoproto.goproto_unrecognized
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.goproto_unrecognized"] = false;

            /**
             * MessageOptions .gogoproto.protosizer.
             * @member {boolean} .gogoproto.protosizer
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.protosizer"] = false;

            /**
             * MessageOptions .gogoproto.compare.
             * @member {boolean} .gogoproto.compare
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.compare"] = false;

            /**
             * MessageOptions .gogoproto.typedecl.
             * @member {boolean} .gogoproto.typedecl
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.typedecl"] = false;

            /**
             * MessageOptions .gogoproto.messagename.
             * @member {boolean} .gogoproto.messagename
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.messagename"] = false;

            /**
             * MessageOptions .gogoproto.goproto_sizecache.
             * @member {boolean} .gogoproto.goproto_sizecache
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.goproto_sizecache"] = false;

            /**
             * MessageOptions .gogoproto.goproto_unkeyed.
             * @member {boolean} .gogoproto.goproto_unkeyed
             * @memberof google.protobuf.MessageOptions
             * @instance
             */
            MessageOptions.prototype[".gogoproto.goproto_unkeyed"] = false;

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MessageOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.message_set_wire_format != null && Object.hasOwnProperty.call(message, "message_set_wire_format"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                if (message.no_standard_descriptor_accessor != null && Object.hasOwnProperty.call(message, "no_standard_descriptor_accessor"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                if (message.map_entry != null && Object.hasOwnProperty.call(message, "map_entry"))
                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.map_entry);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                if (message[".gogoproto.goproto_getters"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_getters"))
                    writer.uint32(/* id 64001, wireType 0 =*/512008).bool(message[".gogoproto.goproto_getters"]);
                if (message[".gogoproto.goproto_stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_stringer"))
                    writer.uint32(/* id 64003, wireType 0 =*/512024).bool(message[".gogoproto.goproto_stringer"]);
                if (message[".gogoproto.verbose_equal"] != null && Object.hasOwnProperty.call(message, ".gogoproto.verbose_equal"))
                    writer.uint32(/* id 64004, wireType 0 =*/512032).bool(message[".gogoproto.verbose_equal"]);
                if (message[".gogoproto.face"] != null && Object.hasOwnProperty.call(message, ".gogoproto.face"))
                    writer.uint32(/* id 64005, wireType 0 =*/512040).bool(message[".gogoproto.face"]);
                if (message[".gogoproto.gostring"] != null && Object.hasOwnProperty.call(message, ".gogoproto.gostring"))
                    writer.uint32(/* id 64006, wireType 0 =*/512048).bool(message[".gogoproto.gostring"]);
                if (message[".gogoproto.populate"] != null && Object.hasOwnProperty.call(message, ".gogoproto.populate"))
                    writer.uint32(/* id 64007, wireType 0 =*/512056).bool(message[".gogoproto.populate"]);
                if (message[".gogoproto.onlyone"] != null && Object.hasOwnProperty.call(message, ".gogoproto.onlyone"))
                    writer.uint32(/* id 64009, wireType 0 =*/512072).bool(message[".gogoproto.onlyone"]);
                if (message[".gogoproto.equal"] != null && Object.hasOwnProperty.call(message, ".gogoproto.equal"))
                    writer.uint32(/* id 64013, wireType 0 =*/512104).bool(message[".gogoproto.equal"]);
                if (message[".gogoproto.description"] != null && Object.hasOwnProperty.call(message, ".gogoproto.description"))
                    writer.uint32(/* id 64014, wireType 0 =*/512112).bool(message[".gogoproto.description"]);
                if (message[".gogoproto.testgen"] != null && Object.hasOwnProperty.call(message, ".gogoproto.testgen"))
                    writer.uint32(/* id 64015, wireType 0 =*/512120).bool(message[".gogoproto.testgen"]);
                if (message[".gogoproto.benchgen"] != null && Object.hasOwnProperty.call(message, ".gogoproto.benchgen"))
                    writer.uint32(/* id 64016, wireType 0 =*/512128).bool(message[".gogoproto.benchgen"]);
                if (message[".gogoproto.marshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.marshaler"))
                    writer.uint32(/* id 64017, wireType 0 =*/512136).bool(message[".gogoproto.marshaler"]);
                if (message[".gogoproto.unmarshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unmarshaler"))
                    writer.uint32(/* id 64018, wireType 0 =*/512144).bool(message[".gogoproto.unmarshaler"]);
                if (message[".gogoproto.stable_marshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stable_marshaler"))
                    writer.uint32(/* id 64019, wireType 0 =*/512152).bool(message[".gogoproto.stable_marshaler"]);
                if (message[".gogoproto.sizer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.sizer"))
                    writer.uint32(/* id 64020, wireType 0 =*/512160).bool(message[".gogoproto.sizer"]);
                if (message[".gogoproto.unsafe_marshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_marshaler"))
                    writer.uint32(/* id 64023, wireType 0 =*/512184).bool(message[".gogoproto.unsafe_marshaler"]);
                if (message[".gogoproto.unsafe_unmarshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_unmarshaler"))
                    writer.uint32(/* id 64024, wireType 0 =*/512192).bool(message[".gogoproto.unsafe_unmarshaler"]);
                if (message[".gogoproto.goproto_extensions_map"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_extensions_map"))
                    writer.uint32(/* id 64025, wireType 0 =*/512200).bool(message[".gogoproto.goproto_extensions_map"]);
                if (message[".gogoproto.goproto_unrecognized"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unrecognized"))
                    writer.uint32(/* id 64026, wireType 0 =*/512208).bool(message[".gogoproto.goproto_unrecognized"]);
                if (message[".gogoproto.protosizer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.protosizer"))
                    writer.uint32(/* id 64028, wireType 0 =*/512224).bool(message[".gogoproto.protosizer"]);
                if (message[".gogoproto.compare"] != null && Object.hasOwnProperty.call(message, ".gogoproto.compare"))
                    writer.uint32(/* id 64029, wireType 0 =*/512232).bool(message[".gogoproto.compare"]);
                if (message[".gogoproto.typedecl"] != null && Object.hasOwnProperty.call(message, ".gogoproto.typedecl"))
                    writer.uint32(/* id 64030, wireType 0 =*/512240).bool(message[".gogoproto.typedecl"]);
                if (message[".gogoproto.messagename"] != null && Object.hasOwnProperty.call(message, ".gogoproto.messagename"))
                    writer.uint32(/* id 64033, wireType 0 =*/512264).bool(message[".gogoproto.messagename"]);
                if (message[".gogoproto.goproto_sizecache"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_sizecache"))
                    writer.uint32(/* id 64034, wireType 0 =*/512272).bool(message[".gogoproto.goproto_sizecache"]);
                if (message[".gogoproto.goproto_unkeyed"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unkeyed"))
                    writer.uint32(/* id 64035, wireType 0 =*/512280).bool(message[".gogoproto.goproto_unkeyed"]);
                if (message[".gogoproto.stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stringer"))
                    writer.uint32(/* id 67008, wireType 0 =*/536064).bool(message[".gogoproto.stringer"]);
                if (message[".cosmos_proto.interface_type"] != null && Object.hasOwnProperty.call(message, ".cosmos_proto.interface_type"))
                    writer.uint32(/* id 93001, wireType 2 =*/744010).string(message[".cosmos_proto.interface_type"]);
                if (message[".cosmos_proto.implements_interface"] != null && Object.hasOwnProperty.call(message, ".cosmos_proto.implements_interface"))
                    writer.uint32(/* id 93002, wireType 2 =*/744018).string(message[".cosmos_proto.implements_interface"]);
                return writer;
            };

            /**
             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.MessageOptions} MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MessageOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.message_set_wire_format = reader.bool();
                        break;
                    case 2:
                        message.no_standard_descriptor_accessor = reader.bool();
                        break;
                    case 3:
                        message.deprecated = reader.bool();
                        break;
                    case 7:
                        message.map_entry = reader.bool();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    case 93001:
                        message[".cosmos_proto.interface_type"] = reader.string();
                        break;
                    case 93002:
                        message[".cosmos_proto.implements_interface"] = reader.string();
                        break;
                    case 64001:
                        message[".gogoproto.goproto_getters"] = reader.bool();
                        break;
                    case 64003:
                        message[".gogoproto.goproto_stringer"] = reader.bool();
                        break;
                    case 64004:
                        message[".gogoproto.verbose_equal"] = reader.bool();
                        break;
                    case 64005:
                        message[".gogoproto.face"] = reader.bool();
                        break;
                    case 64006:
                        message[".gogoproto.gostring"] = reader.bool();
                        break;
                    case 64007:
                        message[".gogoproto.populate"] = reader.bool();
                        break;
                    case 67008:
                        message[".gogoproto.stringer"] = reader.bool();
                        break;
                    case 64009:
                        message[".gogoproto.onlyone"] = reader.bool();
                        break;
                    case 64013:
                        message[".gogoproto.equal"] = reader.bool();
                        break;
                    case 64014:
                        message[".gogoproto.description"] = reader.bool();
                        break;
                    case 64015:
                        message[".gogoproto.testgen"] = reader.bool();
                        break;
                    case 64016:
                        message[".gogoproto.benchgen"] = reader.bool();
                        break;
                    case 64017:
                        message[".gogoproto.marshaler"] = reader.bool();
                        break;
                    case 64018:
                        message[".gogoproto.unmarshaler"] = reader.bool();
                        break;
                    case 64019:
                        message[".gogoproto.stable_marshaler"] = reader.bool();
                        break;
                    case 64020:
                        message[".gogoproto.sizer"] = reader.bool();
                        break;
                    case 64023:
                        message[".gogoproto.unsafe_marshaler"] = reader.bool();
                        break;
                    case 64024:
                        message[".gogoproto.unsafe_unmarshaler"] = reader.bool();
                        break;
                    case 64025:
                        message[".gogoproto.goproto_extensions_map"] = reader.bool();
                        break;
                    case 64026:
                        message[".gogoproto.goproto_unrecognized"] = reader.bool();
                        break;
                    case 64028:
                        message[".gogoproto.protosizer"] = reader.bool();
                        break;
                    case 64029:
                        message[".gogoproto.compare"] = reader.bool();
                        break;
                    case 64030:
                        message[".gogoproto.typedecl"] = reader.bool();
                        break;
                    case 64033:
                        message[".gogoproto.messagename"] = reader.bool();
                        break;
                    case 64034:
                        message[".gogoproto.goproto_sizecache"] = reader.bool();
                        break;
                    case 64035:
                        message[".gogoproto.goproto_unkeyed"] = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.MessageOptions} MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MessageOptions message.
             * @function verify
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MessageOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                    if (typeof message.message_set_wire_format !== "boolean")
                        return "message_set_wire_format: boolean expected";
                if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                    if (typeof message.no_standard_descriptor_accessor !== "boolean")
                        return "no_standard_descriptor_accessor: boolean expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                    if (typeof message.map_entry !== "boolean")
                        return "map_entry: boolean expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                if (message[".cosmos_proto.interface_type"] != null && message.hasOwnProperty(".cosmos_proto.interface_type"))
                    if (!$util.isString(message[".cosmos_proto.interface_type"]))
                        return ".cosmos_proto.interface_type: string expected";
                if (message[".cosmos_proto.implements_interface"] != null && message.hasOwnProperty(".cosmos_proto.implements_interface"))
                    if (!$util.isString(message[".cosmos_proto.implements_interface"]))
                        return ".cosmos_proto.implements_interface: string expected";
                if (message[".gogoproto.goproto_getters"] != null && message.hasOwnProperty(".gogoproto.goproto_getters"))
                    if (typeof message[".gogoproto.goproto_getters"] !== "boolean")
                        return ".gogoproto.goproto_getters: boolean expected";
                if (message[".gogoproto.goproto_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer"))
                    if (typeof message[".gogoproto.goproto_stringer"] !== "boolean")
                        return ".gogoproto.goproto_stringer: boolean expected";
                if (message[".gogoproto.verbose_equal"] != null && message.hasOwnProperty(".gogoproto.verbose_equal"))
                    if (typeof message[".gogoproto.verbose_equal"] !== "boolean")
                        return ".gogoproto.verbose_equal: boolean expected";
                if (message[".gogoproto.face"] != null && message.hasOwnProperty(".gogoproto.face"))
                    if (typeof message[".gogoproto.face"] !== "boolean")
                        return ".gogoproto.face: boolean expected";
                if (message[".gogoproto.gostring"] != null && message.hasOwnProperty(".gogoproto.gostring"))
                    if (typeof message[".gogoproto.gostring"] !== "boolean")
                        return ".gogoproto.gostring: boolean expected";
                if (message[".gogoproto.populate"] != null && message.hasOwnProperty(".gogoproto.populate"))
                    if (typeof message[".gogoproto.populate"] !== "boolean")
                        return ".gogoproto.populate: boolean expected";
                if (message[".gogoproto.stringer"] != null && message.hasOwnProperty(".gogoproto.stringer"))
                    if (typeof message[".gogoproto.stringer"] !== "boolean")
                        return ".gogoproto.stringer: boolean expected";
                if (message[".gogoproto.onlyone"] != null && message.hasOwnProperty(".gogoproto.onlyone"))
                    if (typeof message[".gogoproto.onlyone"] !== "boolean")
                        return ".gogoproto.onlyone: boolean expected";
                if (message[".gogoproto.equal"] != null && message.hasOwnProperty(".gogoproto.equal"))
                    if (typeof message[".gogoproto.equal"] !== "boolean")
                        return ".gogoproto.equal: boolean expected";
                if (message[".gogoproto.description"] != null && message.hasOwnProperty(".gogoproto.description"))
                    if (typeof message[".gogoproto.description"] !== "boolean")
                        return ".gogoproto.description: boolean expected";
                if (message[".gogoproto.testgen"] != null && message.hasOwnProperty(".gogoproto.testgen"))
                    if (typeof message[".gogoproto.testgen"] !== "boolean")
                        return ".gogoproto.testgen: boolean expected";
                if (message[".gogoproto.benchgen"] != null && message.hasOwnProperty(".gogoproto.benchgen"))
                    if (typeof message[".gogoproto.benchgen"] !== "boolean")
                        return ".gogoproto.benchgen: boolean expected";
                if (message[".gogoproto.marshaler"] != null && message.hasOwnProperty(".gogoproto.marshaler"))
                    if (typeof message[".gogoproto.marshaler"] !== "boolean")
                        return ".gogoproto.marshaler: boolean expected";
                if (message[".gogoproto.unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unmarshaler"))
                    if (typeof message[".gogoproto.unmarshaler"] !== "boolean")
                        return ".gogoproto.unmarshaler: boolean expected";
                if (message[".gogoproto.stable_marshaler"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler"))
                    if (typeof message[".gogoproto.stable_marshaler"] !== "boolean")
                        return ".gogoproto.stable_marshaler: boolean expected";
                if (message[".gogoproto.sizer"] != null && message.hasOwnProperty(".gogoproto.sizer"))
                    if (typeof message[".gogoproto.sizer"] !== "boolean")
                        return ".gogoproto.sizer: boolean expected";
                if (message[".gogoproto.unsafe_marshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler"))
                    if (typeof message[".gogoproto.unsafe_marshaler"] !== "boolean")
                        return ".gogoproto.unsafe_marshaler: boolean expected";
                if (message[".gogoproto.unsafe_unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler"))
                    if (typeof message[".gogoproto.unsafe_unmarshaler"] !== "boolean")
                        return ".gogoproto.unsafe_unmarshaler: boolean expected";
                if (message[".gogoproto.goproto_extensions_map"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map"))
                    if (typeof message[".gogoproto.goproto_extensions_map"] !== "boolean")
                        return ".gogoproto.goproto_extensions_map: boolean expected";
                if (message[".gogoproto.goproto_unrecognized"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized"))
                    if (typeof message[".gogoproto.goproto_unrecognized"] !== "boolean")
                        return ".gogoproto.goproto_unrecognized: boolean expected";
                if (message[".gogoproto.protosizer"] != null && message.hasOwnProperty(".gogoproto.protosizer"))
                    if (typeof message[".gogoproto.protosizer"] !== "boolean")
                        return ".gogoproto.protosizer: boolean expected";
                if (message[".gogoproto.compare"] != null && message.hasOwnProperty(".gogoproto.compare"))
                    if (typeof message[".gogoproto.compare"] !== "boolean")
                        return ".gogoproto.compare: boolean expected";
                if (message[".gogoproto.typedecl"] != null && message.hasOwnProperty(".gogoproto.typedecl"))
                    if (typeof message[".gogoproto.typedecl"] !== "boolean")
                        return ".gogoproto.typedecl: boolean expected";
                if (message[".gogoproto.messagename"] != null && message.hasOwnProperty(".gogoproto.messagename"))
                    if (typeof message[".gogoproto.messagename"] !== "boolean")
                        return ".gogoproto.messagename: boolean expected";
                if (message[".gogoproto.goproto_sizecache"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache"))
                    if (typeof message[".gogoproto.goproto_sizecache"] !== "boolean")
                        return ".gogoproto.goproto_sizecache: boolean expected";
                if (message[".gogoproto.goproto_unkeyed"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed"))
                    if (typeof message[".gogoproto.goproto_unkeyed"] !== "boolean")
                        return ".gogoproto.goproto_unkeyed: boolean expected";
                return null;
            };

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.MessageOptions} MessageOptions
             */
            MessageOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.MessageOptions)
                    return object;
                let message = new $root.google.protobuf.MessageOptions();
                if (object.message_set_wire_format != null)
                    message.message_set_wire_format = Boolean(object.message_set_wire_format);
                if (object.no_standard_descriptor_accessor != null)
                    message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.map_entry != null)
                    message.map_entry = Boolean(object.map_entry);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                if (object[".cosmos_proto.interface_type"] != null)
                    message[".cosmos_proto.interface_type"] = String(object[".cosmos_proto.interface_type"]);
                if (object[".cosmos_proto.implements_interface"] != null)
                    message[".cosmos_proto.implements_interface"] = String(object[".cosmos_proto.implements_interface"]);
                if (object[".gogoproto.goproto_getters"] != null)
                    message[".gogoproto.goproto_getters"] = Boolean(object[".gogoproto.goproto_getters"]);
                if (object[".gogoproto.goproto_stringer"] != null)
                    message[".gogoproto.goproto_stringer"] = Boolean(object[".gogoproto.goproto_stringer"]);
                if (object[".gogoproto.verbose_equal"] != null)
                    message[".gogoproto.verbose_equal"] = Boolean(object[".gogoproto.verbose_equal"]);
                if (object[".gogoproto.face"] != null)
                    message[".gogoproto.face"] = Boolean(object[".gogoproto.face"]);
                if (object[".gogoproto.gostring"] != null)
                    message[".gogoproto.gostring"] = Boolean(object[".gogoproto.gostring"]);
                if (object[".gogoproto.populate"] != null)
                    message[".gogoproto.populate"] = Boolean(object[".gogoproto.populate"]);
                if (object[".gogoproto.stringer"] != null)
                    message[".gogoproto.stringer"] = Boolean(object[".gogoproto.stringer"]);
                if (object[".gogoproto.onlyone"] != null)
                    message[".gogoproto.onlyone"] = Boolean(object[".gogoproto.onlyone"]);
                if (object[".gogoproto.equal"] != null)
                    message[".gogoproto.equal"] = Boolean(object[".gogoproto.equal"]);
                if (object[".gogoproto.description"] != null)
                    message[".gogoproto.description"] = Boolean(object[".gogoproto.description"]);
                if (object[".gogoproto.testgen"] != null)
                    message[".gogoproto.testgen"] = Boolean(object[".gogoproto.testgen"]);
                if (object[".gogoproto.benchgen"] != null)
                    message[".gogoproto.benchgen"] = Boolean(object[".gogoproto.benchgen"]);
                if (object[".gogoproto.marshaler"] != null)
                    message[".gogoproto.marshaler"] = Boolean(object[".gogoproto.marshaler"]);
                if (object[".gogoproto.unmarshaler"] != null)
                    message[".gogoproto.unmarshaler"] = Boolean(object[".gogoproto.unmarshaler"]);
                if (object[".gogoproto.stable_marshaler"] != null)
                    message[".gogoproto.stable_marshaler"] = Boolean(object[".gogoproto.stable_marshaler"]);
                if (object[".gogoproto.sizer"] != null)
                    message[".gogoproto.sizer"] = Boolean(object[".gogoproto.sizer"]);
                if (object[".gogoproto.unsafe_marshaler"] != null)
                    message[".gogoproto.unsafe_marshaler"] = Boolean(object[".gogoproto.unsafe_marshaler"]);
                if (object[".gogoproto.unsafe_unmarshaler"] != null)
                    message[".gogoproto.unsafe_unmarshaler"] = Boolean(object[".gogoproto.unsafe_unmarshaler"]);
                if (object[".gogoproto.goproto_extensions_map"] != null)
                    message[".gogoproto.goproto_extensions_map"] = Boolean(object[".gogoproto.goproto_extensions_map"]);
                if (object[".gogoproto.goproto_unrecognized"] != null)
                    message[".gogoproto.goproto_unrecognized"] = Boolean(object[".gogoproto.goproto_unrecognized"]);
                if (object[".gogoproto.protosizer"] != null)
                    message[".gogoproto.protosizer"] = Boolean(object[".gogoproto.protosizer"]);
                if (object[".gogoproto.compare"] != null)
                    message[".gogoproto.compare"] = Boolean(object[".gogoproto.compare"]);
                if (object[".gogoproto.typedecl"] != null)
                    message[".gogoproto.typedecl"] = Boolean(object[".gogoproto.typedecl"]);
                if (object[".gogoproto.messagename"] != null)
                    message[".gogoproto.messagename"] = Boolean(object[".gogoproto.messagename"]);
                if (object[".gogoproto.goproto_sizecache"] != null)
                    message[".gogoproto.goproto_sizecache"] = Boolean(object[".gogoproto.goproto_sizecache"]);
                if (object[".gogoproto.goproto_unkeyed"] != null)
                    message[".gogoproto.goproto_unkeyed"] = Boolean(object[".gogoproto.goproto_unkeyed"]);
                return message;
            };

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.MessageOptions
             * @static
             * @param {google.protobuf.MessageOptions} message MessageOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MessageOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults) {
                    object.message_set_wire_format = false;
                    object.no_standard_descriptor_accessor = false;
                    object.deprecated = false;
                    object.map_entry = false;
                    object[".gogoproto.goproto_getters"] = false;
                    object[".gogoproto.goproto_stringer"] = false;
                    object[".gogoproto.verbose_equal"] = false;
                    object[".gogoproto.face"] = false;
                    object[".gogoproto.gostring"] = false;
                    object[".gogoproto.populate"] = false;
                    object[".gogoproto.onlyone"] = false;
                    object[".gogoproto.equal"] = false;
                    object[".gogoproto.description"] = false;
                    object[".gogoproto.testgen"] = false;
                    object[".gogoproto.benchgen"] = false;
                    object[".gogoproto.marshaler"] = false;
                    object[".gogoproto.unmarshaler"] = false;
                    object[".gogoproto.stable_marshaler"] = false;
                    object[".gogoproto.sizer"] = false;
                    object[".gogoproto.unsafe_marshaler"] = false;
                    object[".gogoproto.unsafe_unmarshaler"] = false;
                    object[".gogoproto.goproto_extensions_map"] = false;
                    object[".gogoproto.goproto_unrecognized"] = false;
                    object[".gogoproto.protosizer"] = false;
                    object[".gogoproto.compare"] = false;
                    object[".gogoproto.typedecl"] = false;
                    object[".gogoproto.messagename"] = false;
                    object[".gogoproto.goproto_sizecache"] = false;
                    object[".gogoproto.goproto_unkeyed"] = false;
                    object[".gogoproto.stringer"] = false;
                    object[".cosmos_proto.interface_type"] = "";
                    object[".cosmos_proto.implements_interface"] = "";
                }
                if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                    object.message_set_wire_format = message.message_set_wire_format;
                if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                    object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                    object.map_entry = message.map_entry;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                if (message[".gogoproto.goproto_getters"] != null && message.hasOwnProperty(".gogoproto.goproto_getters"))
                    object[".gogoproto.goproto_getters"] = message[".gogoproto.goproto_getters"];
                if (message[".gogoproto.goproto_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer"))
                    object[".gogoproto.goproto_stringer"] = message[".gogoproto.goproto_stringer"];
                if (message[".gogoproto.verbose_equal"] != null && message.hasOwnProperty(".gogoproto.verbose_equal"))
                    object[".gogoproto.verbose_equal"] = message[".gogoproto.verbose_equal"];
                if (message[".gogoproto.face"] != null && message.hasOwnProperty(".gogoproto.face"))
                    object[".gogoproto.face"] = message[".gogoproto.face"];
                if (message[".gogoproto.gostring"] != null && message.hasOwnProperty(".gogoproto.gostring"))
                    object[".gogoproto.gostring"] = message[".gogoproto.gostring"];
                if (message[".gogoproto.populate"] != null && message.hasOwnProperty(".gogoproto.populate"))
                    object[".gogoproto.populate"] = message[".gogoproto.populate"];
                if (message[".gogoproto.onlyone"] != null && message.hasOwnProperty(".gogoproto.onlyone"))
                    object[".gogoproto.onlyone"] = message[".gogoproto.onlyone"];
                if (message[".gogoproto.equal"] != null && message.hasOwnProperty(".gogoproto.equal"))
                    object[".gogoproto.equal"] = message[".gogoproto.equal"];
                if (message[".gogoproto.description"] != null && message.hasOwnProperty(".gogoproto.description"))
                    object[".gogoproto.description"] = message[".gogoproto.description"];
                if (message[".gogoproto.testgen"] != null && message.hasOwnProperty(".gogoproto.testgen"))
                    object[".gogoproto.testgen"] = message[".gogoproto.testgen"];
                if (message[".gogoproto.benchgen"] != null && message.hasOwnProperty(".gogoproto.benchgen"))
                    object[".gogoproto.benchgen"] = message[".gogoproto.benchgen"];
                if (message[".gogoproto.marshaler"] != null && message.hasOwnProperty(".gogoproto.marshaler"))
                    object[".gogoproto.marshaler"] = message[".gogoproto.marshaler"];
                if (message[".gogoproto.unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unmarshaler"))
                    object[".gogoproto.unmarshaler"] = message[".gogoproto.unmarshaler"];
                if (message[".gogoproto.stable_marshaler"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler"))
                    object[".gogoproto.stable_marshaler"] = message[".gogoproto.stable_marshaler"];
                if (message[".gogoproto.sizer"] != null && message.hasOwnProperty(".gogoproto.sizer"))
                    object[".gogoproto.sizer"] = message[".gogoproto.sizer"];
                if (message[".gogoproto.unsafe_marshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler"))
                    object[".gogoproto.unsafe_marshaler"] = message[".gogoproto.unsafe_marshaler"];
                if (message[".gogoproto.unsafe_unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler"))
                    object[".gogoproto.unsafe_unmarshaler"] = message[".gogoproto.unsafe_unmarshaler"];
                if (message[".gogoproto.goproto_extensions_map"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map"))
                    object[".gogoproto.goproto_extensions_map"] = message[".gogoproto.goproto_extensions_map"];
                if (message[".gogoproto.goproto_unrecognized"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized"))
                    object[".gogoproto.goproto_unrecognized"] = message[".gogoproto.goproto_unrecognized"];
                if (message[".gogoproto.protosizer"] != null && message.hasOwnProperty(".gogoproto.protosizer"))
                    object[".gogoproto.protosizer"] = message[".gogoproto.protosizer"];
                if (message[".gogoproto.compare"] != null && message.hasOwnProperty(".gogoproto.compare"))
                    object[".gogoproto.compare"] = message[".gogoproto.compare"];
                if (message[".gogoproto.typedecl"] != null && message.hasOwnProperty(".gogoproto.typedecl"))
                    object[".gogoproto.typedecl"] = message[".gogoproto.typedecl"];
                if (message[".gogoproto.messagename"] != null && message.hasOwnProperty(".gogoproto.messagename"))
                    object[".gogoproto.messagename"] = message[".gogoproto.messagename"];
                if (message[".gogoproto.goproto_sizecache"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache"))
                    object[".gogoproto.goproto_sizecache"] = message[".gogoproto.goproto_sizecache"];
                if (message[".gogoproto.goproto_unkeyed"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed"))
                    object[".gogoproto.goproto_unkeyed"] = message[".gogoproto.goproto_unkeyed"];
                if (message[".gogoproto.stringer"] != null && message.hasOwnProperty(".gogoproto.stringer"))
                    object[".gogoproto.stringer"] = message[".gogoproto.stringer"];
                if (message[".cosmos_proto.interface_type"] != null && message.hasOwnProperty(".cosmos_proto.interface_type"))
                    object[".cosmos_proto.interface_type"] = message[".cosmos_proto.interface_type"];
                if (message[".cosmos_proto.implements_interface"] != null && message.hasOwnProperty(".cosmos_proto.implements_interface"))
                    object[".cosmos_proto.implements_interface"] = message[".cosmos_proto.implements_interface"];
                return object;
            };

            /**
             * Converts this MessageOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.MessageOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MessageOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MessageOptions;
        })();

        protobuf.FieldOptions = (function() {

            /**
             * Properties of a FieldOptions.
             * @memberof google.protobuf
             * @interface IFieldOptions
             * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
             * @property {boolean|null} [packed] FieldOptions packed
             * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
             * @property {boolean|null} [lazy] FieldOptions lazy
             * @property {boolean|null} [deprecated] FieldOptions deprecated
             * @property {boolean|null} [weak] FieldOptions weak
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
             * @property {string|null} [".cosmos_proto.accepts_interface"] FieldOptions .cosmos_proto.accepts_interface
             * @property {boolean|null} [".gogoproto.nullable"] FieldOptions .gogoproto.nullable
             * @property {boolean|null} [".gogoproto.embed"] FieldOptions .gogoproto.embed
             * @property {string|null} [".gogoproto.customtype"] FieldOptions .gogoproto.customtype
             * @property {string|null} [".gogoproto.customname"] FieldOptions .gogoproto.customname
             * @property {string|null} [".gogoproto.jsontag"] FieldOptions .gogoproto.jsontag
             * @property {string|null} [".gogoproto.moretags"] FieldOptions .gogoproto.moretags
             * @property {string|null} [".gogoproto.casttype"] FieldOptions .gogoproto.casttype
             * @property {string|null} [".gogoproto.castkey"] FieldOptions .gogoproto.castkey
             * @property {string|null} [".gogoproto.castvalue"] FieldOptions .gogoproto.castvalue
             * @property {boolean|null} [".gogoproto.stdtime"] FieldOptions .gogoproto.stdtime
             * @property {boolean|null} [".gogoproto.stdduration"] FieldOptions .gogoproto.stdduration
             * @property {boolean|null} [".gogoproto.wktpointer"] FieldOptions .gogoproto.wktpointer
             * @property {string|null} [".gogoproto.castrepeated"] FieldOptions .gogoproto.castrepeated
             */

            /**
             * Constructs a new FieldOptions.
             * @memberof google.protobuf
             * @classdesc Represents a FieldOptions.
             * @implements IFieldOptions
             * @constructor
             * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
             */
            function FieldOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FieldOptions ctype.
             * @member {google.protobuf.FieldOptions.CType} ctype
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.ctype = 0;

            /**
             * FieldOptions packed.
             * @member {boolean} packed
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.packed = false;

            /**
             * FieldOptions jstype.
             * @member {google.protobuf.FieldOptions.JSType} jstype
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.jstype = 0;

            /**
             * FieldOptions lazy.
             * @member {boolean} lazy
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.lazy = false;

            /**
             * FieldOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.deprecated = false;

            /**
             * FieldOptions weak.
             * @member {boolean} weak
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.weak = false;

            /**
             * FieldOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * FieldOptions .cosmos_proto.accepts_interface.
             * @member {string} .cosmos_proto.accepts_interface
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".cosmos_proto.accepts_interface"] = "";

            /**
             * FieldOptions .gogoproto.nullable.
             * @member {boolean} .gogoproto.nullable
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.nullable"] = false;

            /**
             * FieldOptions .gogoproto.embed.
             * @member {boolean} .gogoproto.embed
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.embed"] = false;

            /**
             * FieldOptions .gogoproto.customtype.
             * @member {string} .gogoproto.customtype
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.customtype"] = "";

            /**
             * FieldOptions .gogoproto.customname.
             * @member {string} .gogoproto.customname
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.customname"] = "";

            /**
             * FieldOptions .gogoproto.jsontag.
             * @member {string} .gogoproto.jsontag
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.jsontag"] = "";

            /**
             * FieldOptions .gogoproto.moretags.
             * @member {string} .gogoproto.moretags
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.moretags"] = "";

            /**
             * FieldOptions .gogoproto.casttype.
             * @member {string} .gogoproto.casttype
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.casttype"] = "";

            /**
             * FieldOptions .gogoproto.castkey.
             * @member {string} .gogoproto.castkey
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.castkey"] = "";

            /**
             * FieldOptions .gogoproto.castvalue.
             * @member {string} .gogoproto.castvalue
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.castvalue"] = "";

            /**
             * FieldOptions .gogoproto.stdtime.
             * @member {boolean} .gogoproto.stdtime
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.stdtime"] = false;

            /**
             * FieldOptions .gogoproto.stdduration.
             * @member {boolean} .gogoproto.stdduration
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.stdduration"] = false;

            /**
             * FieldOptions .gogoproto.wktpointer.
             * @member {boolean} .gogoproto.wktpointer
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.wktpointer"] = false;

            /**
             * FieldOptions .gogoproto.castrepeated.
             * @member {string} .gogoproto.castrepeated
             * @memberof google.protobuf.FieldOptions
             * @instance
             */
            FieldOptions.prototype[".gogoproto.castrepeated"] = "";

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FieldOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                if (message[".gogoproto.nullable"] != null && Object.hasOwnProperty.call(message, ".gogoproto.nullable"))
                    writer.uint32(/* id 65001, wireType 0 =*/520008).bool(message[".gogoproto.nullable"]);
                if (message[".gogoproto.embed"] != null && Object.hasOwnProperty.call(message, ".gogoproto.embed"))
                    writer.uint32(/* id 65002, wireType 0 =*/520016).bool(message[".gogoproto.embed"]);
                if (message[".gogoproto.customtype"] != null && Object.hasOwnProperty.call(message, ".gogoproto.customtype"))
                    writer.uint32(/* id 65003, wireType 2 =*/520026).string(message[".gogoproto.customtype"]);
                if (message[".gogoproto.customname"] != null && Object.hasOwnProperty.call(message, ".gogoproto.customname"))
                    writer.uint32(/* id 65004, wireType 2 =*/520034).string(message[".gogoproto.customname"]);
                if (message[".gogoproto.jsontag"] != null && Object.hasOwnProperty.call(message, ".gogoproto.jsontag"))
                    writer.uint32(/* id 65005, wireType 2 =*/520042).string(message[".gogoproto.jsontag"]);
                if (message[".gogoproto.moretags"] != null && Object.hasOwnProperty.call(message, ".gogoproto.moretags"))
                    writer.uint32(/* id 65006, wireType 2 =*/520050).string(message[".gogoproto.moretags"]);
                if (message[".gogoproto.casttype"] != null && Object.hasOwnProperty.call(message, ".gogoproto.casttype"))
                    writer.uint32(/* id 65007, wireType 2 =*/520058).string(message[".gogoproto.casttype"]);
                if (message[".gogoproto.castkey"] != null && Object.hasOwnProperty.call(message, ".gogoproto.castkey"))
                    writer.uint32(/* id 65008, wireType 2 =*/520066).string(message[".gogoproto.castkey"]);
                if (message[".gogoproto.castvalue"] != null && Object.hasOwnProperty.call(message, ".gogoproto.castvalue"))
                    writer.uint32(/* id 65009, wireType 2 =*/520074).string(message[".gogoproto.castvalue"]);
                if (message[".gogoproto.stdtime"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stdtime"))
                    writer.uint32(/* id 65010, wireType 0 =*/520080).bool(message[".gogoproto.stdtime"]);
                if (message[".gogoproto.stdduration"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stdduration"))
                    writer.uint32(/* id 65011, wireType 0 =*/520088).bool(message[".gogoproto.stdduration"]);
                if (message[".gogoproto.wktpointer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.wktpointer"))
                    writer.uint32(/* id 65012, wireType 0 =*/520096).bool(message[".gogoproto.wktpointer"]);
                if (message[".gogoproto.castrepeated"] != null && Object.hasOwnProperty.call(message, ".gogoproto.castrepeated"))
                    writer.uint32(/* id 65013, wireType 2 =*/520106).string(message[".gogoproto.castrepeated"]);
                if (message[".cosmos_proto.accepts_interface"] != null && Object.hasOwnProperty.call(message, ".cosmos_proto.accepts_interface"))
                    writer.uint32(/* id 93001, wireType 2 =*/744010).string(message[".cosmos_proto.accepts_interface"]);
                return writer;
            };

            /**
             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.FieldOptions} FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FieldOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.ctype = reader.int32();
                        break;
                    case 2:
                        message.packed = reader.bool();
                        break;
                    case 6:
                        message.jstype = reader.int32();
                        break;
                    case 5:
                        message.lazy = reader.bool();
                        break;
                    case 3:
                        message.deprecated = reader.bool();
                        break;
                    case 10:
                        message.weak = reader.bool();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    case 93001:
                        message[".cosmos_proto.accepts_interface"] = reader.string();
                        break;
                    case 65001:
                        message[".gogoproto.nullable"] = reader.bool();
                        break;
                    case 65002:
                        message[".gogoproto.embed"] = reader.bool();
                        break;
                    case 65003:
                        message[".gogoproto.customtype"] = reader.string();
                        break;
                    case 65004:
                        message[".gogoproto.customname"] = reader.string();
                        break;
                    case 65005:
                        message[".gogoproto.jsontag"] = reader.string();
                        break;
                    case 65006:
                        message[".gogoproto.moretags"] = reader.string();
                        break;
                    case 65007:
                        message[".gogoproto.casttype"] = reader.string();
                        break;
                    case 65008:
                        message[".gogoproto.castkey"] = reader.string();
                        break;
                    case 65009:
                        message[".gogoproto.castvalue"] = reader.string();
                        break;
                    case 65010:
                        message[".gogoproto.stdtime"] = reader.bool();
                        break;
                    case 65011:
                        message[".gogoproto.stdduration"] = reader.bool();
                        break;
                    case 65012:
                        message[".gogoproto.wktpointer"] = reader.bool();
                        break;
                    case 65013:
                        message[".gogoproto.castrepeated"] = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.FieldOptions} FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FieldOptions message.
             * @function verify
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FieldOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.ctype != null && message.hasOwnProperty("ctype"))
                    switch (message.ctype) {
                    default:
                        return "ctype: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                        break;
                    }
                if (message.packed != null && message.hasOwnProperty("packed"))
                    if (typeof message.packed !== "boolean")
                        return "packed: boolean expected";
                if (message.jstype != null && message.hasOwnProperty("jstype"))
                    switch (message.jstype) {
                    default:
                        return "jstype: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                        break;
                    }
                if (message.lazy != null && message.hasOwnProperty("lazy"))
                    if (typeof message.lazy !== "boolean")
                        return "lazy: boolean expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.weak != null && message.hasOwnProperty("weak"))
                    if (typeof message.weak !== "boolean")
                        return "weak: boolean expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                if (message[".cosmos_proto.accepts_interface"] != null && message.hasOwnProperty(".cosmos_proto.accepts_interface"))
                    if (!$util.isString(message[".cosmos_proto.accepts_interface"]))
                        return ".cosmos_proto.accepts_interface: string expected";
                if (message[".gogoproto.nullable"] != null && message.hasOwnProperty(".gogoproto.nullable"))
                    if (typeof message[".gogoproto.nullable"] !== "boolean")
                        return ".gogoproto.nullable: boolean expected";
                if (message[".gogoproto.embed"] != null && message.hasOwnProperty(".gogoproto.embed"))
                    if (typeof message[".gogoproto.embed"] !== "boolean")
                        return ".gogoproto.embed: boolean expected";
                if (message[".gogoproto.customtype"] != null && message.hasOwnProperty(".gogoproto.customtype"))
                    if (!$util.isString(message[".gogoproto.customtype"]))
                        return ".gogoproto.customtype: string expected";
                if (message[".gogoproto.customname"] != null && message.hasOwnProperty(".gogoproto.customname"))
                    if (!$util.isString(message[".gogoproto.customname"]))
                        return ".gogoproto.customname: string expected";
                if (message[".gogoproto.jsontag"] != null && message.hasOwnProperty(".gogoproto.jsontag"))
                    if (!$util.isString(message[".gogoproto.jsontag"]))
                        return ".gogoproto.jsontag: string expected";
                if (message[".gogoproto.moretags"] != null && message.hasOwnProperty(".gogoproto.moretags"))
                    if (!$util.isString(message[".gogoproto.moretags"]))
                        return ".gogoproto.moretags: string expected";
                if (message[".gogoproto.casttype"] != null && message.hasOwnProperty(".gogoproto.casttype"))
                    if (!$util.isString(message[".gogoproto.casttype"]))
                        return ".gogoproto.casttype: string expected";
                if (message[".gogoproto.castkey"] != null && message.hasOwnProperty(".gogoproto.castkey"))
                    if (!$util.isString(message[".gogoproto.castkey"]))
                        return ".gogoproto.castkey: string expected";
                if (message[".gogoproto.castvalue"] != null && message.hasOwnProperty(".gogoproto.castvalue"))
                    if (!$util.isString(message[".gogoproto.castvalue"]))
                        return ".gogoproto.castvalue: string expected";
                if (message[".gogoproto.stdtime"] != null && message.hasOwnProperty(".gogoproto.stdtime"))
                    if (typeof message[".gogoproto.stdtime"] !== "boolean")
                        return ".gogoproto.stdtime: boolean expected";
                if (message[".gogoproto.stdduration"] != null && message.hasOwnProperty(".gogoproto.stdduration"))
                    if (typeof message[".gogoproto.stdduration"] !== "boolean")
                        return ".gogoproto.stdduration: boolean expected";
                if (message[".gogoproto.wktpointer"] != null && message.hasOwnProperty(".gogoproto.wktpointer"))
                    if (typeof message[".gogoproto.wktpointer"] !== "boolean")
                        return ".gogoproto.wktpointer: boolean expected";
                if (message[".gogoproto.castrepeated"] != null && message.hasOwnProperty(".gogoproto.castrepeated"))
                    if (!$util.isString(message[".gogoproto.castrepeated"]))
                        return ".gogoproto.castrepeated: string expected";
                return null;
            };

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.FieldOptions} FieldOptions
             */
            FieldOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.FieldOptions)
                    return object;
                let message = new $root.google.protobuf.FieldOptions();
                switch (object.ctype) {
                case "STRING":
                case 0:
                    message.ctype = 0;
                    break;
                case "CORD":
                case 1:
                    message.ctype = 1;
                    break;
                case "STRING_PIECE":
                case 2:
                    message.ctype = 2;
                    break;
                }
                if (object.packed != null)
                    message.packed = Boolean(object.packed);
                switch (object.jstype) {
                case "JS_NORMAL":
                case 0:
                    message.jstype = 0;
                    break;
                case "JS_STRING":
                case 1:
                    message.jstype = 1;
                    break;
                case "JS_NUMBER":
                case 2:
                    message.jstype = 2;
                    break;
                }
                if (object.lazy != null)
                    message.lazy = Boolean(object.lazy);
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.weak != null)
                    message.weak = Boolean(object.weak);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                if (object[".cosmos_proto.accepts_interface"] != null)
                    message[".cosmos_proto.accepts_interface"] = String(object[".cosmos_proto.accepts_interface"]);
                if (object[".gogoproto.nullable"] != null)
                    message[".gogoproto.nullable"] = Boolean(object[".gogoproto.nullable"]);
                if (object[".gogoproto.embed"] != null)
                    message[".gogoproto.embed"] = Boolean(object[".gogoproto.embed"]);
                if (object[".gogoproto.customtype"] != null)
                    message[".gogoproto.customtype"] = String(object[".gogoproto.customtype"]);
                if (object[".gogoproto.customname"] != null)
                    message[".gogoproto.customname"] = String(object[".gogoproto.customname"]);
                if (object[".gogoproto.jsontag"] != null)
                    message[".gogoproto.jsontag"] = String(object[".gogoproto.jsontag"]);
                if (object[".gogoproto.moretags"] != null)
                    message[".gogoproto.moretags"] = String(object[".gogoproto.moretags"]);
                if (object[".gogoproto.casttype"] != null)
                    message[".gogoproto.casttype"] = String(object[".gogoproto.casttype"]);
                if (object[".gogoproto.castkey"] != null)
                    message[".gogoproto.castkey"] = String(object[".gogoproto.castkey"]);
                if (object[".gogoproto.castvalue"] != null)
                    message[".gogoproto.castvalue"] = String(object[".gogoproto.castvalue"]);
                if (object[".gogoproto.stdtime"] != null)
                    message[".gogoproto.stdtime"] = Boolean(object[".gogoproto.stdtime"]);
                if (object[".gogoproto.stdduration"] != null)
                    message[".gogoproto.stdduration"] = Boolean(object[".gogoproto.stdduration"]);
                if (object[".gogoproto.wktpointer"] != null)
                    message[".gogoproto.wktpointer"] = Boolean(object[".gogoproto.wktpointer"]);
                if (object[".gogoproto.castrepeated"] != null)
                    message[".gogoproto.castrepeated"] = String(object[".gogoproto.castrepeated"]);
                return message;
            };

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.FieldOptions
             * @static
             * @param {google.protobuf.FieldOptions} message FieldOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FieldOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults) {
                    object.ctype = options.enums === String ? "STRING" : 0;
                    object.packed = false;
                    object.deprecated = false;
                    object.lazy = false;
                    object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                    object.weak = false;
                    object[".gogoproto.nullable"] = false;
                    object[".gogoproto.embed"] = false;
                    object[".gogoproto.customtype"] = "";
                    object[".gogoproto.customname"] = "";
                    object[".gogoproto.jsontag"] = "";
                    object[".gogoproto.moretags"] = "";
                    object[".gogoproto.casttype"] = "";
                    object[".gogoproto.castkey"] = "";
                    object[".gogoproto.castvalue"] = "";
                    object[".gogoproto.stdtime"] = false;
                    object[".gogoproto.stdduration"] = false;
                    object[".gogoproto.wktpointer"] = false;
                    object[".gogoproto.castrepeated"] = "";
                    object[".cosmos_proto.accepts_interface"] = "";
                }
                if (message.ctype != null && message.hasOwnProperty("ctype"))
                    object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                if (message.packed != null && message.hasOwnProperty("packed"))
                    object.packed = message.packed;
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.lazy != null && message.hasOwnProperty("lazy"))
                    object.lazy = message.lazy;
                if (message.jstype != null && message.hasOwnProperty("jstype"))
                    object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                if (message.weak != null && message.hasOwnProperty("weak"))
                    object.weak = message.weak;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                if (message[".gogoproto.nullable"] != null && message.hasOwnProperty(".gogoproto.nullable"))
                    object[".gogoproto.nullable"] = message[".gogoproto.nullable"];
                if (message[".gogoproto.embed"] != null && message.hasOwnProperty(".gogoproto.embed"))
                    object[".gogoproto.embed"] = message[".gogoproto.embed"];
                if (message[".gogoproto.customtype"] != null && message.hasOwnProperty(".gogoproto.customtype"))
                    object[".gogoproto.customtype"] = message[".gogoproto.customtype"];
                if (message[".gogoproto.customname"] != null && message.hasOwnProperty(".gogoproto.customname"))
                    object[".gogoproto.customname"] = message[".gogoproto.customname"];
                if (message[".gogoproto.jsontag"] != null && message.hasOwnProperty(".gogoproto.jsontag"))
                    object[".gogoproto.jsontag"] = message[".gogoproto.jsontag"];
                if (message[".gogoproto.moretags"] != null && message.hasOwnProperty(".gogoproto.moretags"))
                    object[".gogoproto.moretags"] = message[".gogoproto.moretags"];
                if (message[".gogoproto.casttype"] != null && message.hasOwnProperty(".gogoproto.casttype"))
                    object[".gogoproto.casttype"] = message[".gogoproto.casttype"];
                if (message[".gogoproto.castkey"] != null && message.hasOwnProperty(".gogoproto.castkey"))
                    object[".gogoproto.castkey"] = message[".gogoproto.castkey"];
                if (message[".gogoproto.castvalue"] != null && message.hasOwnProperty(".gogoproto.castvalue"))
                    object[".gogoproto.castvalue"] = message[".gogoproto.castvalue"];
                if (message[".gogoproto.stdtime"] != null && message.hasOwnProperty(".gogoproto.stdtime"))
                    object[".gogoproto.stdtime"] = message[".gogoproto.stdtime"];
                if (message[".gogoproto.stdduration"] != null && message.hasOwnProperty(".gogoproto.stdduration"))
                    object[".gogoproto.stdduration"] = message[".gogoproto.stdduration"];
                if (message[".gogoproto.wktpointer"] != null && message.hasOwnProperty(".gogoproto.wktpointer"))
                    object[".gogoproto.wktpointer"] = message[".gogoproto.wktpointer"];
                if (message[".gogoproto.castrepeated"] != null && message.hasOwnProperty(".gogoproto.castrepeated"))
                    object[".gogoproto.castrepeated"] = message[".gogoproto.castrepeated"];
                if (message[".cosmos_proto.accepts_interface"] != null && message.hasOwnProperty(".cosmos_proto.accepts_interface"))
                    object[".cosmos_proto.accepts_interface"] = message[".cosmos_proto.accepts_interface"];
                return object;
            };

            /**
             * Converts this FieldOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.FieldOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FieldOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * CType enum.
             * @name google.protobuf.FieldOptions.CType
             * @enum {number}
             * @property {number} STRING=0 STRING value
             * @property {number} CORD=1 CORD value
             * @property {number} STRING_PIECE=2 STRING_PIECE value
             */
            FieldOptions.CType = (function() {
                const valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "STRING"] = 0;
                values[valuesById[1] = "CORD"] = 1;
                values[valuesById[2] = "STRING_PIECE"] = 2;
                return values;
            })();

            /**
             * JSType enum.
             * @name google.protobuf.FieldOptions.JSType
             * @enum {number}
             * @property {number} JS_NORMAL=0 JS_NORMAL value
             * @property {number} JS_STRING=1 JS_STRING value
             * @property {number} JS_NUMBER=2 JS_NUMBER value
             */
            FieldOptions.JSType = (function() {
                const valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "JS_NORMAL"] = 0;
                values[valuesById[1] = "JS_STRING"] = 1;
                values[valuesById[2] = "JS_NUMBER"] = 2;
                return values;
            })();

            return FieldOptions;
        })();

        protobuf.OneofOptions = (function() {

            /**
             * Properties of an OneofOptions.
             * @memberof google.protobuf
             * @interface IOneofOptions
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] OneofOptions uninterpreted_option
             */

            /**
             * Constructs a new OneofOptions.
             * @memberof google.protobuf
             * @classdesc Represents an OneofOptions.
             * @implements IOneofOptions
             * @constructor
             * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
             */
            function OneofOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * OneofOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.OneofOptions
             * @instance
             */
            OneofOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            OneofOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.OneofOptions} OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            OneofOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.OneofOptions} OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an OneofOptions message.
             * @function verify
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            OneofOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                return null;
            };

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.OneofOptions} OneofOptions
             */
            OneofOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.OneofOptions)
                    return object;
                let message = new $root.google.protobuf.OneofOptions();
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.OneofOptions
             * @static
             * @param {google.protobuf.OneofOptions} message OneofOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            OneofOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                return object;
            };

            /**
             * Converts this OneofOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.OneofOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            OneofOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return OneofOptions;
        })();

        protobuf.EnumOptions = (function() {

            /**
             * Properties of an EnumOptions.
             * @memberof google.protobuf
             * @interface IEnumOptions
             * @property {boolean|null} [allow_alias] EnumOptions allow_alias
             * @property {boolean|null} [deprecated] EnumOptions deprecated
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
             * @property {boolean|null} [".gogoproto.goproto_enum_prefix"] EnumOptions .gogoproto.goproto_enum_prefix
             * @property {boolean|null} [".gogoproto.goproto_enum_stringer"] EnumOptions .gogoproto.goproto_enum_stringer
             * @property {boolean|null} [".gogoproto.enum_stringer"] EnumOptions .gogoproto.enum_stringer
             * @property {string|null} [".gogoproto.enum_customname"] EnumOptions .gogoproto.enum_customname
             * @property {boolean|null} [".gogoproto.enumdecl"] EnumOptions .gogoproto.enumdecl
             */

            /**
             * Constructs a new EnumOptions.
             * @memberof google.protobuf
             * @classdesc Represents an EnumOptions.
             * @implements IEnumOptions
             * @constructor
             * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
             */
            function EnumOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * EnumOptions allow_alias.
             * @member {boolean} allow_alias
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype.allow_alias = false;

            /**
             * EnumOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype.deprecated = false;

            /**
             * EnumOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * EnumOptions .gogoproto.goproto_enum_prefix.
             * @member {boolean} .gogoproto.goproto_enum_prefix
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype[".gogoproto.goproto_enum_prefix"] = false;

            /**
             * EnumOptions .gogoproto.goproto_enum_stringer.
             * @member {boolean} .gogoproto.goproto_enum_stringer
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype[".gogoproto.goproto_enum_stringer"] = false;

            /**
             * EnumOptions .gogoproto.enum_stringer.
             * @member {boolean} .gogoproto.enum_stringer
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype[".gogoproto.enum_stringer"] = false;

            /**
             * EnumOptions .gogoproto.enum_customname.
             * @member {string} .gogoproto.enum_customname
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype[".gogoproto.enum_customname"] = "";

            /**
             * EnumOptions .gogoproto.enumdecl.
             * @member {boolean} .gogoproto.enumdecl
             * @memberof google.protobuf.EnumOptions
             * @instance
             */
            EnumOptions.prototype[".gogoproto.enumdecl"] = false;

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.allow_alias != null && Object.hasOwnProperty.call(message, "allow_alias"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allow_alias);
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                if (message[".gogoproto.goproto_enum_prefix"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_prefix"))
                    writer.uint32(/* id 62001, wireType 0 =*/496008).bool(message[".gogoproto.goproto_enum_prefix"]);
                if (message[".gogoproto.goproto_enum_stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_stringer"))
                    writer.uint32(/* id 62021, wireType 0 =*/496168).bool(message[".gogoproto.goproto_enum_stringer"]);
                if (message[".gogoproto.enum_stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enum_stringer"))
                    writer.uint32(/* id 62022, wireType 0 =*/496176).bool(message[".gogoproto.enum_stringer"]);
                if (message[".gogoproto.enum_customname"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enum_customname"))
                    writer.uint32(/* id 62023, wireType 2 =*/496186).string(message[".gogoproto.enum_customname"]);
                if (message[".gogoproto.enumdecl"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enumdecl"))
                    writer.uint32(/* id 62024, wireType 0 =*/496192).bool(message[".gogoproto.enumdecl"]);
                return writer;
            };

            /**
             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.EnumOptions} EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 2:
                        message.allow_alias = reader.bool();
                        break;
                    case 3:
                        message.deprecated = reader.bool();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    case 62001:
                        message[".gogoproto.goproto_enum_prefix"] = reader.bool();
                        break;
                    case 62021:
                        message[".gogoproto.goproto_enum_stringer"] = reader.bool();
                        break;
                    case 62022:
                        message[".gogoproto.enum_stringer"] = reader.bool();
                        break;
                    case 62023:
                        message[".gogoproto.enum_customname"] = reader.string();
                        break;
                    case 62024:
                        message[".gogoproto.enumdecl"] = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.EnumOptions} EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an EnumOptions message.
             * @function verify
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            EnumOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                    if (typeof message.allow_alias !== "boolean")
                        return "allow_alias: boolean expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                if (message[".gogoproto.goproto_enum_prefix"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix"))
                    if (typeof message[".gogoproto.goproto_enum_prefix"] !== "boolean")
                        return ".gogoproto.goproto_enum_prefix: boolean expected";
                if (message[".gogoproto.goproto_enum_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer"))
                    if (typeof message[".gogoproto.goproto_enum_stringer"] !== "boolean")
                        return ".gogoproto.goproto_enum_stringer: boolean expected";
                if (message[".gogoproto.enum_stringer"] != null && message.hasOwnProperty(".gogoproto.enum_stringer"))
                    if (typeof message[".gogoproto.enum_stringer"] !== "boolean")
                        return ".gogoproto.enum_stringer: boolean expected";
                if (message[".gogoproto.enum_customname"] != null && message.hasOwnProperty(".gogoproto.enum_customname"))
                    if (!$util.isString(message[".gogoproto.enum_customname"]))
                        return ".gogoproto.enum_customname: string expected";
                if (message[".gogoproto.enumdecl"] != null && message.hasOwnProperty(".gogoproto.enumdecl"))
                    if (typeof message[".gogoproto.enumdecl"] !== "boolean")
                        return ".gogoproto.enumdecl: boolean expected";
                return null;
            };

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.EnumOptions} EnumOptions
             */
            EnumOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.EnumOptions)
                    return object;
                let message = new $root.google.protobuf.EnumOptions();
                if (object.allow_alias != null)
                    message.allow_alias = Boolean(object.allow_alias);
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                if (object[".gogoproto.goproto_enum_prefix"] != null)
                    message[".gogoproto.goproto_enum_prefix"] = Boolean(object[".gogoproto.goproto_enum_prefix"]);
                if (object[".gogoproto.goproto_enum_stringer"] != null)
                    message[".gogoproto.goproto_enum_stringer"] = Boolean(object[".gogoproto.goproto_enum_stringer"]);
                if (object[".gogoproto.enum_stringer"] != null)
                    message[".gogoproto.enum_stringer"] = Boolean(object[".gogoproto.enum_stringer"]);
                if (object[".gogoproto.enum_customname"] != null)
                    message[".gogoproto.enum_customname"] = String(object[".gogoproto.enum_customname"]);
                if (object[".gogoproto.enumdecl"] != null)
                    message[".gogoproto.enumdecl"] = Boolean(object[".gogoproto.enumdecl"]);
                return message;
            };

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.EnumOptions
             * @static
             * @param {google.protobuf.EnumOptions} message EnumOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            EnumOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults) {
                    object.allow_alias = false;
                    object.deprecated = false;
                    object[".gogoproto.goproto_enum_prefix"] = false;
                    object[".gogoproto.goproto_enum_stringer"] = false;
                    object[".gogoproto.enum_stringer"] = false;
                    object[".gogoproto.enum_customname"] = "";
                    object[".gogoproto.enumdecl"] = false;
                }
                if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                    object.allow_alias = message.allow_alias;
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                if (message[".gogoproto.goproto_enum_prefix"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix"))
                    object[".gogoproto.goproto_enum_prefix"] = message[".gogoproto.goproto_enum_prefix"];
                if (message[".gogoproto.goproto_enum_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer"))
                    object[".gogoproto.goproto_enum_stringer"] = message[".gogoproto.goproto_enum_stringer"];
                if (message[".gogoproto.enum_stringer"] != null && message.hasOwnProperty(".gogoproto.enum_stringer"))
                    object[".gogoproto.enum_stringer"] = message[".gogoproto.enum_stringer"];
                if (message[".gogoproto.enum_customname"] != null && message.hasOwnProperty(".gogoproto.enum_customname"))
                    object[".gogoproto.enum_customname"] = message[".gogoproto.enum_customname"];
                if (message[".gogoproto.enumdecl"] != null && message.hasOwnProperty(".gogoproto.enumdecl"))
                    object[".gogoproto.enumdecl"] = message[".gogoproto.enumdecl"];
                return object;
            };

            /**
             * Converts this EnumOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.EnumOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            EnumOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return EnumOptions;
        })();

        protobuf.EnumValueOptions = (function() {

            /**
             * Properties of an EnumValueOptions.
             * @memberof google.protobuf
             * @interface IEnumValueOptions
             * @property {boolean|null} [deprecated] EnumValueOptions deprecated
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
             * @property {string|null} [".gogoproto.enumvalue_customname"] EnumValueOptions .gogoproto.enumvalue_customname
             */

            /**
             * Constructs a new EnumValueOptions.
             * @memberof google.protobuf
             * @classdesc Represents an EnumValueOptions.
             * @implements IEnumValueOptions
             * @constructor
             * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
             */
            function EnumValueOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * EnumValueOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.EnumValueOptions
             * @instance
             */
            EnumValueOptions.prototype.deprecated = false;

            /**
             * EnumValueOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.EnumValueOptions
             * @instance
             */
            EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * EnumValueOptions .gogoproto.enumvalue_customname.
             * @member {string} .gogoproto.enumvalue_customname
             * @memberof google.protobuf.EnumValueOptions
             * @instance
             */
            EnumValueOptions.prototype[".gogoproto.enumvalue_customname"] = "";

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumValueOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                if (message[".gogoproto.enumvalue_customname"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enumvalue_customname"))
                    writer.uint32(/* id 66001, wireType 2 =*/528010).string(message[".gogoproto.enumvalue_customname"]);
                return writer;
            };

            /**
             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumValueOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.deprecated = reader.bool();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    case 66001:
                        message[".gogoproto.enumvalue_customname"] = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an EnumValueOptions message.
             * @function verify
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            EnumValueOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                if (message[".gogoproto.enumvalue_customname"] != null && message.hasOwnProperty(".gogoproto.enumvalue_customname"))
                    if (!$util.isString(message[".gogoproto.enumvalue_customname"]))
                        return ".gogoproto.enumvalue_customname: string expected";
                return null;
            };

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
             */
            EnumValueOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.EnumValueOptions)
                    return object;
                let message = new $root.google.protobuf.EnumValueOptions();
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                if (object[".gogoproto.enumvalue_customname"] != null)
                    message[".gogoproto.enumvalue_customname"] = String(object[".gogoproto.enumvalue_customname"]);
                return message;
            };

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.EnumValueOptions
             * @static
             * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            EnumValueOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults) {
                    object.deprecated = false;
                    object[".gogoproto.enumvalue_customname"] = "";
                }
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                if (message[".gogoproto.enumvalue_customname"] != null && message.hasOwnProperty(".gogoproto.enumvalue_customname"))
                    object[".gogoproto.enumvalue_customname"] = message[".gogoproto.enumvalue_customname"];
                return object;
            };

            /**
             * Converts this EnumValueOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.EnumValueOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            EnumValueOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return EnumValueOptions;
        })();

        protobuf.ServiceOptions = (function() {

            /**
             * Properties of a ServiceOptions.
             * @memberof google.protobuf
             * @interface IServiceOptions
             * @property {boolean|null} [deprecated] ServiceOptions deprecated
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
             */

            /**
             * Constructs a new ServiceOptions.
             * @memberof google.protobuf
             * @classdesc Represents a ServiceOptions.
             * @implements IServiceOptions
             * @constructor
             * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
             */
            function ServiceOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ServiceOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.ServiceOptions
             * @instance
             */
            ServiceOptions.prototype.deprecated = false;

            /**
             * ServiceOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.ServiceOptions
             * @instance
             */
            ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ServiceOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.ServiceOptions} ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ServiceOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 33:
                        message.deprecated = reader.bool();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.ServiceOptions} ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ServiceOptions message.
             * @function verify
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ServiceOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.ServiceOptions} ServiceOptions
             */
            ServiceOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.ServiceOptions)
                    return object;
                let message = new $root.google.protobuf.ServiceOptions();
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.ServiceOptions
             * @static
             * @param {google.protobuf.ServiceOptions} message ServiceOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ServiceOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults)
                    object.deprecated = false;
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                return object;
            };

            /**
             * Converts this ServiceOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.ServiceOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ServiceOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return ServiceOptions;
        })();

        protobuf.MethodOptions = (function() {

            /**
             * Properties of a MethodOptions.
             * @memberof google.protobuf
             * @interface IMethodOptions
             * @property {boolean|null} [deprecated] MethodOptions deprecated
             * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
             * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
             */

            /**
             * Constructs a new MethodOptions.
             * @memberof google.protobuf
             * @classdesc Represents a MethodOptions.
             * @implements IMethodOptions
             * @constructor
             * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
             */
            function MethodOptions(properties) {
                this.uninterpreted_option = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MethodOptions deprecated.
             * @member {boolean} deprecated
             * @memberof google.protobuf.MethodOptions
             * @instance
             */
            MethodOptions.prototype.deprecated = false;

            /**
             * MethodOptions uninterpreted_option.
             * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
             * @memberof google.protobuf.MethodOptions
             * @instance
             */
            MethodOptions.prototype.uninterpreted_option = $util.emptyArray;

            /**
             * MethodOptions .google.api.http.
             * @member {google.api.IHttpRule|null|undefined} .google.api.http
             * @memberof google.protobuf.MethodOptions
             * @instance
             */
            MethodOptions.prototype[".google.api.http"] = null;

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MethodOptions.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                    writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                    for (let i = 0; i < message.uninterpreted_option.length; ++i)
                        $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                    $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.MethodOptions} MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MethodOptions.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 33:
                        message.deprecated = reader.bool();
                        break;
                    case 999:
                        if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                            message.uninterpreted_option = [];
                        message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                        break;
                    case 72295728:
                        message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.MethodOptions} MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MethodOptions message.
             * @function verify
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MethodOptions.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    if (typeof message.deprecated !== "boolean")
                        return "deprecated: boolean expected";
                if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                    if (!Array.isArray(message.uninterpreted_option))
                        return "uninterpreted_option: array expected";
                    for (let i = 0; i < message.uninterpreted_option.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                        if (error)
                            return "uninterpreted_option." + error;
                    }
                }
                if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                    let error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                    if (error)
                        return ".google.api.http." + error;
                }
                return null;
            };

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.MethodOptions} MethodOptions
             */
            MethodOptions.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.MethodOptions)
                    return object;
                let message = new $root.google.protobuf.MethodOptions();
                if (object.deprecated != null)
                    message.deprecated = Boolean(object.deprecated);
                if (object.uninterpreted_option) {
                    if (!Array.isArray(object.uninterpreted_option))
                        throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                    message.uninterpreted_option = [];
                    for (let i = 0; i < object.uninterpreted_option.length; ++i) {
                        if (typeof object.uninterpreted_option[i] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                        message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                    }
                }
                if (object[".google.api.http"] != null) {
                    if (typeof object[".google.api.http"] !== "object")
                        throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                    message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                }
                return message;
            };

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.MethodOptions
             * @static
             * @param {google.protobuf.MethodOptions} message MethodOptions
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MethodOptions.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.uninterpreted_option = [];
                if (options.defaults) {
                    object.deprecated = false;
                    object[".google.api.http"] = null;
                }
                if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                    object.deprecated = message.deprecated;
                if (message.uninterpreted_option && message.uninterpreted_option.length) {
                    object.uninterpreted_option = [];
                    for (let j = 0; j < message.uninterpreted_option.length; ++j)
                        object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                }
                if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                    object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                return object;
            };

            /**
             * Converts this MethodOptions to JSON.
             * @function toJSON
             * @memberof google.protobuf.MethodOptions
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MethodOptions.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return MethodOptions;
        })();

        protobuf.UninterpretedOption = (function() {

            /**
             * Properties of an UninterpretedOption.
             * @memberof google.protobuf
             * @interface IUninterpretedOption
             * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
             * @property {string|null} [identifier_value] UninterpretedOption identifier_value
             * @property {Long|null} [positive_int_value] UninterpretedOption positive_int_value
             * @property {Long|null} [negative_int_value] UninterpretedOption negative_int_value
             * @property {number|null} [double_value] UninterpretedOption double_value
             * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
             * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
             */

            /**
             * Constructs a new UninterpretedOption.
             * @memberof google.protobuf
             * @classdesc Represents an UninterpretedOption.
             * @implements IUninterpretedOption
             * @constructor
             * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
             */
            function UninterpretedOption(properties) {
                this.name = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UninterpretedOption name.
             * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.name = $util.emptyArray;

            /**
             * UninterpretedOption identifier_value.
             * @member {string} identifier_value
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.identifier_value = "";

            /**
             * UninterpretedOption positive_int_value.
             * @member {Long} positive_int_value
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * UninterpretedOption negative_int_value.
             * @member {Long} negative_int_value
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * UninterpretedOption double_value.
             * @member {number} double_value
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.double_value = 0;

            /**
             * UninterpretedOption string_value.
             * @member {Uint8Array} string_value
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.string_value = $util.newBuffer([]);

            /**
             * UninterpretedOption aggregate_value.
             * @member {string} aggregate_value
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             */
            UninterpretedOption.prototype.aggregate_value = "";

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UninterpretedOption.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && message.name.length)
                    for (let i = 0; i < message.name.length; ++i)
                        $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.identifier_value != null && Object.hasOwnProperty.call(message, "identifier_value"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                if (message.positive_int_value != null && Object.hasOwnProperty.call(message, "positive_int_value"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                if (message.negative_int_value != null && Object.hasOwnProperty.call(message, "negative_int_value"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                if (message.double_value != null && Object.hasOwnProperty.call(message, "double_value"))
                    writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                if (message.string_value != null && Object.hasOwnProperty.call(message, "string_value"))
                    writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                if (message.aggregate_value != null && Object.hasOwnProperty.call(message, "aggregate_value"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                return writer;
            };

            /**
             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UninterpretedOption.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 2:
                        if (!(message.name && message.name.length))
                            message.name = [];
                        message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                        break;
                    case 3:
                        message.identifier_value = reader.string();
                        break;
                    case 4:
                        message.positive_int_value = reader.uint64();
                        break;
                    case 5:
                        message.negative_int_value = reader.int64();
                        break;
                    case 6:
                        message.double_value = reader.double();
                        break;
                    case 7:
                        message.string_value = reader.bytes();
                        break;
                    case 8:
                        message.aggregate_value = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UninterpretedOption message.
             * @function verify
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UninterpretedOption.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name")) {
                    if (!Array.isArray(message.name))
                        return "name: array expected";
                    for (let i = 0; i < message.name.length; ++i) {
                        let error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                        if (error)
                            return "name." + error;
                    }
                }
                if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                    if (!$util.isString(message.identifier_value))
                        return "identifier_value: string expected";
                if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                    if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                        return "positive_int_value: integer|Long expected";
                if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                    if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                        return "negative_int_value: integer|Long expected";
                if (message.double_value != null && message.hasOwnProperty("double_value"))
                    if (typeof message.double_value !== "number")
                        return "double_value: number expected";
                if (message.string_value != null && message.hasOwnProperty("string_value"))
                    if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                        return "string_value: buffer expected";
                if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                    if (!$util.isString(message.aggregate_value))
                        return "aggregate_value: string expected";
                return null;
            };

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
             */
            UninterpretedOption.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.UninterpretedOption)
                    return object;
                let message = new $root.google.protobuf.UninterpretedOption();
                if (object.name) {
                    if (!Array.isArray(object.name))
                        throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                    message.name = [];
                    for (let i = 0; i < object.name.length; ++i) {
                        if (typeof object.name[i] !== "object")
                            throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                        message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                    }
                }
                if (object.identifier_value != null)
                    message.identifier_value = String(object.identifier_value);
                if (object.positive_int_value != null)
                    if ($util.Long)
                        (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                    else if (typeof object.positive_int_value === "string")
                        message.positive_int_value = parseInt(object.positive_int_value, 10);
                    else if (typeof object.positive_int_value === "number")
                        message.positive_int_value = object.positive_int_value;
                    else if (typeof object.positive_int_value === "object")
                        message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                if (object.negative_int_value != null)
                    if ($util.Long)
                        (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                    else if (typeof object.negative_int_value === "string")
                        message.negative_int_value = parseInt(object.negative_int_value, 10);
                    else if (typeof object.negative_int_value === "number")
                        message.negative_int_value = object.negative_int_value;
                    else if (typeof object.negative_int_value === "object")
                        message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                if (object.double_value != null)
                    message.double_value = Number(object.double_value);
                if (object.string_value != null)
                    if (typeof object.string_value === "string")
                        $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                    else if (object.string_value.length)
                        message.string_value = object.string_value;
                if (object.aggregate_value != null)
                    message.aggregate_value = String(object.aggregate_value);
                return message;
            };

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.UninterpretedOption
             * @static
             * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UninterpretedOption.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.name = [];
                if (options.defaults) {
                    object.identifier_value = "";
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.positive_int_value = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, false);
                        object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.negative_int_value = options.longs === String ? "0" : 0;
                    object.double_value = 0;
                    if (options.bytes === String)
                        object.string_value = "";
                    else {
                        object.string_value = [];
                        if (options.bytes !== Array)
                            object.string_value = $util.newBuffer(object.string_value);
                    }
                    object.aggregate_value = "";
                }
                if (message.name && message.name.length) {
                    object.name = [];
                    for (let j = 0; j < message.name.length; ++j)
                        object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                }
                if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                    object.identifier_value = message.identifier_value;
                if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                    if (typeof message.positive_int_value === "number")
                        object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                    else
                        object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                    if (typeof message.negative_int_value === "number")
                        object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                    else
                        object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                if (message.double_value != null && message.hasOwnProperty("double_value"))
                    object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                if (message.string_value != null && message.hasOwnProperty("string_value"))
                    object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                    object.aggregate_value = message.aggregate_value;
                return object;
            };

            /**
             * Converts this UninterpretedOption to JSON.
             * @function toJSON
             * @memberof google.protobuf.UninterpretedOption
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UninterpretedOption.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            UninterpretedOption.NamePart = (function() {

                /**
                 * Properties of a NamePart.
                 * @memberof google.protobuf.UninterpretedOption
                 * @interface INamePart
                 * @property {string} name_part NamePart name_part
                 * @property {boolean} is_extension NamePart is_extension
                 */

                /**
                 * Constructs a new NamePart.
                 * @memberof google.protobuf.UninterpretedOption
                 * @classdesc Represents a NamePart.
                 * @implements INamePart
                 * @constructor
                 * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                 */
                function NamePart(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * NamePart name_part.
                 * @member {string} name_part
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @instance
                 */
                NamePart.prototype.name_part = "";

                /**
                 * NamePart is_extension.
                 * @member {boolean} is_extension
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @instance
                 */
                NamePart.prototype.is_extension = false;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NamePart.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                    return writer;
                };

                /**
                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NamePart.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name_part = reader.string();
                            break;
                        case 2:
                            message.is_extension = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("name_part"))
                        throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                    if (!message.hasOwnProperty("is_extension"))
                        throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a NamePart message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NamePart.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a NamePart message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NamePart.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.name_part))
                        return "name_part: string expected";
                    if (typeof message.is_extension !== "boolean")
                        return "is_extension: boolean expected";
                    return null;
                };

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                 */
                NamePart.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                        return object;
                    let message = new $root.google.protobuf.UninterpretedOption.NamePart();
                    if (object.name_part != null)
                        message.name_part = String(object.name_part);
                    if (object.is_extension != null)
                        message.is_extension = Boolean(object.is_extension);
                    return message;
                };

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @static
                 * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NamePart.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.name_part = "";
                        object.is_extension = false;
                    }
                    if (message.name_part != null && message.hasOwnProperty("name_part"))
                        object.name_part = message.name_part;
                    if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                        object.is_extension = message.is_extension;
                    return object;
                };

                /**
                 * Converts this NamePart to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption.NamePart
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NamePart.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return NamePart;
            })();

            return UninterpretedOption;
        })();

        protobuf.SourceCodeInfo = (function() {

            /**
             * Properties of a SourceCodeInfo.
             * @memberof google.protobuf
             * @interface ISourceCodeInfo
             * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
             */

            /**
             * Constructs a new SourceCodeInfo.
             * @memberof google.protobuf
             * @classdesc Represents a SourceCodeInfo.
             * @implements ISourceCodeInfo
             * @constructor
             * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
             */
            function SourceCodeInfo(properties) {
                this.location = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SourceCodeInfo location.
             * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
             * @memberof google.protobuf.SourceCodeInfo
             * @instance
             */
            SourceCodeInfo.prototype.location = $util.emptyArray;

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SourceCodeInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.location != null && message.location.length)
                    for (let i = 0; i < message.location.length; ++i)
                        $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SourceCodeInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.location && message.location.length))
                            message.location = [];
                        message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SourceCodeInfo message.
             * @function verify
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SourceCodeInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.location != null && message.hasOwnProperty("location")) {
                    if (!Array.isArray(message.location))
                        return "location: array expected";
                    for (let i = 0; i < message.location.length; ++i) {
                        let error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                        if (error)
                            return "location." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
             */
            SourceCodeInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.SourceCodeInfo)
                    return object;
                let message = new $root.google.protobuf.SourceCodeInfo();
                if (object.location) {
                    if (!Array.isArray(object.location))
                        throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                    message.location = [];
                    for (let i = 0; i < object.location.length; ++i) {
                        if (typeof object.location[i] !== "object")
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                        message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.SourceCodeInfo
             * @static
             * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SourceCodeInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.location = [];
                if (message.location && message.location.length) {
                    object.location = [];
                    for (let j = 0; j < message.location.length; ++j)
                        object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                }
                return object;
            };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @function toJSON
             * @memberof google.protobuf.SourceCodeInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SourceCodeInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            SourceCodeInfo.Location = (function() {

                /**
                 * Properties of a Location.
                 * @memberof google.protobuf.SourceCodeInfo
                 * @interface ILocation
                 * @property {Array.<number>|null} [path] Location path
                 * @property {Array.<number>|null} [span] Location span
                 * @property {string|null} [leading_comments] Location leading_comments
                 * @property {string|null} [trailing_comments] Location trailing_comments
                 * @property {Array.<string>|null} [leading_detached_comments] Location leading_detached_comments
                 */

                /**
                 * Constructs a new Location.
                 * @memberof google.protobuf.SourceCodeInfo
                 * @classdesc Represents a Location.
                 * @implements ILocation
                 * @constructor
                 * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                 */
                function Location(properties) {
                    this.path = [];
                    this.span = [];
                    this.leading_detached_comments = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Location path.
                 * @member {Array.<number>} path
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @instance
                 */
                Location.prototype.path = $util.emptyArray;

                /**
                 * Location span.
                 * @member {Array.<number>} span
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @instance
                 */
                Location.prototype.span = $util.emptyArray;

                /**
                 * Location leading_comments.
                 * @member {string} leading_comments
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @instance
                 */
                Location.prototype.leading_comments = "";

                /**
                 * Location trailing_comments.
                 * @member {string} trailing_comments
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @instance
                 */
                Location.prototype.trailing_comments = "";

                /**
                 * Location leading_detached_comments.
                 * @member {Array.<string>} leading_detached_comments
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @instance
                 */
                Location.prototype.leading_detached_comments = $util.emptyArray;

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Location.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.path != null && message.path.length) {
                        writer.uint32(/* id 1, wireType 2 =*/10).fork();
                        for (let i = 0; i < message.path.length; ++i)
                            writer.int32(message.path[i]);
                        writer.ldelim();
                    }
                    if (message.span != null && message.span.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (let i = 0; i < message.span.length; ++i)
                            writer.int32(message.span[i]);
                        writer.ldelim();
                    }
                    if (message.leading_comments != null && Object.hasOwnProperty.call(message, "leading_comments"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.leading_comments);
                    if (message.trailing_comments != null && Object.hasOwnProperty.call(message, "trailing_comments"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailing_comments);
                    if (message.leading_detached_comments != null && message.leading_detached_comments.length)
                        for (let i = 0; i < message.leading_detached_comments.length; ++i)
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.leading_detached_comments[i]);
                    return writer;
                };

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Location.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo.Location} Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Location.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.path && message.path.length))
                                message.path = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.path.push(reader.int32());
                            } else
                                message.path.push(reader.int32());
                            break;
                        case 2:
                            if (!(message.span && message.span.length))
                                message.span = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.span.push(reader.int32());
                            } else
                                message.span.push(reader.int32());
                            break;
                        case 3:
                            message.leading_comments = reader.string();
                            break;
                        case 4:
                            message.trailing_comments = reader.string();
                            break;
                        case 6:
                            if (!(message.leading_detached_comments && message.leading_detached_comments.length))
                                message.leading_detached_comments = [];
                            message.leading_detached_comments.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo.Location} Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Location.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Location message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Location.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.path != null && message.hasOwnProperty("path")) {
                        if (!Array.isArray(message.path))
                            return "path: array expected";
                        for (let i = 0; i < message.path.length; ++i)
                            if (!$util.isInteger(message.path[i]))
                                return "path: integer[] expected";
                    }
                    if (message.span != null && message.hasOwnProperty("span")) {
                        if (!Array.isArray(message.span))
                            return "span: array expected";
                        for (let i = 0; i < message.span.length; ++i)
                            if (!$util.isInteger(message.span[i]))
                                return "span: integer[] expected";
                    }
                    if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                        if (!$util.isString(message.leading_comments))
                            return "leading_comments: string expected";
                    if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                        if (!$util.isString(message.trailing_comments))
                            return "trailing_comments: string expected";
                    if (message.leading_detached_comments != null && message.hasOwnProperty("leading_detached_comments")) {
                        if (!Array.isArray(message.leading_detached_comments))
                            return "leading_detached_comments: array expected";
                        for (let i = 0; i < message.leading_detached_comments.length; ++i)
                            if (!$util.isString(message.leading_detached_comments[i]))
                                return "leading_detached_comments: string[] expected";
                    }
                    return null;
                };

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo.Location} Location
                 */
                Location.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                        return object;
                    let message = new $root.google.protobuf.SourceCodeInfo.Location();
                    if (object.path) {
                        if (!Array.isArray(object.path))
                            throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                        message.path = [];
                        for (let i = 0; i < object.path.length; ++i)
                            message.path[i] = object.path[i] | 0;
                    }
                    if (object.span) {
                        if (!Array.isArray(object.span))
                            throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                        message.span = [];
                        for (let i = 0; i < object.span.length; ++i)
                            message.span[i] = object.span[i] | 0;
                    }
                    if (object.leading_comments != null)
                        message.leading_comments = String(object.leading_comments);
                    if (object.trailing_comments != null)
                        message.trailing_comments = String(object.trailing_comments);
                    if (object.leading_detached_comments) {
                        if (!Array.isArray(object.leading_detached_comments))
                            throw TypeError(".google.protobuf.SourceCodeInfo.Location.leading_detached_comments: array expected");
                        message.leading_detached_comments = [];
                        for (let i = 0; i < object.leading_detached_comments.length; ++i)
                            message.leading_detached_comments[i] = String(object.leading_detached_comments[i]);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @static
                 * @param {google.protobuf.SourceCodeInfo.Location} message Location
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Location.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults) {
                        object.path = [];
                        object.span = [];
                        object.leading_detached_comments = [];
                    }
                    if (options.defaults) {
                        object.leading_comments = "";
                        object.trailing_comments = "";
                    }
                    if (message.path && message.path.length) {
                        object.path = [];
                        for (let j = 0; j < message.path.length; ++j)
                            object.path[j] = message.path[j];
                    }
                    if (message.span && message.span.length) {
                        object.span = [];
                        for (let j = 0; j < message.span.length; ++j)
                            object.span[j] = message.span[j];
                    }
                    if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                        object.leading_comments = message.leading_comments;
                    if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                        object.trailing_comments = message.trailing_comments;
                    if (message.leading_detached_comments && message.leading_detached_comments.length) {
                        object.leading_detached_comments = [];
                        for (let j = 0; j < message.leading_detached_comments.length; ++j)
                            object.leading_detached_comments[j] = message.leading_detached_comments[j];
                    }
                    return object;
                };

                /**
                 * Converts this Location to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo.Location
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Location.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Location;
            })();

            return SourceCodeInfo;
        })();

        protobuf.GeneratedCodeInfo = (function() {

            /**
             * Properties of a GeneratedCodeInfo.
             * @memberof google.protobuf
             * @interface IGeneratedCodeInfo
             * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
             */

            /**
             * Constructs a new GeneratedCodeInfo.
             * @memberof google.protobuf
             * @classdesc Represents a GeneratedCodeInfo.
             * @implements IGeneratedCodeInfo
             * @constructor
             * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
             */
            function GeneratedCodeInfo(properties) {
                this.annotation = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GeneratedCodeInfo annotation.
             * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
             * @memberof google.protobuf.GeneratedCodeInfo
             * @instance
             */
            GeneratedCodeInfo.prototype.annotation = $util.emptyArray;

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GeneratedCodeInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.annotation != null && message.annotation.length)
                    for (let i = 0; i < message.annotation.length; ++i)
                        $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GeneratedCodeInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.annotation && message.annotation.length))
                            message.annotation = [];
                        message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GeneratedCodeInfo message.
             * @function verify
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GeneratedCodeInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.annotation != null && message.hasOwnProperty("annotation")) {
                    if (!Array.isArray(message.annotation))
                        return "annotation: array expected";
                    for (let i = 0; i < message.annotation.length; ++i) {
                        let error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                        if (error)
                            return "annotation." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
             */
            GeneratedCodeInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                    return object;
                let message = new $root.google.protobuf.GeneratedCodeInfo();
                if (object.annotation) {
                    if (!Array.isArray(object.annotation))
                        throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                    message.annotation = [];
                    for (let i = 0; i < object.annotation.length; ++i) {
                        if (typeof object.annotation[i] !== "object")
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                        message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.GeneratedCodeInfo
             * @static
             * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GeneratedCodeInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.annotation = [];
                if (message.annotation && message.annotation.length) {
                    object.annotation = [];
                    for (let j = 0; j < message.annotation.length; ++j)
                        object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                }
                return object;
            };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @function toJSON
             * @memberof google.protobuf.GeneratedCodeInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            GeneratedCodeInfo.Annotation = (function() {

                /**
                 * Properties of an Annotation.
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @interface IAnnotation
                 * @property {Array.<number>|null} [path] Annotation path
                 * @property {string|null} [source_file] Annotation source_file
                 * @property {number|null} [begin] Annotation begin
                 * @property {number|null} [end] Annotation end
                 */

                /**
                 * Constructs a new Annotation.
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @classdesc Represents an Annotation.
                 * @implements IAnnotation
                 * @constructor
                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                 */
                function Annotation(properties) {
                    this.path = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Annotation path.
                 * @member {Array.<number>} path
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @instance
                 */
                Annotation.prototype.path = $util.emptyArray;

                /**
                 * Annotation source_file.
                 * @member {string} source_file
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @instance
                 */
                Annotation.prototype.source_file = "";

                /**
                 * Annotation begin.
                 * @member {number} begin
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @instance
                 */
                Annotation.prototype.begin = 0;

                /**
                 * Annotation end.
                 * @member {number} end
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @instance
                 */
                Annotation.prototype.end = 0;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Annotation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.path != null && message.path.length) {
                        writer.uint32(/* id 1, wireType 2 =*/10).fork();
                        for (let i = 0; i < message.path.length; ++i)
                            writer.int32(message.path[i]);
                        writer.ldelim();
                    }
                    if (message.source_file != null && Object.hasOwnProperty.call(message, "source_file"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.source_file);
                    if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                    if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                    return writer;
                };

                /**
                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Annotation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.path && message.path.length))
                                message.path = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.path.push(reader.int32());
                            } else
                                message.path.push(reader.int32());
                            break;
                        case 2:
                            message.source_file = reader.string();
                            break;
                        case 3:
                            message.begin = reader.int32();
                            break;
                        case 4:
                            message.end = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes an Annotation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Annotation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an Annotation message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Annotation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.path != null && message.hasOwnProperty("path")) {
                        if (!Array.isArray(message.path))
                            return "path: array expected";
                        for (let i = 0; i < message.path.length; ++i)
                            if (!$util.isInteger(message.path[i]))
                                return "path: integer[] expected";
                    }
                    if (message.source_file != null && message.hasOwnProperty("source_file"))
                        if (!$util.isString(message.source_file))
                            return "source_file: string expected";
                    if (message.begin != null && message.hasOwnProperty("begin"))
                        if (!$util.isInteger(message.begin))
                            return "begin: integer expected";
                    if (message.end != null && message.hasOwnProperty("end"))
                        if (!$util.isInteger(message.end))
                            return "end: integer expected";
                    return null;
                };

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                 */
                Annotation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                        return object;
                    let message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                    if (object.path) {
                        if (!Array.isArray(object.path))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                        message.path = [];
                        for (let i = 0; i < object.path.length; ++i)
                            message.path[i] = object.path[i] | 0;
                    }
                    if (object.source_file != null)
                        message.source_file = String(object.source_file);
                    if (object.begin != null)
                        message.begin = object.begin | 0;
                    if (object.end != null)
                        message.end = object.end | 0;
                    return message;
                };

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Annotation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults)
                        object.path = [];
                    if (options.defaults) {
                        object.source_file = "";
                        object.begin = 0;
                        object.end = 0;
                    }
                    if (message.path && message.path.length) {
                        object.path = [];
                        for (let j = 0; j < message.path.length; ++j)
                            object.path[j] = message.path[j];
                    }
                    if (message.source_file != null && message.hasOwnProperty("source_file"))
                        object.source_file = message.source_file;
                    if (message.begin != null && message.hasOwnProperty("begin"))
                        object.begin = message.begin;
                    if (message.end != null && message.hasOwnProperty("end"))
                        object.end = message.end;
                    return object;
                };

                /**
                 * Converts this Annotation to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Annotation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Annotation;
            })();

            return GeneratedCodeInfo;
        })();

        protobuf.Any = (function() {

            /**
             * Properties of an Any.
             * @memberof google.protobuf
             * @interface IAny
             * @property {string|null} [type_url] Any type_url
             * @property {Uint8Array|null} [value] Any value
             */

            /**
             * Constructs a new Any.
             * @memberof google.protobuf
             * @classdesc Represents an Any.
             * @implements IAny
             * @constructor
             * @param {google.protobuf.IAny=} [properties] Properties to set
             */
            function Any(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Any type_url.
             * @member {string} type_url
             * @memberof google.protobuf.Any
             * @instance
             */
            Any.prototype.type_url = "";

            /**
             * Any value.
             * @member {Uint8Array} value
             * @memberof google.protobuf.Any
             * @instance
             */
            Any.prototype.value = $util.newBuffer([]);

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.IAny} message Any message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Any.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.IAny} message Any message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Any.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Any
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Any} Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Any.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.type_url = reader.string();
                        break;
                    case 2:
                        message.value = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Any
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Any} Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Any.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an Any message.
             * @function verify
             * @memberof google.protobuf.Any
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Any.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type_url != null && message.hasOwnProperty("type_url"))
                    if (!$util.isString(message.type_url))
                        return "type_url: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Any
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Any} Any
             */
            Any.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Any)
                    return object;
                let message = new $root.google.protobuf.Any();
                if (object.type_url != null)
                    message.type_url = String(object.type_url);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length)
                        message.value = object.value;
                return message;
            };

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.Any} message Any
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Any.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.type_url = "";
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.type_url != null && message.hasOwnProperty("type_url"))
                    object.type_url = message.type_url;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };

            /**
             * Converts this Any to JSON.
             * @function toJSON
             * @memberof google.protobuf.Any
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Any.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Any;
        })();

        protobuf.Timestamp = (function() {

            /**
             * Properties of a Timestamp.
             * @memberof google.protobuf
             * @interface ITimestamp
             * @property {Long|null} [seconds] Timestamp seconds
             * @property {number|null} [nanos] Timestamp nanos
             */

            /**
             * Constructs a new Timestamp.
             * @memberof google.protobuf
             * @classdesc Represents a Timestamp.
             * @implements ITimestamp
             * @constructor
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             */
            function Timestamp(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Timestamp seconds.
             * @member {Long} seconds
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Timestamp nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.nanos = 0;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.seconds = reader.int64();
                        break;
                    case 2:
                        message.nanos = reader.int32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Timestamp message.
             * @function verify
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Timestamp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Timestamp} Timestamp
             */
            Timestamp.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Timestamp)
                    return object;
                let message = new $root.google.protobuf.Timestamp();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.Timestamp} message Timestamp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Timestamp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Timestamp to JSON.
             * @function toJSON
             * @memberof google.protobuf.Timestamp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Timestamp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Timestamp;
        })();

        protobuf.Duration = (function() {

            /**
             * Properties of a Duration.
             * @memberof google.protobuf
             * @interface IDuration
             * @property {Long|null} [seconds] Duration seconds
             * @property {number|null} [nanos] Duration nanos
             */

            /**
             * Constructs a new Duration.
             * @memberof google.protobuf
             * @classdesc Represents a Duration.
             * @implements IDuration
             * @constructor
             * @param {google.protobuf.IDuration=} [properties] Properties to set
             */
            function Duration(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Duration seconds.
             * @member {Long} seconds
             * @memberof google.protobuf.Duration
             * @instance
             */
            Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Duration nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Duration
             * @instance
             */
            Duration.prototype.nanos = 0;

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration} message Duration message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Duration.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration} message Duration message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Duration.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Duration
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Duration} Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Duration.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.seconds = reader.int64();
                        break;
                    case 2:
                        message.nanos = reader.int32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Duration
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Duration} Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Duration.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Duration message.
             * @function verify
             * @memberof google.protobuf.Duration
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Duration.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Duration
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Duration} Duration
             */
            Duration.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Duration)
                    return object;
                let message = new $root.google.protobuf.Duration();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.Duration} message Duration
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Duration.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Duration to JSON.
             * @function toJSON
             * @memberof google.protobuf.Duration
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Duration.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Duration;
        })();

        return protobuf;
    })();

    return google;
})();

export { $root as default };
